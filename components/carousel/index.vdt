import {getRestProps, mapChildren} from '../utils';
import CarouselItem from './item';
import Button from '../button';
import Icon from '../icon';

const {className, children, arrow} = self.get();

const classNameObj = {
    'k-carousel': true,
    [className]: className,
    [`k-${arrow}`]: true,
};

self._values = [];
let index = 0;
const _children = mapChildren(children, vNode => {
    if (vNode.tag === CarouselItem) {
        const props = vNode.props;
        const _props = {_parent: self};
        if (props.value == null) {
            _props.value = `$${index++}`;
        }
        vNode.props = {...props, ..._props};
        self._values.push(vNode.props.value);
    }
    return vNode;
});

<div class={{ classNameObj }} {{ ...getRestProps(self) }}>
    <div class="k-wrapper">
        {{ _children }}
    </div>
    <Button icon circle type="none" size="large" class="k-prev"
        ev-click={{ self._prev }}
    >
        <Icon class="ion-ios-arrow-left" />
    </Button>
    <Button icon circle type="none" size="large" class="k-next"
        ev-click={{ self._next }}
    >
        <Icon class="ion-ios-arrow-right" />
    </Button>
    <div class="k-indicator c-clearfix">
        <div v-for={{ self._values }}
            class={{ {'k-dot': true, 'k-active': self._isActive(value)} }}
            ev-click={{ self._changeValue.bind(self, value) }}
        ></div>
    </div>
</div>

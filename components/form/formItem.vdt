const {
    className, children, label, style, 
    isValid, isDirty, isShowLabel, htmlFor
} = self.get();

const classNameObj = {
    'k-form-item': true,
    'k-invalid': isDirty && !isValid,
    'k-valid': isDirty && isValid,
    [className]: className,
};

// vdt does not support return `v-if & v-else` element in root,
// like: 
//     '<div v-if={{ true }}>true</div>'
//     '<label v-else>false</label>'
// so wrap it.
// const Wrapper = (props) => {
//     return h(props._tagName, props, props.children); 
// }

<div class={{ classNameObj }} style={{ style }}
    ev-change={{ self._dirty.bind(self) }}
>
    <label for={{ htmlFor }} class="k-label" v-if={{ isShowLabel }}>
        <b:label>{{ label }}</b:label>
    </label>
    <div class="k-content">
        <b:content>{{ children }}</b:content>
        <Animate v-if={{ self.get('isValid') === false }} class="k-error"
            a:transition="fade"
        >{{ self.get('message') }}</Animate>
    </div>
</div>

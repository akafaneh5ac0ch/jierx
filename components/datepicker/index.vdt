import Input from '../input';
import Button from '../button';
import Tooltip from '../tooltip';
import ScrollSelect from '../scrollSelect';
import {Row, Col} from '../grid';

const {
    value, clearable, className, style,
    name, _showDate, _now, maxDate, minDate,
    placeholder, disabled, disabledDate,
    multiple, size, _isShowYearPicker
} = self.get();

const classNameObj = {
    'k-datepicker': true,
    'k-disabled': disabled,
    [className]: className,
}

const values = multiple ? value || [] : [value];

const showDate = new Date(_showDate || values[values.length - 1] || _now);

<div class={{ classNameObj }} style={{ style }}>
    <Tooltip class="k-datepicker-content" 
        position={{ {my: 'left top', at: 'left bottom'} }}
        trigger="click"
        showArrow={{ false }}
        transition="dropdown"
        ref="calendar"
        ev-hide={{ self.onHide.bind(self) }}
        ev-beforeShow={{ self.onBeforeShow.bind(self) }}
        disabled={{ disabled }}
    >
        <Input placeholder={{ placeholder }} readonly 
            value={{ values.join(', ') }}
            clearable={{ clearable }}
            ev-clear={{ self.onClear.bind(self) }}
            name={{ name }}
            disabled={{ disabled }}
            size={{ size }}
        >
            <b:suffix><i class="ion-ios-calendar-outline"></i></b:suffix>
        </Input>
        <b:content>
            <div class="k-month c-clearfix">
                <Button icon type="none" size="small" class="k-prev"
                    ev-click={{ self.prevYear.bind(self) }}
                >
                    <i class="k-icon ion-ios-arrow-left"></i>
                    <i class="k-icon ion-ios-arrow-left"></i>
                </Button>
                <Button icon type="none" size="small" class="k-prev"
                    ev-click={{ self.prevMonth.bind(self) }}
                >
                    <i class="k-icon ion-ios-arrow-left"></i>
                </Button>
                <span
                    class="k-text-wrapper"
                    ev-click={{ self.showYearPicker.bind(self) }}
                >
                    <span class="k-text">{{ showDate.getFullYear() }}年</span>
                    <span class="k-text">{{ showDate.getMonth() + 1 }}月</span>
                </span>
                <Button icon type="none" size="small" class="k-next"
                    ev-click={{ self.nextYear.bind(self) }}
                >
                    <i class="k-icon ion-ios-arrow-right"></i>
                    <i class="k-icon ion-ios-arrow-right"></i>
                </Button>
                <Button icon type="none" size="small" class="k-next"
                    ev-click={{ self.nextMonth.bind(self) }}
                >
                    <i class="k-icon ion-ios-arrow-right"></i>
                </Button>
            </div>
            <div class="k-weekdays" v-if={{ !_isShowYearPicker }}>
                <div class="k-weekday"
                    v-for={{ ['日', '一', '二', '三', '四', '五', '六'] }}
                >{{ value }}</div>
            </div>
            <div class="k-calendar" v-if={{ !_isShowYearPicker }}>
                {{ do {
                    const ret = [];
                    const start = new Date(showDate);
                    const month = start.getMonth();
                    start.setDate(1);
                    const startWeekday = start.getDay(); 
                    start.setDate(1 - startWeekday);

                    for (let i = 0; i < 42; i++) {
                        const _date = start.getDate();
                        const _month = start.getMonth();
                        const disabled = self.isGT(start, new Date(maxDate)) ||
                            self.isLT(start, new Date(minDate)) ||
                            disabledDate.call(self, self.getDateString(start));
                        ret.push(
                            <div 
                                class={{ {
                                    "k-day": true,
                                    "k-out": _month !== month,
                                    "k-active": values.find(value => {
                                        return self.isEqual(new Date(value), start);
                                    }),
                                    "k-today": self.isEqual(_now, start),
                                    "k-disabled": disabled, 
                                } }}
                                ev-click={{ !disabled && self.select.bind(self, new Date(start)) }}
                            >{{ _date }}</div>
                        );
                        start.setDate(start.getDate() + 1);
                    }
                    const result = [];
                    for (let i = 0; i < 6; i++) {
                        result.push(<div>{{ ret.slice(7 * i, 7 * (i + 1)) }}</div>)
                    }
                    result;
                } }}
            </div>
            <Row v-if={{ _isShowYearPicker }} class="k-year-picker">
                <Col span="12">
                    <ScrollSelect 
                        data={{ (value) => {
                            return Array.apply(null, {length: 10})
                                .map((v, i) => i + value - 5);
                        } }}
                        value={{ showDate.getFullYear() }}
                        ev-$change:value={{ self.onChangeYear.bind(self) }}
                    />
                </Col>
                <Col span="12">
                    <ScrollSelect 
                        data={{ 
                            Array.apply(null, {length: 12})
                                .map((v, i) => {
                                    return {label: `${i + 1}月`, value: i};
                                })
                        }}
                        value={{ showDate.getMonth() }}
                        ev-$change:value={{ self.onChangeMonth.bind(self) }}
                    />
                </Col>
            </Row>
        </b:content>
    </Tooltip>
</div>

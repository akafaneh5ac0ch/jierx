const {
    type, className, percent, status, size, 
    showText, innerText, ref, key, strokeWidth,
    children, ...rest
} = self.get();

const classNameObj = {
    'k-progress' : true,
    [`k-${type}`]: type,
    [className]: className,
    [`k-${status}`]: status !== 'normal',
    [`k-${size}`]: size !== 'default',
}

<div class={{ classNameObj }}>
    <div class="k-canvas" v-if={{ type === 'bar' }}>
        <div class="k-container">
            <div  class='k-content'>
                <div class="k-bg" style={{ {width: percent + '%'} }}>
                    <div class='k-inner-text' v-if={{ innerText }}>
                        {{ percent }} %
                    </div>
                </div>
            </div>
        </div>
    </div>
    <svg class="k-canvas" viewBox="0 0 120 120" v-if={{ type === 'circle' }}>
        {{ do {
            const r = (120 - strokeWidth) / 2;
            const circumference = 2 * Math.PI * r;

            [
                <circle class="k-meter" cx="60" cy="60" r={{ r }}
                    stroke-width={{ strokeWidth }}
                />,
                <circle class="k-value" cx="60" cy="60" r={{ r }}
                    stroke-dashoffset={{ circumference * (1 - percent / 100) }} 
                    stroke-dasharray={{ circumference }}
                    stroke-width={{ strokeWidth }}
                />
            ]
        } }}
    </svg>
    <div class="k-text" v-if={{ children }}>{{ children }}</div>
    <div class="k-text" v-else-if={{ showText }}>
        <span v-if={{ status !== 'success' && status !== 'error' }}>{{ percent }}%</span>
        <span v-if={{ status === 'success' }}>100%</span>
        <span v-if={{ status === 'error' }}></span>
    </div>
</div>

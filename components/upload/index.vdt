import Button from '../button';
import Progress from '../progress';
import {expandAnimationCallbacks} from '../utils';

const {
    className, style, accept, multiple,
    files, children, type, _dragOver,
} = self.get();

const classNameObj = {
    'k-upload': true,
    [className]: className,
    'k-drag': type === 'drag', 
    'k-dragover': _dragOver,
};

const events = {
    'ev-click': self._selectFile,
};
if (type === 'drag') {
    events['ev-dragover'] = self._preventDefault;
    events['ev-dragenter'] = self._onDragEnter;
    events['ev-dragleave'] = self._onDragLeave;
    events['ev-drop'] = self._onDrop;
}

<div class={{ classNameObj }} style={{ style }}>
    <input type="file" 
        accept={{ accept }}
        class="c-hidden" 
        ref="input" 
        ev-change={{ self._onInputChange}}
        multiple={{ multiple }}
    />
    <div class="k-handle" {{ ...events }} ref="handle">{{ children }}</div>
    <div class="k-tip" v-if={{ blocks.tip }}><b:tip /></div>
    <div class="k-files">
        <Animate v-for={{ files }} 
            class={{ {"k-file": true, 'k-error': value.status === 'error'} }}
            key={{ value.uid }}
            a:transition="expand"
            {{ ...expandAnimationCallbacks }}
        >
            <div class="k-wrapper">
                <div class="k-name c-ellipsis">
                    <i class="k-file-icon ion-document"></i>
                    {{ value.name }}
                    <div class="k-icons">
                        <Button type="none" icon size="mini" class="k-close"
                            ev-click={{ self._removeFile.bind(self, value, key) }}
                        >
                            <i class="k-icon ion-ios-close-empty"></i>
                        </Button>
                        <i class="k-status-icon ion-ios-checkmark-outline" v-if={{ value.status === 'done' }}></i>
                        <i class="k-status-icon ion-ios-close-outline" v-if={{ value.status === 'error' }}></i>
                    </div>
                </div>
                <Animate key="progress" 
                    a:transition="expand" 
                    v-if={{ value.status !== 'done' && value.status !== 'error' }}
                    {{ ...expandAnimationCallbacks }}
                >
                    <Progress percent={{ value.percent }} size="mini" />
                </Animate>
            </div>
        </Animate>
    </div>
</div>

import gutterStyle from './utils';
import {isNullOrUndefined} from '../utils';

let {
    children, span, className,
    style, gutter, offset
} = self.get();

const {xs, sm, md, lg, xl} = self;

let hasGutter = gutter > 0;
if (hasGutter) {
    style = gutterStyle(gutter, style, 'padding');
}

const classNameObj = {
    'k-col': true,
    [`k-${span}`]: span,
    [className]: className && !hasGutter,
    [`k-offset-${offset}`]: offset > 0,
};
// add responsive class
['xs', 'sm', 'md', 'lg', 'xl'].forEach(item => {
    const obj = self[item];
    if (!obj) return;
    if (!isNullOrUndefined(obj.span)) {
        classNameObj[`k-${item}-${obj.span}`] = true;
    }
    if (!isNullOrUndefined(obj.order)) {
        classNameObj[`k-${item}-order-${obj.order}`] = true;
    }
    if (!isNullOrUndefined(obj.offset)) {
        classNameObj[`k-${item}-offset-${obj.offset}`] = true;
    }
});

<div class={{ classNameObj }} style={{ style }}>{{
    hasGutter ?
        <div class={{ className }}>{{ children }}</div> :
        children
}}</div>

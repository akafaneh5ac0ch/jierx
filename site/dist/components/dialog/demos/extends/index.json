{
    "setting": {
        "title": "继承弹窗",
        "order": 3
    },
    "catalogs": [],
    "contents": "<p>在实际应用中，弹窗的逻辑一般都很复杂，通过继承，我们可以控制弹窗的各个细节，例如：点击确定时进行表单验证，发送请求，延迟关闭等等。将这些业务逻辑封装在单独的模块中，是推荐的做法。</p>\n",
    "codes": [
        {
            "language": "vdt",
            "content": "<t:parent>\n    <b:body>\n        Hello\n    </b:body>\n</t:parent>",
            "file": "dialog.vdt"
        },
        {
            "language": "js",
            "content": "import Dialog from 'kpc/components/dialog';\nimport template from './dialog.vdt';\n\nexport default class extends Dialog {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {...super.defaults(), title: 'Extends Dialog'};\n    }\n\n    ok() {\n        this.showLoading();\n        setTimeout(() => {\n            this.close();\n            this.trigger(\"ok\", 'test');\n        }, 2000);\n    }\n}",
            "file": "dialog.js"
        },
        {
            "language": "vdt",
            "content": "import Button from 'kpc/components/button';\n\n<Button type=\"primary\" ev-click={{ self.showDialog }}>Show Dialog</Button>"
        },
        {
            "language": "js",
            "content": "import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Dialog from './dialog';\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    showDialog() {\n        const dialog = this.dialog = new Dialog();\n        dialog.show();\n        dialog.on('ok', (data) => {\n            Message.info(`data from dialog: ${data}`);\n        });\n    }\n\n    _destroy() {\n        if (this.dialog) {\n            this.dialog.close();\n        }\n    }\n}"
        }
    ],
    "index": 80,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\">&lt;t:parent&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b:body</span>&gt;</span>\n        Hello\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b:body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">t:parent</span>&gt;</span></span></code></pre>",
            "file": "dialog.vdt"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./dialog.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Dialog</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {...super.defaults(), <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'Extends Dialog'</span>};\n    }\n\n    ok() {\n        <span class=\"hljs-keyword\">this</span>.showLoading();\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.close();\n            <span class=\"hljs-keyword\">this</span>.trigger(<span class=\"hljs-string\">\"ok\"</span>, <span class=\"hljs-string\">'test'</span>);\n        }, <span class=\"hljs-number\">2000</span>);\n    }\n}</code></pre>",
            "file": "dialog.js"
        },
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showDialog</span> }}&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./dialog'</span>;\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showDialog() {\n        <span class=\"hljs-keyword\">const</span> dialog = <span class=\"hljs-keyword\">this</span>.dialog = <span class=\"hljs-keyword\">new</span> Dialog();\n        dialog.show();\n        dialog.on(<span class=\"hljs-string\">'ok'</span>, (data) =&gt; {\n            Message.info(<span class=\"hljs-string\">`data from dialog: <span class=\"hljs-subst\">${data}</span>`</span>);\n        });\n    }\n\n    _destroy() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.dialog) {\n            <span class=\"hljs-keyword\">this</span>.dialog.close();\n        }\n    }\n}</code></pre>"
        }
    ]
}
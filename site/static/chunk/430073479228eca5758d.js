webpackJsonp([2],{

/***/ "./components/breadcrumb/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.BreadcrumbItem = exports.Breadcrumb = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/breadcrumb/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/breadcrumb/index.styl");

var _item = __webpack_require__("./components/breadcrumb/item.js");

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Breadcrumb = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Breadcrumb, _Intact);

    function Breadcrumb() {
        _classCallCheck(this, Breadcrumb);

        return _possibleConstructorReturn(this, (Breadcrumb.__proto__ || Object.getPrototypeOf(Breadcrumb)).apply(this, arguments));
    }

    _createClass(Breadcrumb, [{
        key: 'defaults',
        value: function defaults() {
            return {
                separator: undefined
            };
        }
    }]);

    return Breadcrumb;
}(_intact2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Breadcrumb;
exports.Breadcrumb = Breadcrumb;
exports.BreadcrumbItem = _item2.default;

/***/ }),

/***/ "./components/breadcrumb/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/breadcrumb/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/breadcrumb/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/breadcrumb/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/breadcrumb/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        separator = _self$get.separator,
        className = _self$get.className,
        style = _self$get.style;

    var classNameObj = _defineProperty({
        'k-breadcrumb': true
    }, className, className);

    var _children = children ? Array.isArray(children) ? children : [children] : children;

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, ['\n    ', function () {
        try {
            return [__u.map(_children, function (vNode, index) {
                if (vNode.tag === _item2.default) {
                    vNode.props = _extends({}, vNode.props);
                    if (separator != null && vNode.props.separator == null) {
                        vNode.props.separator = separator;
                    }
                    if (index === _children.length - 1) {
                        vNode.props.separator = null;
                    }
                }
                return vNode;
            })][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), ' \n'], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _item = __webpack_require__("./components/breadcrumb/item.js");

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/breadcrumb/item.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _item = __webpack_require__("./components/breadcrumb/item.vdt");

var _item2 = _interopRequireDefault(_item);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var BreadcrumbItem = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(BreadcrumbItem, _Intact);

    function BreadcrumbItem() {
        _classCallCheck(this, BreadcrumbItem);

        return _possibleConstructorReturn(this, (BreadcrumbItem.__proto__ || Object.getPrototypeOf(BreadcrumbItem)).apply(this, arguments));
    }

    _createClass(BreadcrumbItem, [{
        key: 'defaults',
        value: function defaults() {
            return {
                to: undefined,
                separator: '>'
            };
        }
    }, {
        key: 'onClick',
        value: function onClick() {
            var to = this.get('to');
            if (to) {
                window.location.href = to;
            }
        }
    }]);

    return BreadcrumbItem;
}(_intact2.default), _class2.template = _item2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = BreadcrumbItem;
module.exports = exports['default'];

/***/ }),

/***/ "./components/breadcrumb/item.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

  _Vdt || (_Vdt = Vdt);
  obj || (obj = {});
  blocks || (blocks = {});
  var h = _Vdt.miss.h,
      hc = _Vdt.miss.hc,
      hu = _Vdt.miss.hu,
      widgets = this && this.widgets || {},
      _blocks = {},
      __blocks = {},
      __u = _Vdt.utils,
      extend = __u.extend,
      _e = __u.error,
      _className = __u.className,
      __o = __u.Options,
      _getModel = __o.getModel,
      _setModel = __o.setModel,
      _setCheckboxModel = __u.setCheckboxModel,
      _detectCheckboxChecked = __u.detectCheckboxChecked,
      _setSelectModel = __u.setSelectModel,
      self = this.data,
      scope = obj,
      Animate = self && self.Animate,
      parent = ($callee || {})._super;

  var _self$get = self.get(),
      to = _self$get.to,
      separator = _self$get.separator,
      children = _self$get.children;

  return h('div', null, [function () {
    try {
      return [to][0];
    } catch (e) {
      _e(e);
    }
  }.call(this) ? h('a', { 'ev-click': function () {
      try {
        return [self.onClick][0];
      } catch (e) {
        _e(e);
      }
    }.call(this) }, function () {
    try {
      return [children][0];
    } catch (e) {
      _e(e);
    }
  }.call(this), 'k-item-link') : h('span', null, function () {
    try {
      return [children][0];
    } catch (e) {
      _e(e);
    }
  }.call(this), 'k-item-link'), function () {
    try {
      return [separator != null][0];
    } catch (e) {
      _e(e);
    }
  }.call(this) ? h('span', { 'innerHTML': function () {
      try {
        return [separator][0];
      } catch (e) {
        _e(e);
      }
    }.call(this) }, null, 'k-separator') : undefined], 'k-item');
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/checkbox/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Checkbox = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/checkbox/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/checkbox/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var isArray = _intact2.default.Vdt.utils.isArray;
var Checkbox = (_temp = _class = function (_Intact) {
    _inherits(Checkbox, _Intact);

    function Checkbox() {
        _classCallCheck(this, Checkbox);

        return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));
    }

    _createClass(Checkbox, [{
        key: 'defaults',
        value: function defaults() {
            return {
                disabled: false,
                value: false,
                trueValue: true,
                falseValue: false
            };
        }
    }, {
        key: '_destroy',


        // set value to falseValue when destroy
        value: function _destroy() {
            // we must use _context to get value, because it maybe has changed
            var model = this.get('v-model');
            if (!model) return;

            var value = this.get('_context').data.get(model);
            if (!value) return;
            var trueValue = this.get('trueValue');
            if (this.isChecked()) {
                if (isArray(value)) {
                    value = value.slice(0);
                    var index = value.indexOf(trueValue);
                    value.splice(index, 1);
                    this.set('value', value);
                } else {
                    this.set('value', this.get('falseValue'));
                }
            }
        }
    }, {
        key: 'isChecked',
        value: function isChecked() {
            var value = this.get('value');
            var trueValue = this.get('trueValue');
            return isArray(value) ? value.indexOf(trueValue) > -1 : value === trueValue;
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Checkbox;
}(_intact2.default), _class.propTypes = {
    disabled: Boolean }, _temp);
exports.default = Checkbox;
exports.Checkbox = Checkbox;

/***/ }),

/***/ "./components/checkbox/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/checkbox/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/checkbox/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/checkbox/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/checkbox/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        disabled = _self$get.disabled,
        falseValue = _self$get.falseValue,
        children = _self$get.children,
        value = _self$get.value,
        trueValue = _self$get.trueValue,
        style = _self$get.style,
        ref = _self$get.ref,
        key = _self$get.key,
        rest = _objectWithoutProperties(_self$get, ['className', 'disabled', 'falseValue', 'children', 'value', 'trueValue', 'style', 'ref', 'key']);

    var classNameObj = _defineProperty({
        'k-checkbox': true,
        'k-disabled': disabled,
        'k-checked': self.isChecked()
    }, className, className);

    return h('label', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('span', null, h('input', _extends({ 'type': 'checkbox', 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'value': function () {
            try {
                return [trueValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [rest][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), { checked: _detectCheckboxChecked(self, 'value', function () {
            try {
                return [trueValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)), 'ev-change': function evChange(__e) {
            _setCheckboxModel(self, 'value', function () {
                try {
                    return [trueValue][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), function () {
                try {
                    return [falseValue][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), __e);
        } })), 'k-wrapper'), function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('span', null, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-text') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/datepicker/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Datepicker = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/datepicker/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/datepicker/index.styl");

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

function getNowDate() {
    // only date without time
    var now = new Date();
    now.setHours(0);
    now.setMinutes(0);
    now.setSeconds(0);

    return now;
}

var Datepicker = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Datepicker, _Intact);

    function Datepicker() {
        _classCallCheck(this, Datepicker);

        return _possibleConstructorReturn(this, (Datepicker.__proto__ || Object.getPrototypeOf(Datepicker)).apply(this, arguments));
    }

    _createClass(Datepicker, [{
        key: 'defaults',
        value: function defaults() {
            return {
                value: undefined,
                clearable: false,
                maxDate: undefined,
                minDate: undefined,
                placeholder: undefined,
                disabled: false,
                disabledDate: function disabledDate(date) {
                    return false;
                },

                multiple: false,
                size: 'default',
                type: 'date', // date | datetime
                hours: (0, _utils.range)(0, 23),
                minutes: (0, _utils.range)(0, 59),
                seconds: (0, _utils.range)(0, 59),
                disabledHours: false,
                disabledMinutes: false,
                disabledSeconds: false,

                _showDate: undefined,
                _now: getNowDate(),
                _isShowYearPicker: false,
                _isSelectTime: false
            };
        }
    }, {
        key: 'select',
        value: function select(value, e) {
            value = this.getDateString(value);
            var type = this.get('type');
            if (!this.get('multiple')) {
                this.set('value', value);
                if (type !== 'datetime') {
                    this.refs.calendar.hide();
                } else {
                    e._rawEvent._dropdown = true;
                    this.set('_isSelectTime', true);
                }
            } else {
                var values = this.get('value');
                if (!Array.isArray(values)) {
                    values = [];
                } else {
                    values = values.slice(0);
                }
                var index = values.indexOf(value);
                if (~index) {
                    values.splice(index, 1);
                } else {
                    values.push(value);
                }
                this.set('value', values);
            }
        }
    }, {
        key: 'getDateString',
        value: function getDateString(date) {
            var _date = [date.getFullYear(), (0, _utils.strPad)(date.getMonth() + 1, 2), (0, _utils.strPad)(date.getDate(), 2)].join('-');
            if (this.get('type') !== 'datetime') {
                return _date;
            }
            var _time = [(0, _utils.strPad)(date.getHours(), 2), (0, _utils.strPad)(date.getMinutes(), 2), (0, _utils.strPad)(date.getSeconds(), 2)].join(':');
            return _date + ' ' + _time;
        }
    }, {
        key: 'isEqual',
        value: function isEqual(a, b) {
            if (a && b) {
                return a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();
            }
            return false;
        }
    }, {
        key: 'isLT',
        value: function isLT(a, b) {
            if (a && b) {
                var aYear = a.getFullYear();
                var bYear = b.getFullYear();
                if (aYear < bYear) {
                    return true;
                } else if (aYear > bYear) {
                    return false;
                }

                var aMonth = a.getMonth();
                var bMonth = b.getMonth();
                if (aMonth < bMonth) {
                    return true;
                } else if (aMonth > bMonth) {
                    return false;
                }

                var aDay = a.getDate();
                var bDay = b.getDate();
                if (aDay < bDay) {
                    return true;
                } else if (aDay > bDay) {
                    return false;
                }
            }

            return false;
        }
    }, {
        key: 'isGT',
        value: function isGT(a, b) {
            return this.isLT(b, a);
        }
    }, {
        key: 'onClear',
        value: function onClear(e) {
            e.stopPropagation();
            this.set('value', undefined);
        }
    }, {
        key: 'prevMonth',
        value: function prevMonth() {
            this.setRelativeMonth(-1);
        }
    }, {
        key: 'nextMonth',
        value: function nextMonth() {
            this.setRelativeMonth(1);
        }
    }, {
        key: 'prevYear',
        value: function prevYear() {
            this.setRelativeYear(-1);
        }
    }, {
        key: 'nextYear',
        value: function nextYear() {
            this.setRelativeYear(1);
        }
    }, {
        key: 'setRelativeMonth',
        value: function setRelativeMonth(month) {
            var date = this.getShowDate();
            date.setMonth(date.getMonth() + month);
            this.set('_showDate', date);
        }
    }, {
        key: 'setRelativeYear',
        value: function setRelativeYear(year) {
            var date = this.getShowDate();
            date.setFullYear(date.getFullYear() + year);
            this.set('_showDate', date);
        }
    }, {
        key: 'setMonth',
        value: function setMonth(month) {
            var date = this.getShowDate();
            date.setMonth(month);
            this.set('_showDate', date);
        }
    }, {
        key: 'setYear',
        value: function setYear(year) {
            var date = this.getShowDate();
            date.setFullYear(year);
            this.set('_showDate', date);
        }
    }, {
        key: 'onChangeYear',
        value: function onChangeYear(c, value) {
            this.setYear(value);
        }
    }, {
        key: 'onChangeMonth',
        value: function onChangeMonth(c, value) {
            this.setMonth(value);
        }
    }, {
        key: 'getShowDate',
        value: function getShowDate() {
            var _get = this.get(),
                _showDate = _get._showDate,
                value = _get.value,
                _now = _get._now,
                multiple = _get.multiple;

            var values = multiple ? value || [] : [value];
            return new Date(_showDate || values[values.length - 1] || _now);
        }
    }, {
        key: 'onHide',
        value: function onHide() {
            this.set({
                '_showDate': undefined,
                '_isShowYearPicker': false,
                '_isSelectTime': false
            });
        }
    }, {
        key: 'onBeforeShow',
        value: function onBeforeShow() {
            this.set('_now', getNowDate());
        }
    }, {
        key: 'showYearPicker',
        value: function showYearPicker() {
            this.set('_isShowYearPicker', !this.get('_isShowYearPicker'));
        }
    }, {
        key: 'onChangeTime',
        value: function onChangeTime(type, c, v) {
            var _get2 = this.get(),
                value = _get2.value,
                _now = _get2._now;

            var valueDate = new Date(value || _now);
            valueDate['set' + type](v);
            this.set('value', this.getDateString(valueDate));
        }
    }, {
        key: 'confirm',
        value: function confirm() {
            this.refs.calendar.hide();
        }
    }, {
        key: 'cancel',
        value: function cancel(e) {
            e._rawEvent._dropdown = true;
            this.set('_isSelectTime', false);
        }
    }]);

    return Datepicker;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    clearable: Boolean,
    disabled: Boolean,
    multiple: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Datepicker;
exports.Datepicker = Datepicker;

/***/ }),

/***/ "./components/datepicker/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/datepicker/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/datepicker/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/datepicker/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/datepicker/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        value = _self$get.value,
        clearable = _self$get.clearable,
        className = _self$get.className,
        style = _self$get.style,
        name = _self$get.name,
        _showDate = _self$get._showDate,
        _now = _self$get._now,
        maxDate = _self$get.maxDate,
        minDate = _self$get.minDate,
        placeholder = _self$get.placeholder,
        disabled = _self$get.disabled,
        disabledDate = _self$get.disabledDate,
        multiple = _self$get.multiple,
        size = _self$get.size,
        _isShowYearPicker = _self$get._isShowYearPicker,
        _isSelectTime = _self$get._isSelectTime,
        type = _self$get.type,
        hours = _self$get.hours,
        minutes = _self$get.minutes,
        seconds = _self$get.seconds,
        disabledHours = _self$get.disabledHours,
        disabledMinutes = _self$get.disabledMinutes,
        disabledSeconds = _self$get.disabledSeconds;

    var classNameObj = _defineProperty({
        'k-datepicker': true,
        'k-disabled': disabled
    }, className, className);

    var values = multiple ? value || [] : [value];

    var valueDate = new Date(values[values.length - 1] || _now);
    var showDate = new Date(_showDate || valueDate);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, h(_tooltip2.default, { 'className': 'k-datepicker-content', 'position': function () {
            try {
                return [{ my: 'left top', at: 'left bottom' }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'trigger': 'click', 'showArrow': function () {
            try {
                return [false][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'transition': 'dropdown', 'ev-hide': function () {
            try {
                return [self.onHide][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-beforeShow': function () {
            try {
                return [self.onBeforeShow][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': h(_input2.default, { 'placeholder': function () {
                try {
                    return [placeholder == null ? type === 'datetime' ? '请选择日期和时间' : '请选择日期' : placeholder][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'readonly': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'value': function () {
                try {
                    return [values.join(', ')][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'clearable': function () {
                try {
                    return [clearable][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'ev-clear': function () {
                try {
                    return [self.onClear][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'name': function () {
                try {
                    return [name][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'disabled': function () {
                try {
                    return [disabled][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'size': function () {
                try {
                    return [size][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': null, '_context': this, '_blocks': function (blocks) {
                var _blocks = {},
                    __blocks = extend({}, blocks);
                return (_blocks.suffix = function (parent) {
                    return h('i', null, null, 'ion-ios-calendar-outline');
                }) && (__blocks.suffix = function (parent) {
                    var self = this;
                    return blocks.suffix ? blocks.suffix.call(this, function () {
                        return _blocks.suffix.call(self, parent);
                    }) : _blocks.suffix.call(this, parent);
                }) && __blocks;
            }.call(this, {}) }), '_context': this, '_blocks': function (blocks) {
            var _blocks = {},
                __blocks = extend({}, blocks);
            return (_blocks.content = function (parent) {
                return function () {
                    try {
                        return [!_isSelectTime][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h('div', null, [h('div', null, [h(_button2.default, { 'icon': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': 'none', 'size': 'small', 'className': 'k-prev', 'ev-click': function () {
                        try {
                            return [self.prevYear][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': [h('i', null, null, 'k-icon ion-ios-arrow-left'), h('i', null, null, 'k-icon ion-ios-arrow-left')], '_context': this }), h(_button2.default, { 'icon': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': 'none', 'size': 'small', 'className': 'k-prev', 'ev-click': function () {
                        try {
                            return [self.prevMonth][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-arrow-left'), '_context': this }), h('span', { 'ev-click': function () {
                        try {
                            return [self.showYearPicker][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this) }, [h('span', null, [function () {
                    try {
                        return [showDate.getFullYear()][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '年'], 'k-text'), h('span', null, [function () {
                    try {
                        return [showDate.getMonth() + 1][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '月'], 'k-text')], 'k-text-wrapper'), h(_button2.default, { 'icon': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': 'none', 'size': 'small', 'className': 'k-next', 'ev-click': function () {
                        try {
                            return [self.nextYear][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': [h('i', null, null, 'k-icon ion-ios-arrow-right'), h('i', null, null, 'k-icon ion-ios-arrow-right')], '_context': this }), h(_button2.default, { 'icon': function () {
                        try {
                            return [true][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'type': 'none', 'size': 'small', 'className': 'k-next', 'ev-click': function () {
                        try {
                            return [self.nextMonth][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-arrow-right'), '_context': this })], 'k-month c-clearfix'), function () {
                    try {
                        return [!_isShowYearPicker][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h('div', null, _Vdt.utils.map(function () {
                    try {
                        return [['日', '一', '二', '三', '四', '五', '六']][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), function (value, key) {
                    return h('div', null, function () {
                        try {
                            return [value][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'k-weekday');
                }, this), 'k-weekdays') : undefined, function () {
                    try {
                        return [!_isShowYearPicker][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h('div', null, ['\n                    ', function () {
                    var _this = this;

                    try {
                        return [function () {
                            var ret = [];
                            var start = new Date(showDate);
                            var month = start.getMonth();
                            start.setDate(1);
                            var startWeekday = start.getDay();
                            start.setDate(1 - startWeekday);

                            var _loop = function _loop(i) {
                                var _date = start.getDate();
                                var _month = start.getMonth();
                                var disabled = self.isGT(start, new Date(maxDate)) || self.isLT(start, new Date(minDate)) || disabledDate.call(self, self.getDateString(start));
                                ret.push(h('div', { 'ev-click': function () {
                                        try {
                                            return [!disabled && self.select.bind(self, new Date(start))][0];
                                        } catch (e) {
                                            _e(e);
                                        }
                                    }.call(_this) }, function () {
                                    try {
                                        return [_date][0];
                                    } catch (e) {
                                        _e(e);
                                    }
                                }.call(_this), _className(function () {
                                    try {
                                        return [{
                                            "k-day": true,
                                            "k-out": _month !== month,
                                            "k-active": values.find(function (value) {
                                                return self.isEqual(new Date(value), start);
                                            }),
                                            "k-today": self.isEqual(_now, start),
                                            "k-disabled": disabled
                                        }][0];
                                    } catch (e) {
                                        _e(e);
                                    }
                                }.call(_this))));
                                start.setDate(start.getDate() + 1);
                            };

                            for (var i = 0; i < 42; i++) {
                                _loop(i);
                            }
                            var result = [];

                            var _loop2 = function _loop2(i) {
                                result.push(h('div', null, function () {
                                    try {
                                        return [ret.slice(7 * i, 7 * (i + 1))][0];
                                    } catch (e) {
                                        _e(e);
                                    }
                                }.call(_this)));
                            };

                            for (var i = 0; i < 6; i++) {
                                _loop2(i);
                            }
                            return result;
                        }()][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '\n                '], 'k-calendar') : undefined, function () {
                    try {
                        return [_isShowYearPicker][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) ? h(_grid.Row, { 'className': 'k-year-picker', 'children': [h(_grid.Col, { 'span': '12', 'children': h(_scrollSelect2.default, { 'data': function () {
                                try {
                                    return [function (value) {
                                        return (0, _utils.range)(value - 5, value + 5);
                                    }][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'value': function () {
                                try {
                                    return [showDate.getFullYear()][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'ev-$change:value': function () {
                                try {
                                    return [self.onChangeYear][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'children': null, '_context': this }), '_context': this }), h(_grid.Col, { 'span': '12', 'children': h(_scrollSelect2.default, { 'data': function () {
                                try {
                                    return [(0, _utils.range)(0, 11).map(function (i) {
                                        return { label: i + 1 + '\u6708', value: i };
                                    })][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'value': function () {
                                try {
                                    return [showDate.getMonth()][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'ev-$change:value': function () {
                                try {
                                    return [self.onChangeMonth][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'children': null, '_context': this }), '_context': this })], '_context': this }) : undefined]) : h('div', null, [h('div', null, ['\n                    ', hc('<Button type=\"none\" size=\"small\" class=\"k-prev\"\n                        ev-click={{ self.cancel.bind(self) }}\n                    >取消</Button>'), h('span', { 'ev-click': function () {
                        try {
                            return [self.cancel][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this) }, [h('span', null, [function () {
                    try {
                        return [showDate.getFullYear()][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '年'], 'k-text'), h('span', null, [function () {
                    try {
                        return [showDate.getMonth() + 1][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), '月'], 'k-text')], 'k-text-wrapper'), '\n                    ', hc('<Button type=\"none\" size=\"small\" class=\"k-next\"\n                        ev-click={{ self.confirm.bind(self) }}\n                    >确认</Button>')], 'k-month c-clearfix'), h(_grid.Row, { 'children': [h(_grid.Col, { 'span': '8', 'children': h(_scrollSelect2.default, { 'data': function () {
                                try {
                                    return [hours.map(function (v) {
                                        return { label: (0, _utils.strPad)(v, 2), value: v };
                                    })][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'value': function () {
                                try {
                                    return [valueDate.getHours()][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'ev-$change:value': function () {
                                try {
                                    return [self.onChangeTime.bind(self, 'Hours')][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'disabled': function () {
                                try {
                                    return [disabledHours][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'children': null, '_context': this, '_blocks': function (blocks) {
                                var _blocks = {},
                                    __blocks = extend({}, blocks);
                                return (_blocks.append = function (parent) {
                                    return ':';
                                }) && (__blocks.append = function (parent) {
                                    var self = this;
                                    return blocks.append ? blocks.append.call(this, function () {
                                        return _blocks.append.call(self, parent);
                                    }) : _blocks.append.call(this, parent);
                                }) && __blocks;
                            }.call(this, {}) }), '_context': this }), h(_grid.Col, { 'span': '8', 'children': h(_scrollSelect2.default, { 'data': function () {
                                try {
                                    return [minutes.map(function (v) {
                                        return { label: (0, _utils.strPad)(v, 2), value: v };
                                    })][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'value': function () {
                                try {
                                    return [valueDate.getMinutes()][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'ev-$change:value': function () {
                                try {
                                    return [self.onChangeTime.bind(self, 'Minutes')][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'disabled': function () {
                                try {
                                    return [disabledMinutes][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'children': null, '_context': this, '_blocks': function (blocks) {
                                var _blocks = {},
                                    __blocks = extend({}, blocks);
                                return (_blocks.append = function (parent) {
                                    return ':';
                                }) && (__blocks.append = function (parent) {
                                    var self = this;
                                    return blocks.append ? blocks.append.call(this, function () {
                                        return _blocks.append.call(self, parent);
                                    }) : _blocks.append.call(this, parent);
                                }) && __blocks;
                            }.call(this, {}) }), '_context': this }), h(_grid.Col, { 'span': '8', 'children': h(_scrollSelect2.default, { 'data': function () {
                                try {
                                    return [seconds.map(function (v) {
                                        return { label: (0, _utils.strPad)(v, 2), value: v };
                                    })][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'value': function () {
                                try {
                                    return [valueDate.getSeconds()][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'ev-$change:value': function () {
                                try {
                                    return [self.onChangeTime.bind(self, 'Seconds')][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'disabled': function () {
                                try {
                                    return [disabledSeconds][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), 'children': null, '_context': this }), '_context': this })], '_context': this })], 'k-time-picker', 'time');
            }) && (__blocks.content = function (parent) {
                var self = this;
                return blocks.content ? blocks.content.call(this, function () {
                    return _blocks.content.call(self, parent);
                }) : _blocks.content.call(this, parent);
            }) && __blocks;
        }.call(this, {}) }, null, null, null, function (i) {
        widgets['calendar'] = i;
    }), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _input = __webpack_require__("./components/input/index.js");

var _input2 = _interopRequireDefault(_input);

var _button = __webpack_require__("./components/button/index.js");

var _button2 = _interopRequireDefault(_button);

var _tooltip = __webpack_require__("./components/tooltip/index.js");

var _tooltip2 = _interopRequireDefault(_tooltip);

var _scrollSelect = __webpack_require__("./components/scrollSelect/index.js");

var _scrollSelect2 = _interopRequireDefault(_scrollSelect);

var _grid = __webpack_require__("./components/grid/index.js");

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/dialog/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Dialog = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/dialog/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/dialog/index.styl");

var _position = __webpack_require__("./components/moveWrapper/position.js");

var _position2 = _interopRequireDefault(_position);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Dialog = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Dialog, _Intact);

    function Dialog() {
        _classCallCheck(this, Dialog);

        return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).apply(this, arguments));
    }

    _createClass(Dialog, [{
        key: 'defaults',
        value: function defaults() {
            return {
                title: '提示',
                value: false,
                size: 'default', // default | small
                loading: false,
                disabledOk: false,
                okText: '确认',
                cancelText: '取消',

                _dragging: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this.on('$changed:value', function (c, isShow) {
                if (isShow) _this2._center();
            });
        }
    }, {
        key: '_create',
        value: function _create() {
            // use as component
            if (this.parentVNode) {
                this._useAsComponent = true;
            }
        }
    }, {
        key: '_mount',
        value: function _mount(lastVNode, nextVNode) {
            // for debug
            window.__dialog = this;

            this._center();

            document.addEventListener('keydown', this._escClose);
        }
    }, {
        key: 'showLoading',
        value: function showLoading() {
            this.set('loading', true);
        }
    }, {
        key: 'hideLoading',
        value: function hideLoading() {
            this.set('loading', false);
        }
    }, {
        key: 'disableOk',
        value: function disableOk() {
            this.set('disabledOk', true);
        }
    }, {
        key: 'enableOk',
        value: function enableOk() {
            this.set('disabledOk', false);
        }
    }, {
        key: 'close',
        value: function close() {
            this.set('value', false);
        }
    }, {
        key: 'cancel',
        value: function cancel() {
            this.close();
            this.trigger('cancel', this);
        }
    }, {
        key: 'ok',
        value: function ok() {
            this.close();
            this.trigger('ok', this);
        }
    }, {
        key: 'show',
        value: function show() {
            var _this3 = this;

            if (this.get('value')) return;
            // use as component
            if (this._useAsComponent) {
                return this.set('value', true);
            }
            // use as instance
            if (this.rendered) {
                this.set('value', true);
            } else {
                var show = function show() {
                    _this3.init();
                    _this3.mount();
                    _this3.set('value', true);
                };
                if (this.inited) {
                    show();
                } else {
                    this.on('$inited', show);
                }
            }
        }
    }, {
        key: '_escClose',
        value: function _escClose(e) {
            // Esc
            if (e.keyCode === 27) this.close();
        }
    }, {
        key: '_leaveEnd',
        value: function _leaveEnd() {
            // use as instance or use as component but it has be destroyed
            // then remove the element
            if (!this._useAsComponent || this._useAsComponent && this.destroyed) {
                this.vdt.vNode.children._$destroy();
            }
        }
    }, {
        key: '_center',
        value: function _center() {
            if (!this.mounted || !this.get('value')) return;
            // move to center
            (0, _position2.default)(this.dialog);
        }
    }, {
        key: '_dragStart',
        value: function _dragStart(e) {
            // left key
            if (e.which !== 1) return;

            this.set('_dragging', true);
            var dialog = this.dialog;
            this._x = dialog.offsetLeft - e.clientX;
            this._y = dialog.offsetTop - e.clientY;
            this._width = dialog.offsetWidth;
            this._height = dialog.offsetHeight;

            document.addEventListener('mousemove', this._move);
            document.addEventListener('mouseup', this._dragEnd);
        }
    }, {
        key: '_move',
        value: function _move(e) {
            // TODO; drag out of screen
            if (this.get('_dragging')) {
                var style = this.dialog.style;
                var body = document.body;
                var left = Math.min(Math.max(this._x + e.clientX, 0), Math.max(body.scrollWidth - this._width, 0));
                var top = Math.min(Math.max(this._y + e.clientY, 0), Math.max(body.scrollHeight - this._height, 0));
                style.left = left + 'px';
                style.top = top + 'px';
            }
        }
    }, {
        key: '_dragEnd',
        value: function _dragEnd() {
            if (this.get('_dragging')) {
                this.set('_dragging', false);
                document.removeEventListener('mousemove', this._move);
                document.removeEventListener('mouseup', this._dragEnd);
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            document.removeEventListener('keydown', this._escClose);
            if (this.get('value')) {
                this.close();
            } else {
                var _vdt$vNode$children;

                (_vdt$vNode$children = this.vdt.vNode.children)._$destroy.apply(_vdt$vNode$children, arguments);
            }
            this._dragEnd();
        }
    }]);

    return Dialog;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    value: Boolean,
    loading: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Dialog;
exports.Dialog = Dialog;

/***/ }),

/***/ "./components/dialog/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dialog/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dialog/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dialog/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/dialog/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
                value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

                _Vdt || (_Vdt = Vdt);
                obj || (obj = {});
                blocks || (blocks = {});
                var h = _Vdt.miss.h,
                    hc = _Vdt.miss.hc,
                    hu = _Vdt.miss.hu,
                    widgets = this && this.widgets || {},
                    _blocks = {},
                    __blocks = {},
                    __u = _Vdt.utils,
                    extend = __u.extend,
                    _e = __u.error,
                    _className = __u.className,
                    __o = __u.Options,
                    _getModel = __o.getModel,
                    _setModel = __o.setModel,
                    _setCheckboxModel = __u.setCheckboxModel,
                    _detectCheckboxChecked = __u.detectCheckboxChecked,
                    _setSelectModel = __u.setSelectModel,
                    self = this.data,
                    scope = obj,
                    Animate = self && self.Animate,
                    parent = ($callee || {})._super;

                return h(_moveWrapper2.default, { 'autoDestroy': function () {
                                                try {
                                                                return [false][0];
                                                } catch (e) {
                                                                _e(e);
                                                }
                                }.call(this), 'children': h('div', null, [function () {
                                                try {
                                                                return [self.get('value')][0];
                                                } catch (e) {
                                                                _e(e);
                                                }
                                }.call(this) ? h(Animate, { 'className': 'k-overlay', 'children': null, '_context': this }) : undefined, function () {
                                                try {
                                                                return [self.get('value')][0];
                                                } catch (e) {
                                                                _e(e);
                                                }
                                }.call(this) ? h(Animate, { 'className': _className(function () {
                                                                try {
                                                                                return [_defineProperty({
                                                                                                "k-dialog": true,
                                                                                                'k-dragging': self.get('_dragging'),
                                                                                                "k-small": self.get('size') === 'small'
                                                                                }, self.get('className'), self.get('className'))][0];
                                                                } catch (e) {
                                                                                _e(e);
                                                                }
                                                }.call(this)), 'ref': function () {
                                                                try {
                                                                                return [function (i) {
                                                                                                return self.dialog = i ? i.element : null;
                                                                                }][0];
                                                                } catch (e) {
                                                                                _e(e);
                                                                }
                                                }.call(this), 'ev-a:leaveEnd': function () {
                                                                try {
                                                                                return [self._leaveEnd][0];
                                                                } catch (e) {
                                                                                _e(e);
                                                                }
                                                }.call(this), 'children': [h('div', { 'ev-mousedown': function () {
                                                                                try {
                                                                                                return [self._dragStart][0];
                                                                                } catch (e) {
                                                                                                _e(e);
                                                                                }
                                                                }.call(this) }, [(_blocks.header = function (parent) {
                                                                return h('span', null, function () {
                                                                                try {
                                                                                                return [self.get('title')][0];
                                                                                } catch (e) {
                                                                                                _e(e);
                                                                                }
                                                                }.call(this), 'k-title');
                                                }) && (__blocks.header = function (parent) {
                                                                var self = this;
                                                                return blocks.header ? blocks.header.call(this, function () {
                                                                                return _blocks.header.call(self, parent);
                                                                }) : _blocks.header.call(this, parent);
                                                }) && __blocks.header.call(this), h(_button2.default, { 'type': 'none', 'icon': function () {
                                                                                try {
                                                                                                return [true][0];
                                                                                } catch (e) {
                                                                                                _e(e);
                                                                                }
                                                                }.call(this), 'title': '关闭', 'className': 'k-close', 'ev-click': function () {
                                                                                try {
                                                                                                return [self.close][0];
                                                                                } catch (e) {
                                                                                                _e(e);
                                                                                }
                                                                }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-close-empty'), '_context': this })], 'k-header'), h('div', null, (_blocks.body = function (parent) {
                                                                return function () {
                                                                                try {
                                                                                                return [self.get('children')][0];
                                                                                } catch (e) {
                                                                                                _e(e);
                                                                                }
                                                                }.call(this);
                                                }) && (__blocks.body = function (parent) {
                                                                var self = this;
                                                                return blocks.body ? blocks.body.call(this, function () {
                                                                                return _blocks.body.call(self, parent);
                                                                }) : _blocks.body.call(this, parent);
                                                }) && __blocks.body.call(this), 'k-body'), h('div', null, (_blocks.footer = function (parent) {
                                                                return [h(_button2.default, { 'ev-click': function () {
                                                                                                try {
                                                                                                                return [self.cancel][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), 'children': function () {
                                                                                                try {
                                                                                                                return [self.get('cancelText')][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), '_context': this }), h(_button2.default, { 'type': 'primary', 'ev-click': function () {
                                                                                                try {
                                                                                                                return [self.ok][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), 'loading': function () {
                                                                                                try {
                                                                                                                return [self.get('loading')][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), 'disabled': function () {
                                                                                                try {
                                                                                                                return [self.get('disabledOk')][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), 'children': function () {
                                                                                                try {
                                                                                                                return [self.get('okText')][0];
                                                                                                } catch (e) {
                                                                                                                _e(e);
                                                                                                }
                                                                                }.call(this), '_context': this })];
                                                }) && (__blocks.footer = function (parent) {
                                                                var self = this;
                                                                return blocks.footer ? blocks.footer.call(this, function () {
                                                                                return _blocks.footer.call(self, parent);
                                                                }) : _blocks.footer.call(this, parent);
                                                }) && __blocks.footer.call(this), 'k-footer')], '_context': this }) : undefined], 'k-dialog-wrapper', null, function () {
                                                try {
                                                                return [function (dom) {
                                                                                return self.$element = dom;
                                                                }][0];
                                                } catch (e) {
                                                                _e(e);
                                                }
                                }.call(this)), '_context': this });
};

var _button = __webpack_require__("./components/button/index.js");

var _button2 = _interopRequireDefault(_button);

var _moveWrapper = __webpack_require__("./components/moveWrapper/index.js");

var _moveWrapper2 = _interopRequireDefault(_moveWrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/dropdown/dropdown.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _utils = __webpack_require__("./components/utils.js");

var _menu = __webpack_require__("./components/dropdown/menu.js");

var _menu2 = _interopRequireDefault(_menu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var h = _intact2.default.Vdt.miss.h;

var Dropdown = (_dec = _intact2.default.template(), (_class = function (_Intact) {
    _inherits(Dropdown, _Intact);

    function Dropdown() {
        _classCallCheck(this, Dropdown);

        return _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).apply(this, arguments));
    }

    _createClass(Dropdown, [{
        key: 'defaults',
        value: function defaults() {
            return {
                trigger: 'hover',
                disabled: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this._saveOriginalEvents();
            this.on('$change:children', function () {
                _this2._saveOriginalEvents();
            });
        }
    }, {
        key: '_saveOriginalEvents',
        value: function _saveOriginalEvents() {
            var _get = this.get(),
                children = _get.children,
                trigger = _get.trigger,
                className = _get.className,
                rest = _objectWithoutProperties(_get, ['children', 'trigger', 'className']);

            if (Array.isArray(children)) {
                children = children[0];
            }
            if ((0, _utils.isTextVNode)(children)) {
                children = h('span', rest, children, className);
            }

            // save the original event
            var originProps = children.props;
            if (!children._hasSaved) {
                children._evClick = originProps['ev-click'];
                children._evMouseEnter = originProps['ev-mouseenter'];
                children._evMouseLeave = originProps['ev-mouseleave'];
                children._hasSaved = true;
            }
            var props = {};
            // if (trigger === 'click') {
            props['ev-click'] = this.show.bind(this, children._evClick);
            // } else {
            if (trigger === 'hover') {
                props['ev-mouseenter'] = this.show.bind(this, children._evMouseEnter);
                props['ev-mouseleave'] = this.hide.bind(this, children._evMouseLeave);
            }
            children.props = _extends({}, children.props, props);
            this.set('children', children, { silent: true });
        }
    }, {
        key: '_mount',
        value: function _mount() {
            this.get('menu').children.dropdown = this;
        }
    }, {
        key: 'show',
        value: function show(fn, e, isFocus) {
            if (typeof fn === 'function') fn(e);

            if (this.get('disabled')) return;

            var menu = this.get('menu').children;
            menu.show();

            if (isFocus) {
                menu.focusItemByIndex(0);
            }
        }
    }, {
        key: 'hide',
        value: function hide(fn, e, immediately) {
            if (typeof fn === 'function') fn(e);

            if (this.get('disabled')) return;

            var menu = this.get('menu').children;
            menu.hide(immediately);
        }
    }], [{
        key: 'template',
        value: function template(data) {
            return data.get('children');
        }
    }]);

    return Dropdown;
}(_intact2.default), (_applyDecoratedDescriptor(_class, 'template', [_dec], Object.getOwnPropertyDescriptor(_class, 'template'), _class)), _class));
exports.default = Dropdown;
module.exports = exports['default'];

/***/ }),

/***/ "./components/dropdown/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.DropdownItem = exports.DropdownMenu = exports.Dropdown = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _dropdown = __webpack_require__("./components/dropdown/dropdown.js");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__("./components/dropdown/menu.js");

var _menu2 = _interopRequireDefault(_menu);

var _item = __webpack_require__("./components/dropdown/item.js");

var _item2 = _interopRequireDefault(_item);

__webpack_require__("./components/dropdown/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var h = _intact2.default.Vdt.miss.h;

function Wrapper(props, inVue) {
    var children = props.children,
        position = props.position,
        key = props.key,
        ref = props.ref,
        rest = _objectWithoutProperties(props, ['children', 'position', 'key', 'ref']);

    var element = children[0];
    var menu = children[1];

    menu.props = _extends({
        position: position,
        key: key == null ? key : key + '.menu'
    }, rest, menu.props);

    return !inVue ? [h(_dropdown2.default, _extends({
        key: key == null ? key : key + '.trigger',
        ref: ref,
        children: element,
        menu: menu
    }, rest)), menu] : h(VueWrapper, {
        children: [h(_dropdown2.default, _extends({
            key: key == null ? key : key + '.trigger',
            ref: ref,
            children: [element],
            menu: menu
        }, rest)), menu]
    });
}

// Vue only support return one element from functional component,
// so we wrap them. This will lead to damage the dom struction,
// because we must wrap them with a div

var VueWrapper = function (_Intact) {
    _inherits(VueWrapper, _Intact);

    function VueWrapper() {
        _classCallCheck(this, VueWrapper);

        return _possibleConstructorReturn(this, (VueWrapper.__proto__ || Object.getPrototypeOf(VueWrapper)).apply(this, arguments));
    }

    _createClass(VueWrapper, [{
        key: 'template',
        value: function template(data) {
            return h('div', null, data.get('children'), 'k-dropdown');
        }
    }]);

    return VueWrapper;
}(_intact2.default);

var _Wrapper = _intact2.default.functionalWrapper ? _intact2.default.functionalWrapper(Wrapper) : Wrapper;

exports.default = _Wrapper;
exports.Dropdown = _Wrapper;
exports.DropdownMenu = _menu2.default;
exports.DropdownItem = _item2.default;

/***/ }),

/***/ "./components/dropdown/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dropdown/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dropdown/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dropdown/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/dropdown/item.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _item = __webpack_require__("./components/dropdown/item.vdt");

var _item2 = _interopRequireDefault(_item);

var _dropdown = __webpack_require__("./components/dropdown/dropdown.js");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _menu = __webpack_require__("./components/dropdown/menu.js");

var _menu2 = _interopRequireDefault(_menu);

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var DropdownItem = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(DropdownItem, _Intact);

    function DropdownItem() {
        _classCallCheck(this, DropdownItem);

        return _possibleConstructorReturn(this, (DropdownItem.__proto__ || Object.getPrototypeOf(DropdownItem)).apply(this, arguments));
    }

    _createClass(DropdownItem, [{
        key: 'defaults',
        value: function defaults() {
            return {
                disabled: false,
                hideOnSelect: true,

                _isFocus: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            // if selected hide all dropdown menu
            this.on('select', function () {
                if (_this2.get('hideOnSelect')) {
                    var ancestor = _this2._findAncestorDropdownMenu();
                    ancestor.hide(true);
                }
            });
        }
    }, {
        key: '_mount',
        value: function _mount() {
            var parent = this.parent = this._findAncestorDropdownMenu(true);
            parent.items.push(this);
        }
    }, {
        key: '_onClick',
        value: function _onClick(e) {
            if (this.get('disabled')) return;

            this.trigger('click', e);

            // is not a sub dropdown trigger
            if (this.parentVNode.tag !== _dropdown2.default) {
                this.trigger('select', this, e);
            }
        }
    }, {
        key: '_onMouseEnter',
        value: function _onMouseEnter(e) {
            if (this.get('disabled')) return;

            this.trigger('mouseenter', e);

            this.parent.focusItem(this);
        }
    }, {
        key: '_onMouseLeave',
        value: function _onMouseLeave(e) {
            if (this.get('disabled')) return;

            this.trigger('mouseleave', e);
        }
    }, {
        key: 'select',
        value: function select() {
            // is not a sub dropdown trigger
            var dropdown = this._isSubMenu();
            if (!dropdown) {
                this.trigger('select', this);
            } else {
                dropdown.show();
            }
        }
    }, {
        key: 'focus',
        value: function focus() {
            this.set('_isFocus', true);

            var elRect = this.element.getBoundingClientRect();
            var pEl = this.parent.refs.menu.element;
            var pElRect = pEl.getBoundingClientRect();
            var bottomOverflowDistance = elRect.bottom - pElRect.bottom;
            var topOverflowDistance = elRect.top - pElRect.top;

            if (bottomOverflowDistance > 0) {
                pEl.scrollTop += bottomOverflowDistance;
            } else if (topOverflowDistance < 0) {
                pEl.scrollTop += topOverflowDistance;
            }
        }
    }, {
        key: 'unFocus',
        value: function unFocus() {
            this.set('_isFocus', false);

            var dropdown = this._isSubMenu();
            if (dropdown) {
                dropdown.hide(null, null, true);
            }
        }
    }, {
        key: 'showMenuAndFocus',
        value: function showMenuAndFocus() {
            var dropdown = this._isSubMenu();
            if (dropdown) {
                dropdown.show(null, null, true);
            }
        }
    }, {
        key: 'hideMenu',
        value: function hideMenu() {
            var dropdown = this._isSubMenu();
            if (dropdown) {
                dropdown.hide(null, null, true);
            }
        }
    }, {
        key: '_isSubMenu',
        value: function _isSubMenu() {
            if (this.parentVNode.tag === _dropdown2.default) {
                return this.parentVNode.children;
            }
        }
    }, {
        key: '_findAncestorDropdownMenu',
        value: function _findAncestorDropdownMenu(isFirst) {
            return (0, _utils.findParentComponent)(_menu2.default, this, isFirst);
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            var items = this.parent.items;
            items.splice(items.indexOf(this), 1);
        }
    }]);

    return DropdownItem;
}(_intact2.default), _class2.template = _item2.default, _class2.propTypes = {
    disabled: Boolean,
    hideOnSelect: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = DropdownItem;
module.exports = exports['default'];

/***/ }),

/***/ "./components/dropdown/item.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;
    /* import {proxyEvent} from '../utils'; */

    var _self$get = self.get(),
        children = _self$get.children,
        disabled = _self$get.disabled,
        className = _self$get.className,
        _isFocus = _self$get._isFocus;

    var classNameObj = (_classNameObj = {
        'k-item': true,
        'k-disabled': disabled
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-hover', _isFocus), _classNameObj);

    return h('div', { 'ev-click': function () {
            try {
                return [self._onClick][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-mouseenter': function () {
            try {
                return [self._onMouseEnter][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-mouseleave': function () {
            try {
                return [self._onMouseLeave][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/dropdown/menu.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _menu = __webpack_require__("./components/dropdown/menu.vdt");

var _menu2 = _interopRequireDefault(_menu);

var _position2 = __webpack_require__("./components/moveWrapper/position.js");

var _position3 = _interopRequireDefault(_position2);

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var DropdownMenu = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(DropdownMenu, _Intact);

    function DropdownMenu() {
        _classCallCheck(this, DropdownMenu);

        return _possibleConstructorReturn(this, (DropdownMenu.__proto__ || Object.getPrototypeOf(DropdownMenu)).apply(this, arguments));
    }

    _createClass(DropdownMenu, [{
        key: 'defaults',
        value: function defaults() {
            return {
                show: false,
                trigger: 'hover',
                position: {}
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this.subDropdowns = [];
            this.items = [];
            this.focusIndex = -1;
            this.locked = false;

            this.on('$changed:show', function (c, value) {
                if (value) {
                    _this2.focusIndex = -1;
                    _this2._addDocumentEvents();
                    _this2.position();
                } else {
                    _this2._removeDocumentEvents();
                }
            });

            // this._onDocumentClick = this._onDocumentClick.bind(this);
            // this._onKeydown = this._onKeydown.bind(this);
        }
    }, {
        key: '_mount',
        value: function _mount() {
            var parent = this._findParentDropdownMenu();
            if (parent) parent.subDropdowns.push(this);

            if (this.get('show')) {
                this._addDocumentEvents();
            }
        }
    }, {
        key: '_findParentDropdownMenu',
        value: function _findParentDropdownMenu() {
            return (0, _utils.findParentComponent)(DropdownMenu, this, true);
        }
    }, {
        key: 'show',
        value: function show() {
            clearTimeout(this.timer);
            this.set('show', true);
            var parent = this._findParentDropdownMenu();
            if (parent) {
                parent.show();
            }
        }
    }, {
        key: 'hide',
        value: function hide(immediately) {
            var _this3 = this;

            if (!immediately) {
                this.timer = setTimeout(function () {
                    _this3.set('show', false);
                }, 200);
            } else {
                this.set('show', false);
            }
        }
    }, {
        key: 'toggle',
        value: function toggle() {
            this.set('show', !this.get('show'));
        }
    }, {
        key: 'position',
        value: function position() {
            (0, _position3.default)(this.refs.menu.element, _extends({
                my: 'center top+5',
                at: 'center bottom',
                of: this.dropdown.element
            }, this.get('position')));
        }
    }, {
        key: '_addDocumentEvents',
        value: function _addDocumentEvents() {
            var parent = this._findParentDropdownMenu();
            if (!parent) {
                // if (this.get('trigger') === 'click') {
                document.addEventListener('click', this._onDocumentClick);
                // }
            } else {
                parent.locked = true;
            }

            document.addEventListener('keydown', this._onKeydown);
        }
    }, {
        key: '_removeDocumentEvents',
        value: function _removeDocumentEvents() {
            var parent = this._findParentDropdownMenu();
            if (!parent) {
                // if (this.get('trigger') === 'click') {
                document.removeEventListener('click', this._onDocumentClick);
                // }
            } else {
                parent.locked = false;
            }

            document.removeEventListener('keydown', this._onKeydown);
        }
    }, {
        key: '_onDocumentClick',
        value: function _onDocumentClick(e) {
            var target = e.target;
            var menu = this.refs.menu.element;

            // is a dropdown menu
            if (menu === target || menu.contains(target)) return;
            // is click on sub menu
            if (this._isClickSubMenu(target, this.subDropdowns)) return;
            // custom flag to indicate that the event does not lead to close menu
            if (e._dropdown) return;

            this.hide(true);
        }
    }, {
        key: '_onKeydown',
        value: function _onKeydown(e) {
            if (this.locked) {
                return;
            }
            switch (e.keyCode) {
                // down
                case 40:
                    this._focusNextItem(e);
                    break;
                // up
                case 38:
                    this._focusPrevItem(e);
                    break;
                // right
                case 39:
                    this._showSubMenu(e);
                    break;
                // left
                case 37:
                    this._hideSubMenu(e);
                    break;
                // enter
                case 13:
                    this._selectItem(e);
                    break;
            }
        }
    }, {
        key: '_focusNextItem',
        value: function _focusNextItem(e) {
            var parent = this._findParentDropdownMenu();
            if (parent && this.focusIndex < 0) {
                return;
            }
            e.preventDefault();
            this.focusItemByIndex(this.focusIndex + 1, 'down');
        }
    }, {
        key: '_focusPrevItem',
        value: function _focusPrevItem(e) {
            var parent = this._findParentDropdownMenu();
            if (parent && this.focusIndex < 0) {
                return;
            }
            e.preventDefault();
            this.focusItemByIndex(this.focusIndex - 1, 'up');
        }
    }, {
        key: 'focusItemByIndex',
        value: function focusItemByIndex(index) {
            var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'down';

            var items = this.items;
            var max = items.length - 1;
            var oldIndex = this.focusIndex;

            function fixIndex(index) {
                if (index > max) {
                    index = 0;
                } else if (index < 0) {
                    index = max;
                }
                return index;
            }

            index = fixIndex(index);

            var i = 0;
            while (i <= max && items[index] && items[index].get('disabled')) {
                index = fixIndex(direction === 'down' ? index + 1 : index - 1);
                i++;
            }

            // all items are disabled
            if (i > max) return;

            this.focusIndex = index;

            if (oldIndex > -1 && items[oldIndex]) {
                items[oldIndex].unFocus();
            }

            items[index].focus();
        }
    }, {
        key: '_selectItem',
        value: function _selectItem(e) {
            this._showSubMenu(e);
            if (this.focusIndex > -1) {
                e.preventDefault();
                this.items[this.focusIndex].select();
            }
        }
    }, {
        key: '_showSubMenu',
        value: function _showSubMenu(e) {
            var parent = this._findParentDropdownMenu();
            if (!parent && this.focusIndex < 0) return;

            e.preventDefault();
            if (parent && this.focusIndex < 0) {
                this.focusItemByIndex(0);
            } else if (this.focusIndex > -1) {
                this.items[this.focusIndex].showMenuAndFocus();
            }
        }
    }, {
        key: '_hideSubMenu',
        value: function _hideSubMenu(e) {
            if (this.focusIndex > -1) {
                e.preventDefault();
                this.items[this.focusIndex].hideMenu();

                var parent = (0, _utils.findParentComponent)(DropdownMenu, this, true);
                if (parent) {
                    this.dropdown.hide(null, null, true);
                }
            }
        }
    }, {
        key: 'focusItem',
        value: function focusItem(item) {
            var index = this.items.indexOf(item);
            this.focusItemByIndex(index);
        }
    }, {
        key: '_isClickSubMenu',
        value: function _isClickSubMenu(target, subMenus) {
            var ret = false;
            for (var i = 0; i < subMenus.length; i++) {
                var subMenu = subMenus[i].refs.menu;
                if (subMenu) {
                    if (target === subMenu.element || subMenu.element.contains(target)) {
                        ret = true;
                        break;
                    } else {
                        ret = this._isClickSubMenu(target, subMenus[i].subDropdowns);
                        if (ret) break;
                    }
                }
            }
            return ret;
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            var parent = this._findParentDropdownMenu();
            if (parent) {
                var subDropdowns = parent.subDropdowns;
                subDropdowns.splice(subDropdowns.indexOf(this), 1);
            }
            clearTimeout(this.timer);
            this._removeDocumentEvents();
        }
    }]);

    return DropdownMenu;
}(_intact2.default), _class2.template = _menu2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = DropdownMenu;
module.exports = exports['default'];

/***/ }),

/***/ "./components/dropdown/menu.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        show = _self$get.show,
        trigger = _self$get.trigger,
        className = _self$get.className;

    var events = {};
    // no matter what the trigger is, we should show menu when enter it.
    // for the case: hover trigger nests click trigger
    events['ev-mouseenter'] = self.show;
    if (trigger === 'hover') {
        events['ev-mouseleave'] = self.hide.bind(self, false);
    }

    return h(_moveWrapper2.default, { '_parent': function () {
            try {
                return [self][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': function () {
            try {
                return [show][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h(Animate, _extends({ 'className': _className(function () {
                try {
                    return [_defineProperty({ "k-dropdown-menu": true }, className, className)][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this)), 'a:transition': 'dropdown' }, function () {
            try {
                return [events][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), { 'a:delayDestroy': function () {
                try {
                    return [false][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': function () {
                try {
                    return [children][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), '_context': this }), null, null, null, function (i) {
            widgets['menu'] = i;
        }) : undefined, '_context': this }, null, null, null, function (i) {
        widgets['wrapper'] = i;
    });
};

var _moveWrapper = __webpack_require__("./components/moveWrapper/index.js");

var _moveWrapper2 = _interopRequireDefault(_moveWrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/editable/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Editable = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/editable/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/editable/index.styl");

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Editable = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Editable, _Intact);

    function Editable() {
        _classCallCheck(this, Editable);

        return _possibleConstructorReturn(this, (Editable.__proto__ || Object.getPrototypeOf(Editable)).apply(this, arguments));
    }

    _createClass(Editable, [{
        key: 'defaults',
        value: function defaults() {
            return {
                editing: false,
                value: undefined,
                required: true,
                validate: undefined,
                disabled: false,
                tip: '编辑',
                trim: true,
                invalid: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            this.initValue = this.get('value');
        }
    }, {
        key: '_edit',
        value: function _edit() {
            this.set('editing', true);
            var input = this.refs.input;
            (0, _utils.selectInput)(input);
        }
    }, {
        key: '_onBlur',
        value: function _onBlur(e) {
            this._setValue(e.target.value);
        }
    }, {
        key: '_onKeydown',
        value: function _onKeydown(e) {
            switch (e.keyCode) {
                case 27:
                    // esc 
                    this.set('editing', false);
                    break;
                case 13:
                    // enter
                    this._onBlur(e);
                    break;
            }
        }
    }, {
        key: '_setValue',
        value: function _setValue(value) {
            var _get = this.get(),
                validate = _get.validate,
                required = _get.required,
                trim = _get.trim;

            if (trim) value = value.trim();

            var valid = true;

            if (required && !value) {
                valid = false;
            } else if (validate && value) {
                if (typeof validate === 'function') {
                    valid = validate.call(this, value);
                } else if (validate instanceof RegExp) {
                    valid = validate.test(value);
                } else if (typeof validate === 'string') {
                    valid = new RegExp(validate).test(value);
                }
            }

            if (!valid) {
                this.set('value', value, { silent: true });
                this.set('invalid', true);
                return this.trigger('error', this, value);
            }

            this.set({
                invalid: false,
                editing: false,
                value: value
            });
        }
    }, {
        key: 'reset',
        value: function reset() {
            this.set({
                'value': this.initValue,
                'editing': false,
                'invalid': false
            });
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Editable;
}(_intact2.default), _class2.propTypes = {
    editing: Boolean,
    required: Boolean,
    disabled: Boolean,
    tip: [String, Number],
    trim: Boolean,
    invalid: Boolean
}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Editable;
exports.Editable = Editable;

/***/ }),

/***/ "./components/editable/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/editable/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/editable/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/editable/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/editable/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        editing = _self$get.editing,
        value = _self$get.value,
        validate = _self$get.validate,
        disabled = _self$get.disabled,
        style = _self$get.style,
        tip = _self$get.tip,
        children = _self$get.children,
        invalid = _self$get.invalid;

    var classNameObj = {
        'k-editable': true,
        'k-editing': editing,
        'k-disabled': disabled,
        'k-invalid': invalid
    };

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [function () {
        try {
            return [!disabled && !editing][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('i', { 'title': function () {
            try {
                return [tip][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._edit][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, null, 'ion-edit k-edit') : undefined, function () {
        try {
            return [value || editing][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, ['\n        ', function () {
        try {
            return [!editing ? children : h(_input2.default, { 'size': 'small', 'defaultValue': function () {
                    try {
                        return [value][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'ev-blur': function () {
                    try {
                        return [self._onBlur][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'ev-keydown': function () {
                    try {
                        return [self._onKeydown][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'children': null, '_context': this }, null, null, null, function (i) {
                widgets['input'] = i;
            })][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n    '], 'c-ellipsis') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _input = __webpack_require__("./components/input/index.js");

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/form/form.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _form = __webpack_require__("./components/form/form.vdt");

var _form2 = _interopRequireDefault(_form);

var _methods = __webpack_require__("./components/form/methods.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Form = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Form, _Intact);

    function Form() {
        _classCallCheck(this, Form);

        return _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).apply(this, arguments));
    }

    _createClass(Form, [{
        key: 'defaults',
        value: function defaults() {
            return {
                items: [],
                rules: {}
            };
        }
    }, {
        key: 'getRules',
        value: function getRules() {
            var rules = this.get('rules');
            var items = this.get('items');

            items.forEach(function (item) {
                rules[item.get('model')] = item.get('rules');
            });

            return rules;
        }
    }, {
        key: 'validate',
        value: function validate() {
            var items = this.get('items');

            return Promise.all(items.map(function (item) {
                return item.validate();
            })).then(function (values) {
                return values.every(function (value) {
                    return value;
                });
            });
        }
    }, {
        key: 'reset',
        value: function reset() {
            var items = this.get('items');
            items.forEach(function (item) {
                return item.reset();
            });
        }
    }, {
        key: 'getItem',
        value: function getItem(model) {
            var items = this.get('items');
            if (model === undefined) return items;
            return items.find(function (item) {
                return item.get('model') === model;
            });
        }
    }, {
        key: 'optional',
        value: function optional(item) {
            var value = item.get('value');
            return !Form.methods.required.call(this, value, item);
        }
    }, {
        key: 'submit',
        value: function submit(e) {
            var _this2 = this;

            e.preventDefault();
            this.validate().then(function (isValid) {
                if (isValid) {
                    _this2.trigger('submit', e, _this2);
                }
            });
        }
    }, {
        key: 'template',
        get: function get() {
            return _form2.default;
        }
    }]);

    return Form;
}(_intact2.default), _class2.methods = _methods.methods, _class2.messages = _methods.messages, _class2.classNames = _methods.classNames, _class2.addMethod = _methods.addMethod, _temp), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Form;
module.exports = exports['default'];

/***/ }),

/***/ "./components/form/form.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        className = _self$get.className,
        ref = _self$get.ref,
        key = _self$get.key,
        style = _self$get.style;

    var classNameObj = _defineProperty({
        'k-form': true
    }, className, className);

    return h('form', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-submit': function () {
            try {
                return [self.submit][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'noValidate': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/form/formItem.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _formItem = __webpack_require__("./components/form/formItem.vdt");

var _formItem2 = _interopRequireDefault(_formItem);

var _form = __webpack_require__("./components/form/form.js");

var _form2 = _interopRequireDefault(_form);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var FormItem = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(FormItem, _Intact);

    function FormItem() {
        _classCallCheck(this, FormItem);

        return _possibleConstructorReturn(this, (FormItem.__proto__ || Object.getPrototypeOf(FormItem)).apply(this, arguments));
    }

    _createClass(FormItem, [{
        key: 'defaults',
        value: function defaults() {
            return {
                value: undefined,
                model: undefined,
                rules: {},
                isValid: undefined,
                isDirty: false,
                message: '',
                messages: {},
                classNames: {},
                errorClassName: '',
                label: undefined,
                htmlFor: undefined,
                hideLabel: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            this.initValue = this.get('value');
            this.on('$change:value', this.validateIfDirty);
            this.on('$change:rules', this.validateIfDirty);
        }
    }, {
        key: '_mount',
        value: function _mount() {
            if (!this.get('model')) return;

            var form = this.parentVNode;
            while (form && form.tag !== _form2.default) {
                form = form.parentVNode;
            }
            if (!form) {
                throw new Error('FormItem must be used as the descendant of Form');
            }
            this.form = form = form.children;
            var items = form.get('items');
            items.push(this);
        }
    }, {
        key: 'getRules',
        value: function getRules() {
            var formRules = this.form.get('rules.' + this.get('model'));
            var selfRules = this.get('rules');

            return Object.assign({}, formRules, selfRules);
        }
    }, {
        key: 'getMessage',
        value: function getMessage(name) {
            var defaultMessages = _form2.default.messages;
            var customMessages = this.get('messages');
            var message = customMessages[name] || defaultMessages[name];

            if (typeof message === 'function') {
                var rules = this.getRules();
                return message.call(this.form, this.get('value'), this, rules[name]);
            }

            return message;
        }
    }, {
        key: 'getClassName',
        value: function getClassName(name) {
            var defaultClassNames = _form2.default.classNames;
            var customClassNames = this.get('classNames');
            var className = customClassNames[name] || defaultClassNames[name];

            if (typeof className === 'function') {
                var rules = this.getRules();
                return className.call(this.form, this.get('value'), this, rules[name]);
            }

            return className;
        }
    }, {
        key: 'validate',
        value: function validate() {
            var _this2 = this;

            if (!this.get('model')) return;

            this._cancel();

            var rules = this.getRules();
            var promises = [];
            var keys = [];

            // check required firstly
            var required = _form2.default.methods.required.call(this.form, this.get('value'), this);
            if (rules.required) {
                promises.push(required);
                keys.push('required');
            }

            // if the field is not empty, then check other rules
            if (required) {
                for (var key in rules) {
                    var rule = rules[key];
                    if (key === 'required' || rule === false) continue;
                    var fn = void 0;
                    if (typeof rule === 'function') {
                        fn = rule;
                    } else {
                        fn = _form2.default.methods[key];
                        if (!fn) {
                            console.warn('Can not find validate method: ' + key);
                            continue;
                        }
                    }
                    promises.push(fn.call(this.form, this.get('value'), this, rules[key]));
                    keys.push(key);
                }
            }

            var p = this.promise = Promise.all(promises).then(function (values) {
                for (var index = 0; index < values.length; index++) {
                    if (values[index] !== true) {
                        return [false, values[index] || _this2.getMessage(keys[index]), _this2.getClassName(keys[index])];
                    }
                }
                return [true, '', null];
            }, function (err) {
                var message = void 0;
                var className = void 0;
                if (typeof err === 'string') {
                    message = err;
                } else if (err) {
                    message = err.message || _this2.getMessage(err.name);
                    className = err.className || _this2.getClassName(err.name);
                }
                return [false, message, className];
            }).then(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 3),
                    isValid = _ref2[0],
                    message = _ref2[1],
                    className = _ref2[2];

                if (p.cancelled) return;
                _this2.set({
                    isDirty: true,
                    isValid: isValid,
                    message: message,
                    errorClassName: className
                });
                return isValid;
            });

            return p;
        }
    }, {
        key: 'validateIfDirty',
        value: function validateIfDirty() {
            if (this.get('isDirty')) {
                this.validate();
            }
        }
    }, {
        key: 'reset',
        value: function reset() {
            this._cancel();

            this.set({
                isDirty: false,
                isValid: undefined,
                value: Array.isArray(this.get('value')) ? [].concat(this.initValue) : this.initValue
            });
        }
    }, {
        key: '_dirty',
        value: function _dirty() {
            if (!this.get('model')) return;
            if (this.get('isDirty')) return;

            // for vue value will changed after event
            if (this.$nextTick) {
                this.$nextTick(this.validate);
            } else {
                this.validate();
            }
        }
    }, {
        key: '_cancel',
        value: function _cancel() {
            // cancel the last promise
            if (this.promise) {
                this.promise.cancelled = true;
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            if (!this.get('model')) return;
            var items = this.form.get('items');
            items.splice(items.indexOf(this), 1);
            // this.reset();
        }
    }, {
        key: 'template',
        get: function get() {
            return _formItem2.default;
        }
    }]);

    return FormItem;
}(_intact2.default), _class2.propTypes = {
    hideLabel: Boolean
}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = FormItem;
module.exports = exports['default'];

/***/ }),

/***/ "./components/form/formItem.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        children = _self$get.children,
        label = _self$get.label,
        style = _self$get.style,
        isValid = _self$get.isValid,
        isDirty = _self$get.isDirty,
        hideLabel = _self$get.hideLabel,
        htmlFor = _self$get.htmlFor,
        errorClassName = _self$get.errorClassName;

    var classNameObj = _defineProperty({
        'k-form-item': true,
        'k-invalid': isDirty && !isValid,
        'k-valid': isDirty && isValid
    }, className, className);

    // vdt does not support return `v-if & v-else` element in root,
    // like: 
    //     '<div v-if={{ true }}>true</div>'
    //     '<label v-else>false</label>'
    // so wrap it.
    // const Wrapper = (props) => {
    //     return h(props._tagName, props, props.children); 
    // }

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-change': function () {
            try {
                return [self._dirty][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-focusout': function () {
            try {
                return [self._dirty][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [function () {
        try {
            return [!hideLabel][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('label', { 'htmlFor': function () {
            try {
                return [htmlFor][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, (_blocks.label = function (parent) {
        return function () {
            try {
                return [label][0];
            } catch (e) {
                _e(e);
            }
        }.call(this);
    }) && (__blocks.label = function (parent) {
        var self = this;
        return blocks.label ? blocks.label.call(this, function () {
            return _blocks.label.call(self, parent);
        }) : _blocks.label.call(this, parent);
    }) && __blocks.label.call(this), 'k-label') : undefined, h('div', null, [(_blocks.content = function (parent) {
        return function () {
            try {
                return [children][0];
            } catch (e) {
                _e(e);
            }
        }.call(this);
    }) && (__blocks.content = function (parent) {
        var self = this;
        return blocks.content ? blocks.content.call(this, function () {
            return _blocks.content.call(self, parent);
        }) : _blocks.content.call(this, parent);
    }) && __blocks.content.call(this), function () {
        try {
            return [self.get('isValid') === false][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h(Animate, { 'className': _className(function () {
            try {
                return [_defineProperty({ "k-error": true }, errorClassName, errorClassName)][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)), 'a:transition': 'fade', 'children': function () {
            try {
                return [self.get('message')][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), '_context': this }) : undefined], 'k-content'), function () {
        try {
            return [blocks.append][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks.append = function (parent) {
        return null;
    }) && (__blocks.append = function (parent) {
        var self = this;
        return blocks.append ? blocks.append.call(this, function () {
            return _blocks.append.call(self, parent);
        }) : _blocks.append.call(this, parent);
    }) && __blocks.append.call(this), 'k-append') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/form/formItemWrapper.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _formItem = __webpack_require__("./components/form/formItem.js");

var _formItem2 = _interopRequireDefault(_formItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var h = _intact2.default.Vdt.miss.h;

function Wrapper(props) {
    var key = props.key,
        _context = props._context,
        model = props.model,
        rest = _objectWithoutProperties(props, ['key', '_context', 'model']);

    if (!key && model) {
        key = '$fi.' + model;
    }
    return h(_formItem2.default, _extends({
        key: key, model: model, _context: _context,
        'ev-$change:value': function ev$changeValue(c, v) {
            _context.data.set(model, v);
        },
        value: _context.data.get(model)
    }, rest));
}

exports.default = _intact2.default.functionalWrapper ? _intact2.default.functionalWrapper(Wrapper) : Wrapper;
module.exports = exports['default'];

/***/ }),

/***/ "./components/form/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormItem = exports.Form = undefined;

var _form = __webpack_require__("./components/form/form.js");

var _form2 = _interopRequireDefault(_form);

var _formItemWrapper = __webpack_require__("./components/form/formItemWrapper.js");

var _formItemWrapper2 = _interopRequireDefault(_formItemWrapper);

__webpack_require__("./components/form/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _form2.default;
exports.Form = _form2.default;
exports.FormItem = _formItemWrapper2.default;

/***/ }),

/***/ "./components/form/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/form/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/form/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/form/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/form/methods.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
function decimalPlaces(num) {
    var match = ("" + num).match(/(?:\.(\d+))?$/);
    if (!match) {
        return 0;
    }

    // Number of digits right of decimal point.
    return match[1] ? match[1].length : 0;
}

var methods = exports.methods = {
    required: function required(value) {
        return value != null && (typeof value === 'string' || Array.isArray(value) ? value.length > 0 : true);
    },
    digits: function digits(value) {
        return (/^\d+$/.test(value)
        );
    },
    email: function email(value) {
        return (/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value)
        );
    },
    url: function url(value) {
        return (/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(value)
        );
    },
    date: function date(value) {
        return !/Invalid|NaN/.test(new Date(value).toString());
    },
    dateISO: function dateISO(value) {
        return (/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value)
        );
    },
    number: function number(value) {
        return (/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value)
        );
    },
    minLength: function minLength(value, item, param) {
        return value.length >= param;
    },
    maxLength: function maxLength(value, item, param) {
        return value.length <= param;
    },
    rangeLength: function rangeLength(value, item, param) {
        var length = value.length;
        return length >= param[0] && length <= param[1];
    },
    min: function min(value, item, param) {
        return value >= param;
    },
    max: function max(value, item, param) {
        return value <= param;
    },
    range: function range(value, item, param) {
        return value >= param[0] && value <= param[1];
    },
    step: function step(value, item, param) {
        var decimals = decimalPlaces(param);
        var toInt = function toInt(num) {
            return Math.round(num * Math.pow(10, decimals));
        };

        return decimalPlaces(value) <= decimals && toInt(value) % toInt(param) === 0;
    },
    equalTo: function equalTo(value, item, param) {
        var equalValue = item.form.get('_context').data.get(param);
        var equalItem = item.form.getItem(param);
        if (!equalItem._hasBindEqualToCallback) {
            item._equalToCallback = function () {
                item.validateIfDirty();
            };
            equalItem.on('$changed:value', item._equalToCallback);
            equalItem._hasBindEqualToCallback = true;

            // remove listener when destroy or change rules
            ['$destroyed' /*, '$change:rules'*/].forEach(function (name) {
                item.on(name, function () {
                    equalItem.off('$changed:value', item._equalToCallback);
                    equalItem._hasBindEqualToCallback = false;
                });
            });
        }

        return value === equalValue;
    }
};

function count(num) {
    return num === 2 ? '两' : num;
}

var messages = exports.messages = {
    required: '必须填写',
    digits: '请输入数字',
    email: '请输入正确的邮箱地址',
    url: '请输入正确的网址',
    date: '请输入正确的日期',
    dateISO: '请输入正确的日期 (YYYY-MM-DD)',
    number: '请输入正确的数',
    maxLength: function maxLength(value, item, param) {
        if (Array.isArray(value)) {
            return '\u6700\u591A\u9009\u62E9' + count(param) + '\u9879';
        } else {
            return '\u6700\u591A\u8F93\u5165' + count(param) + '\u4E2A\u5B57\u7B26';
        }
    },
    minLength: function minLength(value, item, param) {
        if (Array.isArray(value)) {
            return '\u6700\u5C11\u9009\u62E9' + count(param) + '\u9879';
        } else {
            return '\u6700\u5C11\u8F93\u5165' + count(param) + '\u4E2A\u5B57\u7B26';
        }
    },
    rangeLength: function rangeLength(value, item, param) {
        if (Array.isArray(value)) {
            return '\u8BF7\u9009\u62E9' + count(param[0]) + '\u5230' + count(param[1]) + '\u9879';
        } else {
            return '\u8BF7\u8F93\u5165' + count(param[0]) + '\u5230' + count(param[1]) + '\u4E2A\u5B57\u7B26';
        }
    },
    max: function max(value, item, param) {
        return '\u8BF7\u8F93\u5165\u4E0D\u5927\u4E8E' + param + '\u7684\u6570';
    },
    min: function min(value, item, param) {
        return '\u8BF7\u8F93\u5165\u4E0D\u5C0F\u4E8E' + param + '\u7684\u6570';
    },
    range: function range(value, item, param) {
        return '\u8BF7\u8F93\u5165' + param[0] + '\u5230' + param[1] + '\u4E4B\u95F4\u7684\u6570';
    },
    step: function step(value, item, param) {
        return '\u8BF7\u8F93\u5165\u6B65\u957F\u4E3A' + param + '\u7684\u6570';
    },

    equalTo: '两次输入不一致'
};

var classNames = exports.classNames = {};

var addMethod = exports.addMethod = function addMethod(name, method, message, className) {
    methods[name] = method;
    messages[name] = message !== undefined ? message : messages[name];
    classNames[name] = className;
};

/***/ }),

/***/ "./components/grid/col.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _col = __webpack_require__("./components/grid/col.vdt");

var _col2 = _interopRequireDefault(_col);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Col = (_dec = _intact2.default.template(), (_class = function (_Intact) {
    _inherits(Col, _Intact);

    function Col() {
        _classCallCheck(this, Col);

        return _possibleConstructorReturn(this, (Col.__proto__ || Object.getPrototypeOf(Col)).apply(this, arguments));
    }

    _createClass(Col, [{
        key: 'defaults',
        value: function defaults() {
            return {
                span: 24,
                offset: 0,
                gutter: 0
            };
        }
    }, {
        key: 'template',
        get: function get() {
            return _col2.default;
        }
    }]);

    return Col;
}(_intact2.default), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Col;
module.exports = exports['default'];

/***/ }),

/***/ "./components/grid/col.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;
    var gutterStyle = __webpack_require__("./components/grid/utils.js");

    var _self$get = self.get(),
        children = _self$get.children,
        span = _self$get.span,
        className = _self$get.className,
        style = _self$get.style,
        gutter = _self$get.gutter,
        offset = _self$get.offset;

    var hasGutter = gutter > 0;
    if (hasGutter) {
        style = gutterStyle(gutter, style, 'padding');
    }

    var classNameObj = (_classNameObj = {
        'k-col': true
    }, _defineProperty(_classNameObj, 'k-' + span, true), _defineProperty(_classNameObj, className, className && !hasGutter), _defineProperty(_classNameObj, 'k-offset-' + offset, offset > 0), _classNameObj);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [hasGutter ? h('div', null, function () {
                try {
                    return [children][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), _className(function () {
                try {
                    return [className][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this))) : children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/grid/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Col = exports.Row = undefined;

var _row = __webpack_require__("./components/grid/row.js");

var _row2 = _interopRequireDefault(_row);

var _col = __webpack_require__("./components/grid/col.js");

var _col2 = _interopRequireDefault(_col);

__webpack_require__("./components/grid/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Row = _row2.default;
exports.Col = _col2.default;

/***/ }),

/***/ "./components/grid/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/grid/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/grid/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/grid/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/grid/row.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _row = __webpack_require__("./components/grid/row.vdt");

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Row = (_dec = _intact2.default.template(), (_class = function (_Intact) {
    _inherits(Row, _Intact);

    function Row() {
        _classCallCheck(this, Row);

        return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));
    }

    _createClass(Row, [{
        key: 'defaults',
        value: function defaults() {
            return {
                gutter: 0
            };
        }
    }, {
        key: 'template',
        get: function get() {
            return _row2.default;
        }
    }]);

    return Row;
}(_intact2.default), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Row;
module.exports = exports['default'];

/***/ }),

/***/ "./components/grid/row.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;
    var gutterStyle = __webpack_require__("./components/grid/utils.js");

    var _self$get = self.get(),
        children = _self$get.children,
        className = _self$get.className,
        style = _self$get.style,
        gutter = _self$get.gutter;

    var hasGutter = gutter > 0;
    if (hasGutter) {
        style = gutterStyle(gutter, style);
    }

    var classNameObj = (_classNameObj = {
        'k-row': true
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-gutter', hasGutter), _classNameObj);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [hasGutter ? children.map(function (vNode) {
                if (vNode) {
                    vNode.props.gutter = gutter;
                    return vNode;
                }
            }) : children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/grid/utils.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = gutterStyle;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function gutterStyle(gutter, style) {
    var prop = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'margin';

    var margin = gutter / 2;
    var sign = prop === 'margin' ? '-' : '';
    if (!style) style = '';
    if (typeof style === 'string') {
        style = '' + style + (!style || /;\s*$/.test(style) ? '' : ';') + prop + '-left: ' + sign + margin + 'px; ' + prop + '-right: ' + sign + margin + 'px;';
    } else {
        var _extends2;

        style = _extends((_extends2 = {}, _defineProperty(_extends2, prop + 'Left', '' + sign + margin + 'px'), _defineProperty(_extends2, prop + 'Right', '' + sign + margin + 'px'), _extends2), style);
    }
    return style;
}
module.exports = exports['default'];

/***/ }),

/***/ "./components/input/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Input = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/input/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/input/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Input = (_dec = _intact2.default.template, (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Input, _Intact);

    function Input() {
        _classCallCheck(this, Input);

        return _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).apply(this, arguments));
    }

    _createClass(Input, [{
        key: 'defaults',
        value: function defaults() {
            return {
                type: 'text', // text | textarea
                name: undefined,
                value: undefined,
                defaultValue: undefined,
                placeholder: undefined,
                readonly: false,
                clearable: false,
                disabled: false,
                size: 'default',
                rows: 2,
                spellcheck: false,
                autoWidth: false,
                fluid: false,
                width: undefined
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            this.on('$changed:value', this._adjustWidth);
            this.on('$changed:placeholder', this._adjustWidth);
        }
    }, {
        key: '_mount',
        value: function _mount() {
            this._adjustWidth();
        }
    }, {
        key: '_adjustWidth',
        value: function _adjustWidth() {
            if (this.get('autoWidth')) {
                var width = this.refs.fake.offsetWidth || 1;
                this.refs.input.style.width = width + 1 + 'px';
            }
        }
    }, {
        key: 'clear',
        value: function clear(e) {
            this.set('value', '');
            this.focus();
            this.trigger('clear', e);
        }
    }, {
        key: 'select',
        value: function select() {
            this.refs.input.select();
        }
    }, {
        key: 'focus',
        value: function focus() {
            this.refs.input.focus();
        }
    }, {
        key: '_onInput',
        value: function _onInput(e) {
            this.set('value', e.target.value);
            this.trigger('input', e);
        }
    }, {
        key: '_proxyEvent',
        value: function _proxyEvent(name, e) {
            this.trigger(name, e);
        }
    }]);

    return Input;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    type: String,
    readonly: Boolean,
    clearable: Boolean,
    disabled: Boolean,
    fluid: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Input;
exports.Input = Input;

/***/ }),

/***/ "./components/input/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/input/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/input/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/input/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/input/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        type = _self$get.type,
        name = _self$get.name,
        value = _self$get.value,
        placeholder = _self$get.placeholder,
        readonly = _self$get.readonly,
        clearable = _self$get.clearable,
        disabled = _self$get.disabled,
        size = _self$get.size,
        rows = _self$get.rows,
        spellcheck = _self$get.spellcheck,
        defaultValue = _self$get.defaultValue,
        style = _self$get.style,
        className = _self$get.className,
        autoWidth = _self$get.autoWidth,
        fluid = _self$get.fluid,
        width = _self$get.width;

    var classNameObj = (_classNameObj = {
        'k-input': true
    }, _defineProperty(_classNameObj, 'k-' + size, size !== 'default'), _defineProperty(_classNameObj, 'k-group', blocks.prepend || blocks.append), _defineProperty(_classNameObj, 'k-disabled', disabled), _defineProperty(_classNameObj, 'k-with-prefix', blocks.prefix), _defineProperty(_classNameObj, 'k-with-suffix', blocks.suffix), _defineProperty(_classNameObj, 'k-clearable', clearable), _defineProperty(_classNameObj, 'k-auto-width', autoWidth), _defineProperty(_classNameObj, 'k-fluid', fluid), _defineProperty(_classNameObj, className, className), _classNameObj);

    var events = ['keydown', 'keyup', 'change', 'keypress', 'focus', 'blur'].reduce(function (memo, name) {
        memo['ev-' + name] = self._proxyEvent.bind(self, name);
        return memo;
    }, {});

    var wrapperEvents = ['click', 'mouseenter', 'mouseleave'].reduce(function (memo, name) {
        memo['ev-' + name] = self._proxyEvent.bind(self, name);
        return memo;
    }, {});

    return h('div', _extends({ 'style': function () {
            try {
                return [width != null ? (0, _utils.addStyle)(style, { width: width + 'px' }) : style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [wrapperEvents][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), [function () {
        try {
            return [blocks.prepend][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks.prepend = function (parent) {
        return null;
    }) && (__blocks.prepend = function (parent) {
        var self = this;
        return blocks.prepend ? blocks.prepend.call(this, function () {
            return _blocks.prepend.call(self, parent);
        }) : _blocks.prepend.call(this, parent);
    }) && __blocks.prepend.call(this), 'k-prepend') : undefined, h('div', null, [function () {
        try {
            return [blocks.prefix][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks.prefix = function (parent) {
        return null;
    }) && (__blocks.prefix = function (parent) {
        var self = this;
        return blocks.prefix ? blocks.prefix.call(this, function () {
            return _blocks.prefix.call(self, parent);
        }) : _blocks.prefix.call(this, parent);
    }) && __blocks.prefix.call(this), 'k-prefix') : undefined, function () {
        try {
            return [type !== 'textarea'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('input', _extends({ 'type': function () {
            try {
                return [type][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'name': function () {
            try {
                return [name][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'value': function () {
            try {
                return [value][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-input': function () {
            try {
                return [self._onInput][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'defaultValue': function () {
            try {
                return [defaultValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'readOnly': function () {
            try {
                return [readonly][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'placeholder': function () {
            try {
                return [placeholder][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [events][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), null, 'k-inner', null, function (i) {
        widgets['input'] = i;
    }) : h('textarea', _extends({ 'value': function () {
            try {
                return [value][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-input': function () {
            try {
                return [self._onInput][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'defaultValue': function () {
            try {
                return [defaultValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'name': function () {
            try {
                return [name][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'readOnly': function () {
            try {
                return [readonly][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'placeholder': function () {
            try {
                return [placeholder][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'rows': function () {
            try {
                return [rows][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'spellcheck': function () {
            try {
                return [spellcheck][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [events][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), null, 'k-inner k-textarea', null, function (i) {
        widgets['input'] = i;
    }), function () {
        try {
            return [blocks.suffix || clearable][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, [function () {
        try {
            return [clearable][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('i', { 'ev-click': function () {
            try {
                return [self.clear][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, null, _className(function () {
        try {
            return [{
                "k-clear k-icon ion-ios-close": true,
                "k-show": value
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this))) : undefined, (_blocks.suffix = function (parent) {
        return null;
    }) && (__blocks.suffix = function (parent) {
        var self = this;
        return blocks.suffix ? blocks.suffix.call(this, function () {
            return _blocks.suffix.call(self, parent);
        }) : _blocks.suffix.call(this, parent);
    }) && __blocks.suffix.call(this)], 'k-suffix') : undefined, function () {
        try {
            return [autoWidth][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [value == null || value === '' ? placeholder : value][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-fake', null, function (i) {
        widgets['fake'] = i;
    }) : undefined], 'k-wrapper'), function () {
        try {
            return [blocks.append][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks.append = function (parent) {
        return null;
    }) && (__blocks.append = function (parent) {
        var self = this;
        return blocks.append ? blocks.append.call(this, function () {
            return _blocks.append.call(self, parent);
        }) : _blocks.append.call(this, parent);
    }) && __blocks.append.call(this), 'k-append') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _utils = __webpack_require__("./components/utils.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/message/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Message = exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _dec, _desc, _value, _class, _init, _class2, _temp, _dec2, _desc2, _value2, _class3, _init2, _class4, _temp2;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/message/index.vdt");

var _index2 = _interopRequireDefault(_index);

var _message = __webpack_require__("./components/message/message.vdt");

var _message2 = _interopRequireDefault(_message);

__webpack_require__("./components/message/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var messages = void 0;
var id = 0;

var Message = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Message, _Intact);

    function Message() {
        _classCallCheck(this, Message);

        return _possibleConstructorReturn(this, (Message.__proto__ || Object.getPrototypeOf(Message)).apply(this, arguments));
    }

    _createClass(Message, [{
        key: 'defaults',
        value: function defaults() {
            return {
                content: undefined,
                duration: 5000,
                type: 'info',
                key: id++,
                value: false,
                closable: true,

                // if this component is used as instance or not
                _isInstance: false
            };
        }
    }, {
        key: 'init',
        value: function init() {
            var _get3;

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            if (!this.get('value')) {
                var _get2;

                // when use as component, render the component
                // but don't append it to parentDom, use a
                // placeholder instead of
                this.parentDom = null;
                (_get2 = _get(Message.prototype.__proto__ || Object.getPrototypeOf(Message.prototype), 'init', this)).call.apply(_get2, [this].concat(args));
                return this.placeholder = document.createComment("message");
            } else if (this.element) {
                // Messages render this component, return the 
                // original dom
                return this.element;
            }
            return (_get3 = _get(Message.prototype.__proto__ || Object.getPrototypeOf(Message.prototype), 'init', this)).call.apply(_get3, [this].concat(args));
        }
    }, {
        key: 'hydrate',
        value: function hydrate(vNode) {
            // don't hydrate it, but initialize it
            this.init(null, vNode);
            return this.placeholder = document.createComment('message');
        }
    }, {
        key: 'update',
        value: function update(lastVNode, nextVNode) {
            // when this updating is from original parent,
            // update the original dom, but return the placeholder,
            // otherwise return the original dom which has been updated
            if (!lastVNode ||
            // it may have not parentVNode in vue
            lastVNode.parentVNode && lastVNode.parentVNode.tag === MessageAnimate) {
                return this.element;
            }
            _get(Message.prototype.__proto__ || Object.getPrototypeOf(Message.prototype), 'update', this).call(this, lastVNode, nextVNode);
            return this.placeholder;
        }
    }, {
        key: 'toString',
        value: function toString() {
            // return the placeholder string for ssr
            return '<!--message-->';
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this.on('$change:value', function (c, value) {
                if (value) {
                    messages.notice(_this2);
                } else {
                    messages.delete(_this2);
                }
            });
        }
    }, {
        key: '_create',
        value: function _create() {
            if (!messages) {
                messages = _intact2.default.mount(Messages, document.body);
            }
        }
    }, {
        key: '_mount',
        value: function _mount() {
            var _this3 = this;

            if (!this.get('value')) return;

            var duration = this.get('duration');
            if (duration) {
                this.timer = setTimeout(function () {
                    _this3.close();
                }, duration);
            }
        }
    }, {
        key: 'close',
        value: function close() {
            clearTimeout(this.timer);
            if (!this.get('_isInstance')) {
                this.set('value', false);
            } else {
                messages.delete(this);
            }
        }
    }, {
        key: 'onMouseEnter',
        value: function onMouseEnter() {
            clearTimeout(this.timer);
        }
    }, {
        key: 'onMouseLeave',
        value: function onMouseLeave() {
            clearTimeout(this.timer);
            this._mount();
        }
    }, {
        key: 'destroy',
        value: function destroy(vNode) {
            if (this._isVue && !vNode) {
                messages.delete(this);
            } else if (vNode.parentVNode.tag === MessageAnimate && !this.get('_isInstance')) {
                return;
            } else if (vNode.parentVNode.tag !== MessageAnimate) {
                messages.delete(this);
            } else {
                _get(Message.prototype.__proto__ || Object.getPrototypeOf(Message.prototype), 'destroy', this).call(this, vNode);
            }
        }
    }], [{
        key: 'notice',
        value: function notice(content) {
            var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5000;
            var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'info';

            if (!messages) {
                messages = _intact2.default.mount(Messages, document.body);
            }

            if (content !== null && (typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && !content.tag) {
                content = Object.assign({}, content, { type: type });
            } else {
                content = { content: content, duration: duration, type: type };
            }

            var message = new Message(_extends({}, content, {
                value: true,
                _isInstance: true
            }));

            messages.notice(message);

            return message;
        }
    }]);

    return Message;
}(_intact2.default), _class2.template = _message2.default, _class2.info = function (content, duration) {
    Message.notice(content, duration, 'info');
}, _class2.error = function (content, duration) {
    Message.notice(content, duration, 'danger');
}, _class2.success = function (content, duration) {
    Message.notice(content, duration, 'success');
}, _class2.warning = function (content, duration) {
    Message.notice(content, duration, 'warning');
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Message;
var Messages = (_dec2 = _intact2.default.template(), (_class3 = (_temp2 = _class4 = function (_Intact2) {
    _inherits(Messages, _Intact2);

    function Messages() {
        _classCallCheck(this, Messages);

        return _possibleConstructorReturn(this, (Messages.__proto__ || Object.getPrototypeOf(Messages)).apply(this, arguments));
    }

    _createClass(Messages, [{
        key: 'defaults',
        value: function defaults() {
            return {
                messages: []
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            this.MessageAnimate = MessageAnimate;
        }
    }, {
        key: 'notice',
        value: function notice(message) {
            this.get('messages').push(message);
            this.update();
        }
    }, {
        key: 'delete',
        value: function _delete(message) {
            var messages = this.get('messages');
            var index = messages.indexOf(message);
            if (~index) {
                messages.splice(index, 1);
                this.update();
            }
        }
    }]);

    return Messages;
}(_intact2.default), _class4.template = _index2.default, _temp2), (_applyDecoratedDescriptor(_class3, 'template', [_dec2], (_init2 = Object.getOwnPropertyDescriptor(_class3, 'template'), _init2 = _init2 ? _init2.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init2;
    }
}), _class3)), _class3));

// MessageAniamte type for type checking

var MessageAnimate = function (_Intact$Animate) {
    _inherits(MessageAnimate, _Intact$Animate);

    function MessageAnimate() {
        _classCallCheck(this, MessageAnimate);

        return _possibleConstructorReturn(this, (MessageAnimate.__proto__ || Object.getPrototypeOf(MessageAnimate)).apply(this, arguments));
    }

    return MessageAnimate;
}(_intact2.default.Animate);

exports.Message = Message;

/***/ }),

/***/ "./components/message/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/message/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/message/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/message/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/message/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

  _Vdt || (_Vdt = Vdt);
  obj || (obj = {});
  blocks || (blocks = {});
  var h = _Vdt.miss.h,
      hc = _Vdt.miss.hc,
      hu = _Vdt.miss.hu,
      widgets = this && this.widgets || {},
      _blocks = {},
      __blocks = {},
      __u = _Vdt.utils,
      extend = __u.extend,
      _e = __u.error,
      _className = __u.className,
      __o = __u.Options,
      _getModel = __o.getModel,
      _setModel = __o.setModel,
      _setCheckboxModel = __u.setCheckboxModel,
      _detectCheckboxChecked = __u.detectCheckboxChecked,
      _setSelectModel = __u.setSelectModel,
      self = this.data,
      scope = obj,
      Animate = self && self.Animate,
      parent = ($callee || {})._super;
  var MessageAnimate = self.MessageAnimate;

  return h(Animate, { 'className': 'k-messages', 'children': _Vdt.utils.map(function () {
      try {
        return [self.get('messages')][0];
      } catch (e) {
        _e(e);
      }
    }.call(this), function (value, key) {
      return h(MessageAnimate, { 'a:tag': function () {
          try {
            return [value][0];
          } catch (e) {
            _e(e);
          }
        }.call(this), 'key': function () {
          try {
            return [value.get('key')][0];
          } catch (e) {
            _e(e);
          }
        }.call(this), 'children': null, '_context': this });
    }, this), '_context': this });
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/message/message.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

  _Vdt || (_Vdt = Vdt);
  obj || (obj = {});
  blocks || (blocks = {});
  var h = _Vdt.miss.h,
      hc = _Vdt.miss.hc,
      hu = _Vdt.miss.hu,
      widgets = this && this.widgets || {},
      _blocks = {},
      __blocks = {},
      __u = _Vdt.utils,
      extend = __u.extend,
      _e = __u.error,
      _className = __u.className,
      __o = __u.Options,
      _getModel = __o.getModel,
      _setModel = __o.setModel,
      _setCheckboxModel = __u.setCheckboxModel,
      _detectCheckboxChecked = __u.detectCheckboxChecked,
      _setSelectModel = __u.setSelectModel,
      self = this.data,
      scope = obj,
      Animate = self && self.Animate,
      parent = ($callee || {})._super;

  var _self$get = self.get(),
      type = _self$get.type,
      content = _self$get.content,
      children = _self$get.children,
      closable = _self$get.closable;

  return h('div', { 'ev-mouseenter': function () {
      try {
        return [self.onMouseEnter][0];
      } catch (e) {
        _e(e);
      }
    }.call(this), 'ev-mouseleave': function () {
      try {
        return [self.onMouseLeave][0];
      } catch (e) {
        _e(e);
      }
    }.call(this) }, h('div', null, [h('i', null, null, 'k-icon ion-ios-information'), function () {
    try {
      return [typeof content === 'string' || typeof content === 'number'][0];
    } catch (e) {
      _e(e);
    }
  }.call(this) ? h('div', { 'innerHTML': function () {
      try {
        return [content][0];
      } catch (e) {
        _e(e);
      }
    }.call(this) }, null, 'k-content') : h('div', null, function () {
    try {
      return [children][0];
    } catch (e) {
      _e(e);
    }
  }.call(this), 'k-content'), function () {
    try {
      return [closable][0];
    } catch (e) {
      _e(e);
    }
  }.call(this) ? h(_button2.default, { 'type': 'none', 'icon': function () {
      try {
        return [true][0];
      } catch (e) {
        _e(e);
      }
    }.call(this), 'className': 'k-close', 'ev-click': function () {
      try {
        return [self.close][0];
      } catch (e) {
        _e(e);
      }
    }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-close-empty'), '_context': this }) : undefined], 'k-container'), _className(function () {
    try {
      return [_defineProperty({ "k-message": true }, 'k-' + type, type !== 'info')][0];
    } catch (e) {
      _e(e);
    }
  }.call(this)));
};

var _button = __webpack_require__("./components/button/index.js");

var _button2 = _interopRequireDefault(_button);

var _moveWrapper = __webpack_require__("./components/moveWrapper/index.js");

var _moveWrapper2 = _interopRequireDefault(_moveWrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/moveWrapper/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MoveWrapper = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MoveWrapper = function (_Intact) {
    _inherits(MoveWrapper, _Intact);

    function MoveWrapper() {
        _classCallCheck(this, MoveWrapper);

        return _possibleConstructorReturn(this, (MoveWrapper.__proto__ || Object.getPrototypeOf(MoveWrapper)).apply(this, arguments));
    }

    _createClass(MoveWrapper, [{
        key: 'template',
        value: function template(self, Vdt) {
            var children = self.get('children');
            return children || Vdt.miss.hc('MoveWrapper');
        }
    }, {
        key: 'defaults',
        value: function defaults() {
            return {
                autoDestroy: true,
                container: undefined
            };
        }
    }, {
        key: 'init',
        value: function init() {
            var _get2;

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            (_get2 = _get(MoveWrapper.prototype.__proto__ || Object.getPrototypeOf(MoveWrapper.prototype), 'init', this)).call.apply(_get2, [this].concat(args));
            return this.placeholder = document.createComment("placeholder");
        }
    }, {
        key: 'hydrate',
        value: function hydrate() {
            var _get3;

            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }

            (_get3 = _get(MoveWrapper.prototype.__proto__ || Object.getPrototypeOf(MoveWrapper.prototype), 'hydrate', this)).call.apply(_get3, [this].concat(args));
            return this.placeholder = document.createComment('placeholder');
        }
    }, {
        key: 'update',
        value: function update(lastVNode, nextVNode) {
            _get(MoveWrapper.prototype.__proto__ || Object.getPrototypeOf(MoveWrapper.prototype), 'update', this).call(this, lastVNode, nextVNode);
            return this.placeholder;
        }
    }, {
        key: 'destroy',
        value: function destroy() {
            if (this.get('autoDestroy')) {
                this._$destroy.apply(this, arguments);
            }
        }

        /**
         * @brief override super destroy 
         *
         * MoveWraper component has changed the dom struction.
         * It is always the top level dom, so we should 
         * remove it from parent dom. By passing the container
         * to remove function can do this. We can't remove it
         * directly by calling removeChild method, beacause it
         * maybe have leave animation.
         *
         * @param ...args
         */

    }, {
        key: '_$destroy',
        value: function _$destroy(lastVNode, nextVNode) {
            // if (this.destroyed) {
            // return console.warn('destroyed multiple times');
            // }
            if (this.rendered && (!nextVNode || !(nextVNode.type & _intact2.default.Vdt.miss.Types.ComponentClassOrInstance) || nextVNode.key !== lastVNode.key)) {
                _intact2.default.Vdt.miss.remove(this.vdt.vNode, this.container);
            }
            this._destroy(lastVNode, nextVNode);
            this.destroyed = true;
            this.trigger('$destroyed', this);
            this.off();
        }
    }, {
        key: '_mount',
        value: function _mount(lastVNode, nextVNode) {
            var container = this.get('container');
            if (container) {
                this.container = document.querySelector(container);
            }
            if (!this.container) {
                this.container = document.body;
            }
            this.container.appendChild(this.element);
        }
    }]);

    return MoveWrapper;
}(_intact2.default);

exports.default = MoveWrapper;
exports.MoveWrapper = MoveWrapper;

/***/ }),

/***/ "./components/moveWrapper/position.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = position;
var max = Math.max;
var abs = Math.abs;
var rHorizontal = /left|center|right/;
var rVertical = /top|center|bottom/;
var rOffset = /[\+\-]\d+(\.[\d]+)?%?/;
var rPosition = /^\w+/;
var rPercent = /%$/;

function position(elem, options) {
    options = Object.assign({}, options);

    var target = options.of || window;
    // const dimensions = getDimensions(target);
    if (target.preventDefault) {
        options.at = "left top";
    }

    var _getDimensions = getDimensions(target),
        targetWidth = _getDimensions.width,
        targetHeight = _getDimensions.height,
        targetOffset = _getDimensions.offset;

    var basePosition = Object.assign({}, targetOffset);
    var collision = (options.collision || 'flip').split(' ');
    var offsets = {};

    ['my', 'at'].forEach(function (item) {
        var pos = (options[item] || '').split(' ');

        if (pos.length === 1) {
            pos = rHorizontal.test(pos[0]) ? pos.concat(['center']) : rVertical.test(pos[0]) ? ['center'].concat(pos) : ['center', 'center'];
        }
        pos[0] = rHorizontal.test(pos[0]) ? pos[0] : 'center';
        pos[1] = rVertical.test(pos[1]) ? pos[1] : 'center';

        var horizontalOffset = rOffset.exec(pos[0]);
        var verticalOffset = rOffset.exec(pos[1]);
        offsets[item] = [horizontalOffset ? horizontalOffset[0] : 0, verticalOffset ? verticalOffset[0] : 0];

        options[item] = [rPosition.exec(pos[0])[0], rPosition.exec(pos[1])[0]];
    });

    if (collision.length === 1) {
        collision[1] = collision[0];
    }

    var at = options.at;
    if (at[0] === 'right') {
        basePosition.left += targetWidth;
    } else if (at[0] === 'center') {
        basePosition.left += targetWidth / 2;
    }
    if (at[1] === 'bottom') {
        basePosition.top += targetHeight;
    } else if (at[1] === 'center') {
        basePosition.top += targetHeight / 2;
    }

    var atOffset = getOffsets(offsets.at, targetWidth, targetHeight);
    basePosition.left += atOffset[0];
    basePosition.top += atOffset[1];

    var elemWidth = elem.offsetWidth;
    var elemHeight = elem.offsetHeight;
    var position = Object.assign({}, basePosition);
    var myOffset = getOffsets(offsets.my, elemWidth, elemHeight);

    var my = options.my;
    if (my[0] === 'right') {
        position.left -= elemWidth;
    } else if (my[0] === 'center') {
        position.left -= elemWidth / 2;
    }
    if (my[1] === 'bottom') {
        position.top -= elemHeight;
    } else if (my[1] === 'center') {
        position.top -= elemHeight / 2;
    }
    position.left += myOffset[0];
    position.top += myOffset[1];

    var style = elem.style;

    var _window$getComputedSt = window.getComputedStyle(elem),
        elemPosition = _window$getComputedSt.elemPosition;

    if (elemPosition === 'static') {
        style.position = 'relative';
    }
    style.left = position.left + 'px';
    style.top = position.top + 'px';

    if (options.using) {
        var left = targetOffset.left - position.left;
        var right = left + targetWidth - elemWidth;
        var top = targetOffset.top - position.top;
        var bottom = top + targetHeight - elemHeight;
        var feedback = {
            horizontal: right < 0 ? 'left' : left > 0 ? 'right' : 'center',
            vertical: bottom < 0 ? 'top' : top > 0 ? 'bottom' : 'middle'
        };
        if (targetWidth < elemWidth && abs(left + right) < targetWidth) {
            feedback.horizontal = 'center';
        }
        if (targetHeight < elemHeight && abs(top + bottom) < targetHeight) {
            feedback.vertical = 'middle';
        }
        if (max(abs(left), abs(right)) > max(abs(top), abs(bottom))) {
            feedback.important = 'horizontal';
        } else {
            feedback.important = 'vertical';
        }
        options.using(feedback);
    }
}

function getDimensions(elem) {
    if (elem.nodeType === 9) {
        // document
        return {
            width: elem.offsetWidth,
            height: elem.offsetHeight,
            offset: {
                top: 0,
                left: 0
            }
        };
    } else if (elem === window) {
        var _d = elem.document.documentElement;
        return {
            width: _d.clientWidth,
            height: _d.clientHeight,
            offset: {
                top: elem.pageYOffset || _d.scrollTop,
                left: elem.pageXOffset || _d.scrollLeft
            }
        };
    } else if (elem.preventDefault) {
        // event
        return {
            width: 0,
            height: 0,
            offset: {
                top: elem.pageY,
                left: elem.pageX
            }
        };
    }
    // dom
    var rect = elem.getBoundingClientRect();
    var d = elem.ownerDocument.defaultView;
    return {
        width: rect.width,
        height: rect.height,
        offset: {
            top: rect.top + d.pageYOffset,
            left: rect.left + d.pageXOffset
        }
    };
}

function getOffsets(offsets, width, height) {
    return [parseFloat(offsets[0]) * (rPercent.test(offsets[0]) ? width / 100 : 1), parseFloat(offsets[1]) * (rPercent.test(offsets[1]) ? height / 100 : 1)];
}

exports.position = position;

/***/ }),

/***/ "./components/pagination/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Pagination = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/pagination/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/pagination/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Pagination = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Pagination, _Intact);

    function Pagination() {
        _classCallCheck(this, Pagination);

        return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
    }

    _createClass(Pagination, [{
        key: 'defaults',
        value: function defaults() {
            return {
                total: 0,
                current: 1,
                limit: 10,
                counts: 7,
                showTotal: true,
                limits: [10, 20, 50],
                // value: '',
                showGoto: false,
                size: 'default'
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            // avoid setting incorrect value
            this.changePage(this.get('current'));

            this.on('$change:limit', function () {
                _this2.set('current', 1);
            });
        }
    }, {
        key: 'changePage',
        value: function changePage(page) {
            var _get = this.get(),
                total = _get.total,
                limit = _get.limit;

            var totalPages = Math.ceil(total / limit);

            if (page > totalPages) {
                page = totalPages;
            }
            if (page < 1) {
                page = 1;
            }

            this.set('current', page);
        }
    }, {
        key: 'prev',
        value: function prev() {
            this.changePage(this.get('current') - 1);
        }
    }, {
        key: 'next',
        value: function next() {
            this.changePage(this.get('current') + 1);
        }
    }, {
        key: 'fastPrev',
        value: function fastPrev() {
            var page = this.get('current') - Math.ceil(this.get('counts') / 2);
            this.changePage(page);
        }
    }, {
        key: 'fastNext',
        value: function fastNext() {
            var page = this.get('current') + Math.ceil(this.get('counts') / 2);
            this.changePage(page);
        }
    }, {
        key: '_goto',
        value: function _goto(e) {
            // const regexp = /^[1-9]\d*$/;
            var value = parseInt(e.target.value) || 1;
            this.changePage(value);
        }
    }]);

    return Pagination;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    showGoto: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Pagination;
exports.Pagination = Pagination;

/***/ }),

/***/ "./components/pagination/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/pagination/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/pagination/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/pagination/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/pagination/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        total = _self$get.total,
        current = _self$get.current,
        limit = _self$get.limit,
        limits = _self$get.limits,
        className = _self$get.className,
        showTotal = _self$get.showTotal,
        showGoto = _self$get.showGoto,
        counts = _self$get.counts,
        size = _self$get.size,
        rest = _objectWithoutProperties(_self$get, ['total', 'current', 'limit', 'limits', 'className', 'showTotal', 'showGoto', 'counts', 'size']);

    var classNameObj = (_classNameObj = {
        'k-pagination': true
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-' + size, size !== 'default'), _classNameObj);

    var totalPages = Math.ceil(total / limit) || 0;

    var paginationButton = function paginationButton(page) {
        return h('div', { 'ev-click': function () {
                try {
                    return [self.changePage.bind(self, page)][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, function () {
            try {
                return [page][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), _className(function () {
            try {
                return [{ 'k-page': true, 'k-active': page === current }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)));
    };

    var paginationDot = function paginationDot(callback) {
        return h('div', { 'ev-click': function () {
                try {
                    return [callback][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, '...', 'k-ellipsis');
    };

    return h('div', null, [h('div', null, function () {
        var _this = this;

        try {
            return [function () {
                var items = [];
                var minCount = Math.ceil(counts / 2);
                var maxCount = totalPages - minCount;
                var prevPage = current - 1;
                var nextPage = current + 1;

                // previous page button
                items.push(h('div', { 'ev-click': function () {
                        try {
                            return [prevPage < 1 ? undefined : self.prev][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }, h('i', null, null, 'ion-ios-arrow-left'), _className(function () {
                    try {
                        return [{ 'k-prev': true, 'k-disabled': prevPage < 1 }][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(_this))));

                if (totalPages > counts) {
                    if (current <= minCount) {
                        var max = counts - 2;
                        for (var i = 1; i <= max; i++) {
                            items.push(paginationButton(i));
                        }
                        items.push(paginationDot(self.fastNext));
                        items.push(paginationButton(totalPages));
                    } else if (current > minCount && current <= maxCount) {
                        items.push(paginationButton(1));
                        items.push(paginationDot(self.fastPrev));

                        var midCount = counts - 4;
                        var mid = Math.floor(midCount / 2);
                        var min = current - mid;
                        var _max = midCount % 2 === 1 ? current + mid : current + mid - 1;
                        for (var _i = min; _i <= _max; _i++) {
                            items.push(paginationButton(_i));
                        }

                        items.push(paginationDot(self.fastNext));
                        items.push(paginationButton(totalPages));
                    } else {
                        items.push(paginationButton(1));
                        items.push(paginationDot(self.fastPrev));

                        var _min = totalPages - counts + 3;
                        for (var _i2 = _min; _i2 <= totalPages; _i2++) {
                            items.push(paginationButton(_i2));
                        }
                    }
                } else {
                    for (var _i3 = 1; _i3 <= totalPages; _i3++) {
                        items.push(paginationButton(_i3));
                    }
                }

                // next page button
                items.push(h('div', { 'ev-click': function () {
                        try {
                            return [nextPage > totalPages ? undefined : self.next][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }, h('i', null, null, 'ion-ios-arrow-right'), _className(function () {
                    try {
                        return [{ 'k-next': true, 'k-disabled': nextPage > totalPages }][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(_this))));

                return items;
            }()][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-pages'), h('div', null, h(_select2.default, { 'data': function () {
            try {
                return [limits.map(function (item) {
                    return { 'value': item, 'label': item + ' 条 / 页' };
                })][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'size': function () {
            try {
                return [size][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this, value: _getModel(self, 'limit'), 'ev-$change:value': function ev$changeValue(__c, __n) {
            _setModel(self, 'limit', __n);
        } }), 'k-limits'), function () {
        try {
            return [showGoto][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, ['\n        跳至', h(_input2.default, { 'size': function () {
            try {
                return [size][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'value': function () {
            try {
                return [current][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-change': function () {
            try {
                return [self._goto][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this }), '页\n    '], 'k-goto') : undefined, function () {
        try {
            return [showTotal][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, ['共 ', function () {
        try {
            return [total][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), ' 条'], 'k-total') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _select = __webpack_require__("./components/select/index.js");

var _select2 = _interopRequireDefault(_select);

var _input = __webpack_require__("./components/input/index.js");

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/progress/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Progress = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/progress/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/progress/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by sylvia on 2017/10/16.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


function fixPercent(percent) {
    if (percent > 100) percent = 100;
    if (percent < 0) percent = 0;
    return percent;
}

var Progress = function (_Intact) {
    _inherits(Progress, _Intact);

    function Progress() {
        _classCallCheck(this, Progress);

        return _possibleConstructorReturn(this, (Progress.__proto__ || Object.getPrototypeOf(Progress)).apply(this, arguments));
    }

    _createClass(Progress, [{
        key: 'defaults',
        value: function defaults() {
            return {
                type: 'bar', // bar circle
                percent: 0, // 0~100
                size: 'default', // small mini
                isOuterText: true,
                isInnerText: false, // FIXME: 布尔型取值用is开头 isShowInnerText 见README
                status: 'active', // success | error | active | normal
                strokeWidth: 10
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this._initStatus = this.get('status');

            this.on('$change:percent', function (c, percent) {
                percent = fixPercent(percent);
                var status = percent === 100 ? 'success' : _this2._initStatus;
                _this2.set({
                    status: status,
                    percent: percent
                });
            });
            this.on('$change:status', function (c, status) {
                if (status !== 'success') _this2._initStatus = status;
            });

            this.set('percent', fixPercent(this.get('percent')));
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Progress;
}(_intact2.default);

exports.default = Progress;
exports.Progress = Progress;

/***/ }),

/***/ "./components/progress/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/progress/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/progress/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/progress/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/progress/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        type = _self$get.type,
        className = _self$get.className,
        percent = _self$get.percent,
        status = _self$get.status,
        size = _self$get.size,
        isOuterText = _self$get.isOuterText,
        isInnerText = _self$get.isInnerText,
        ref = _self$get.ref,
        key = _self$get.key,
        strokeWidth = _self$get.strokeWidth,
        children = _self$get.children,
        rest = _objectWithoutProperties(_self$get, ['type', 'className', 'percent', 'status', 'size', 'isOuterText', 'isInnerText', 'ref', 'key', 'strokeWidth', 'children']);

    var classNameObj = (_classNameObj = {
        'k-progress': true
    }, _defineProperty(_classNameObj, 'k-' + type, type), _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-' + status, status !== 'normal'), _defineProperty(_classNameObj, 'k-' + size, size !== 'default'), _classNameObj);

    return h('div', _extends({}, function () {
        try {
            return [rest][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), [function () {
        try {
            return [type === 'bar'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, h('div', null, h('div', { 'style': function () {
            try {
                return [{ width: percent + '%' }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [isInnerText][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, ['\n                    ', function () {
        try {
            return [percent][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), ' %\n                '], 'k-inner-text') : undefined, 'k-bg'), 'k-content'), 'k-container') : undefined, function () {
        try {
            return [type === 'circle'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('svg', { 'viewBox': '0 0 120 120' }, ['\n        ', function () {
        var _this = this;

        try {
            return [function () {
                var r = (120 - strokeWidth) / 2;
                var circumference = 2 * Math.PI * r;

                return [h('circle', { 'cx': '60', 'cy': '60', 'r': function () {
                        try {
                            return [r][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-width': function () {
                        try {
                            return [strokeWidth][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }, null, 'k-meter'), h('circle', { 'cx': '60', 'cy': '60', 'r': function () {
                        try {
                            return [r][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-dashoffset': function () {
                        try {
                            return [circumference * (1 - percent / 100)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-dasharray': function () {
                        try {
                            return [circumference][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-width': function () {
                        try {
                            return [strokeWidth][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }, null, 'k-value'), function () {
                    try {
                        return [status === 'active'][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(_this) ? h('circle', { 'cx': '60', 'cy': '60', 'r': function () {
                        try {
                            return [r][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-width': function () {
                        try {
                            return [strokeWidth][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-dasharray': function () {
                        try {
                            return [circumference][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'stroke-dashoffset': function () {
                        try {
                            return [circumference][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }, [h('animate', { 'attributeName': 'stroke-dashoffset', 'begin': '0s', 'dur': '2s', 'repeatCount': 'indefinite', 'from': function () {
                        try {
                            return [circumference][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'to': function () {
                        try {
                            return [circumference * (1 - percent / 100)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this) }), h('animate', { 'attributeName': 'opacity', 'begin': '0s', 'dur': '2s', 'repeatCount': 'indefinite', 'from': '0.2', 'to': '0' })], 'k-animate') : undefined];
            }()][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n    '], 'k-canvas') : undefined, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-text') : function () {
        try {
            return [isOuterText][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [status !== 'success' && status !== 'error'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('span', null, [function () {
        try {
            return [percent][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '%']) : function () {
        try {
            return [status === 'success'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('span', null, '100%') : function () {
        try {
            return [status === 'error'][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('span', null, [function () {
        try {
            return [percent][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '%']) : undefined, 'k-text') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/radio/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Radio = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/radio/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/radio/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Radio = (_temp = _class = function (_Intact) {
    _inherits(Radio, _Intact);

    function Radio() {
        _classCallCheck(this, Radio);

        return _possibleConstructorReturn(this, (Radio.__proto__ || Object.getPrototypeOf(Radio)).apply(this, arguments));
    }

    _createClass(Radio, [{
        key: 'defaults',
        value: function defaults() {
            return {
                disabled: false,
                value: false,
                trueValue: true
            };
        }
    }, {
        key: 'isChecked',
        value: function isChecked() {
            return this.get('value') === this.get('trueValue');
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            if (this.isChecked()) {
                this.set('value', undefined);
            }
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Radio;
}(_intact2.default), _class.propTypes = {
    disabled: Boolean
}, _temp);
exports.default = Radio;
exports.Radio = Radio;

/***/ }),

/***/ "./components/radio/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/radio/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/radio/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/radio/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/radio/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        disabled = _self$get.disabled,
        trueValue = _self$get.trueValue,
        style = _self$get.style,
        children = _self$get.children,
        value = _self$get.value,
        ref = _self$get.ref,
        key = _self$get.key,
        rest = _objectWithoutProperties(_self$get, ['className', 'disabled', 'trueValue', 'style', 'children', 'value', 'ref', 'key']);

    var classNameObj = _defineProperty({
        'k-radio': true,
        'k-disabled': disabled,
        'k-checked': self.isChecked()
    }, className, className);

    return h('label', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('span', null, h('input', _extends({ 'type': 'radio', 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'value': function () {
            try {
                return [trueValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [rest][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), { checked: _getModel(self, 'value') === function () {
            try {
                return [trueValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-change': function evChange(__e) {
            _setModel(self, 'value', __e.target.checked ? function () {
                try {
                    return [trueValue][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) : false);
        } })), 'k-wrapper'), function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('span', null, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-text') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/scrollSelect/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ScrollSelect = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/scrollSelect/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/scrollSelect/index.styl");

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var ScrollSelect = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(ScrollSelect, _Intact);

    function ScrollSelect() {
        _classCallCheck(this, ScrollSelect);

        return _possibleConstructorReturn(this, (ScrollSelect.__proto__ || Object.getPrototypeOf(ScrollSelect)).apply(this, arguments));
    }

    _createClass(ScrollSelect, [{
        key: 'defaults',
        value: function defaults() {
            return {
                value: '',
                count: 19,
                data: [],
                disabled: false,

                _list: [],
                _translate: 0,
                _marginTop: 0,
                _dragging: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this._setList();

            ['data', 'value', 'count'].forEach(function (item) {
                _this2.on('$change:' + item, _this2._setList);
            });

            this._move = this._move.bind(this);
            this._dragEnd = this._dragEnd.bind(this);

            // throttle onWheel
            var lock = false;
            var onWheel = this._onWheel;
            this._onWheel = function (e) {
                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                }

                e.preventDefault();
                if (lock) return;
                lock = true;
                _this2.timer = setTimeout(function () {
                    onWheel.apply(undefined, [e].concat(args));
                    lock = false;
                }, 50);
            };
        }
    }, {
        key: '_mount',
        value: function _mount() {
            var height = this.element.offsetHeight;
            var totalHeight = this.refs.wrapper.offsetHeight;
            this._deltaY = -Math.floor((totalHeight - height) / 2);
            this.set({
                _translate: this._deltaY
            });
        }
    }, {
        key: '_select',
        value: function _select(item, index) {
            var _get = this.get(),
                count = _get.count,
                _translate = _get._translate,
                _marginTop = _get._marginTop;

            var half = Math.floor(count / 2);
            var itemHeight = this.refs.item.offsetHeight;

            this.set({
                _translate: _translate - itemHeight * (index - half),
                _marginTop: _marginTop + itemHeight * (index - half),
                value: item.value
            });
        }
    }, {
        key: '_setList',
        value: function _setList() {
            var _get2 = this.get(),
                data = _get2.data,
                value = _get2.value,
                count = _get2.count;

            if (typeof data === 'function') {
                data = data(value);
            }

            var index = -1;
            data = data.map(function (item, i) {
                if ((0, _utils.isStringOrNumber)(item)) {
                    item = { value: item, label: item };
                }
                if (item.value === value) {
                    index = i;
                }
                return item;
            });

            if (!~index) {
                index = 0;
                this.set('value', data[0].value, { silent: true });
            }

            var length = data.length;
            var half = Math.floor(count / 2);
            var _list = [];
            for (var i = 0; i < count; i++) {
                _list.push(data[((index - half + i) % length + length) % length]);
            }
            this.set('_list', _list, { silent: true });
        }
    }, {
        key: '_dragStart',
        value: function _dragStart(e) {
            if (e.which !== 1) return;

            this.set('_dragging', true);
            this._y = e.clientY;
            this._initY = e.clientY;
            this._itemHeight = this.refs.item.offsetHeight;

            document.addEventListener('mousemove', this._move);
            document.addEventListener('mouseup', this._dragEnd);
        }
    }, {
        key: '_move',
        value: function _move(e) {
            if (this.get('_dragging')) {
                var deltaY = e.clientY - this._y;
                this._y = e.clientY;

                var _get3 = this.get(),
                    _translate = _get3._translate;

                var _deltaY = this._y - this._initY;
                var offsetIndex = Math.floor(Math.abs(_deltaY) / this._itemHeight);
                if (offsetIndex) {
                    if (_deltaY < 0) {
                        offsetIndex = -offsetIndex;
                    }
                    this._setByRelativeIndex(-offsetIndex, -_deltaY);
                    this._initY = this._y;
                }
                this.set('_translate', _translate + deltaY);
            }
        }
    }, {
        key: '_setByRelativeIndex',
        value: function _setByRelativeIndex(index, deltaY, isSetTranslate) {
            var _get4 = this.get(),
                _list = _get4._list,
                value = _get4.value,
                _marginTop = _get4._marginTop;

            var i = _list.findIndex(function (v) {
                return v.value === value;
            });
            var l = _list.length;
            var itemHeight = this._itemHeight;
            var props = {
                'value': _list[(l + i + index) % l].value,
                _marginTop: _marginTop + (deltaY || index * itemHeight)
            };
            if (isSetTranslate) {
                props._translate = this.get('_translate') - itemHeight * index;
            }
            this.set(props);
        }
    }, {
        key: '_dragEnd',
        value: function _dragEnd(e) {
            if (this.get('_dragging')) {
                this.set('_dragging', false);
                this.set({
                    _translate: -this.get('_marginTop') + this._deltaY
                });
                document.removeEventListener('mousemove', this._move);
                document.removeEventListener('mouseup', this._dragEnd);
            }
        }
    }, {
        key: '_onWheel',
        value: function _onWheel(e) {
            e.preventDefault();
            this._itemHeight = this.refs.item.offsetHeight;
            if (e._rawEvent.deltaY > 0) {
                // down
                this._setByRelativeIndex(1, null, true);
            } else {
                this._setByRelativeIndex(-1, null, true);
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            document.removeEventListener('mousemove', this._move);
            document.removeEventListener('mouseup', this._dragEnd);
            clearTimeout(this.timer);
        }
    }]);

    return ScrollSelect;
}(_intact2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = ScrollSelect;
exports.ScrollSelect = ScrollSelect;

/***/ }),

/***/ "./components/scrollSelect/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/scrollSelect/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/scrollSelect/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/scrollSelect/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/scrollSelect/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        value = _self$get.value,
        _list = _self$get._list,
        disabled = _self$get.disabled,
        _translate = _self$get._translate,
        _marginTop = _self$get._marginTop,
        _dragging = _self$get._dragging;

    var classNameObj = {
        "k-scroll-select": true,
        "k-dragging": _dragging,
        "k-disabled": disabled
    };

    return h('div', null, [h('div', { 'style': function () {
            try {
                return [{
                    transform: "translateY(" + _translate + "px)",
                    marginTop: _marginTop + "px"
                }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-mousedown': function () {
            try {
                return [!disabled ? self._dragStart : undefined][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-wheel': function () {
            try {
                return [!disabled ? self._onWheel : undefined][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, _Vdt.utils.map(function () {
        try {
            return [_list][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), function (item, key) {
        return h('div', { 'ev-click': function () {
                try {
                    return [!disabled ? self._select.bind(self, item, key) : undefined][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, function () {
            try {
                return [item.label][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), _className(function () {
            try {
                return [{
                    "k-item": true,
                    "k-active": item.value === value
                }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)), function () {
            try {
                return [item.key][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), function () {
            try {
                return [key === 0 ? function (dom) {
                    return self.refs.item = dom;
                } : undefined][0];
            } catch (e) {
                _e(e);
            }
        }.call(this));
    }, this), 'k-wrapper', null, function (i) {
        widgets['wrapper'] = i;
    }), function () {
        try {
            return [blocks.append][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, (_blocks.append = function (parent) {
        return null;
    }) && (__blocks.append = function (parent) {
        var self = this;
        return blocks.append ? blocks.append.call(this, function () {
            return _blocks.append.call(self, parent);
        }) : _blocks.append.call(this, parent);
    }) && __blocks.append.call(this), 'k-append') : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

module.exports = exports["default"];

/***/ }),

/***/ "./components/select/group.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _group = __webpack_require__("./components/select/group.vdt");

var _group2 = _interopRequireDefault(_group);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var OptionGroup = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(OptionGroup, _Intact);

    function OptionGroup() {
        _classCallCheck(this, OptionGroup);

        return _possibleConstructorReturn(this, (OptionGroup.__proto__ || Object.getPrototypeOf(OptionGroup)).apply(this, arguments));
    }

    return OptionGroup;
}(_intact2.default), _class2.template = _group2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = OptionGroup;
module.exports = exports['default'];

/***/ }),

/***/ "./components/select/group.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

  _Vdt || (_Vdt = Vdt);
  obj || (obj = {});
  blocks || (blocks = {});
  var h = _Vdt.miss.h,
      hc = _Vdt.miss.hc,
      hu = _Vdt.miss.hu,
      widgets = this && this.widgets || {},
      _blocks = {},
      __blocks = {},
      __u = _Vdt.utils,
      extend = __u.extend,
      _e = __u.error,
      _className = __u.className,
      __o = __u.Options,
      _getModel = __o.getModel,
      _setModel = __o.setModel,
      _setCheckboxModel = __u.setCheckboxModel,
      _detectCheckboxChecked = __u.detectCheckboxChecked,
      _setSelectModel = __u.setSelectModel,
      self = this.data,
      scope = obj,
      Animate = self && self.Animate,
      parent = ($callee || {})._super;

  var _self$get = self.get(),
      children = _self$get.children,
      label = _self$get.label;

  return h('div', null, [h('div', null, function () {
    try {
      return [label][0];
    } catch (e) {
      _e(e);
    }
  }.call(this), 'k-label'), '\n    ', function () {
    try {
      return [children][0];
    } catch (e) {
      _e(e);
    }
  }.call(this), '\n'], 'k-group');
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/select/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.OptionGroup = exports.Option = exports.Select = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/select/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/select/index.styl");

var _position2 = __webpack_require__("./components/moveWrapper/position.js");

var _position3 = _interopRequireDefault(_position2);

var _option = __webpack_require__("./components/select/option.js");

var _option2 = _interopRequireDefault(_option);

var _group = __webpack_require__("./components/select/group.js");

var _group2 = _interopRequireDefault(_group);

var _utils = __webpack_require__("./components/utils.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Select = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Select, _Intact);

    function Select() {
        _classCallCheck(this, Select);

        return _possibleConstructorReturn(this, (Select.__proto__ || Object.getPrototypeOf(Select)).apply(this, arguments));
    }

    _createClass(Select, [{
        key: 'defaults',
        value: function defaults() {
            return {
                data: [],
                value: '',
                multiple: false, //支持多选li
                disabled: false,
                clearable: false, // 是否可清空 
                filterable: false, // 搜索筛选
                keywords: undefined,
                placeholder: '请选择',
                size: 'default',
                fluid: false,
                width: undefined,

                _show: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this.on('$changed:value', function () {
                if (_this2.get('multiple') && _this2.get('_show')) {
                    _this2.refs.menu.position();
                }
            });
        }
    }, {
        key: '_onClear',
        value: function _onClear(e) {
            e.stopPropagation();
            this.set('value', '');
        }
    }, {
        key: '_onSelect',
        value: function _onSelect(value) {
            if (!this.get('multiple')) {
                this.set('value', value, { async: true });
            } else {
                var values = this.get('value');
                if (!Array.isArray(values)) {
                    values = [];
                } else {
                    values = values.slice(0);
                }
                var index = values.indexOf(value);
                if (~index) {
                    // if find, delete it
                    values.splice(index, 1);
                } else {
                    values.push(value);
                }
                this.set('value', values, { async: true });
                this._focusInput();
            }
            this._resetSearch();
        }
    }, {
        key: '_onSearch',
        value: function _onSearch(e) {
            this.set('keywords', e.target.value);
            // always show menu on searching
            this.refs.menu.show();
            this.refs.menu.focusItemByIndex(0);
            // in multiple mode, it may lead the height to change
            if (this.get('multiple')) {
                this.refs.menu.position();
            }
        }
    }, {
        key: '_resetSearch',
        value: function _resetSearch() {
            this.set('keywords', undefined, { async: true });
        }
    }, {
        key: '_onChangeShow',
        value: function _onChangeShow(c, value) {
            this.set('_show', value);
        }

        /**
         * @brief let the blur method called after select
         * if we selected the option, then the keywords has been to to undefind
         * in this case, we do nothing, otherwise we reset it
         */

    }, {
        key: '_onBlur',
        value: function _onBlur() {
            var _this3 = this;

            this.timer = setTimeout(function () {
                if (_this3.get('keywords') != null) {
                    _this3._resetSearch();
                }
            }, 200);
        }
    }, {
        key: '_selectInput',
        value: function _selectInput(e) {
            (0, _utils.selectInput)(e.target);
        }
    }, {
        key: '_onFocus',
        value: function _onFocus(e) {
            clearTimeout(this.timer);
        }
    }, {
        key: '_delete',
        value: function _delete(value, e) {
            e.stopPropagation();
            var values = this.get('value').slice(0);
            var index = values.indexOf(value);
            values.splice(index, 1);
            this.set('value', values);
            this._focusInput();
        }
    }, {
        key: '_focusInput',
        value: function _focusInput() {
            if (this.get('filterable')) {
                this.refs.input.focus();
            }
        }
    }, {
        key: '_position',
        value: function _position() {
            var menuElement = this.refs.menu.vdt.vNode.children.element;
            var width = this.element.offsetWidth;
            var menuWidth = menuElement.offsetWidth;
            if (width > menuWidth) {
                menuElement.style.width = width + 'px';
            }
        }
    }]);

    return Select;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    multiple: Boolean,
    disabled: Boolean,
    clearable: Boolean,
    filterable: Boolean,
    fluid: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Select;
exports.Select = Select;
exports.Option = _option2.default;
exports.OptionGroup = _group2.default;

/***/ }),

/***/ "./components/select/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/select/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/select/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/select/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/select/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj,
        _this = this;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        clearable = _self$get.clearable,
        data = _self$get.data,
        value = _self$get.value,
        multiple = _self$get.multiple,
        disabled = _self$get.disabled,
        filterable = _self$get.filterable,
        keywords = _self$get.keywords,
        _show = _self$get._show,
        placeholder = _self$get.placeholder,
        size = _self$get.size,
        style = _self$get.style,
        name = _self$get.name,
        children = _self$get.children,
        fluid = _self$get.fluid,
        width = _self$get.width;

    var classNameObj = (_classNameObj = {
        'k-select': true
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-disabled', disabled), _defineProperty(_classNameObj, 'k-show', _show), _defineProperty(_classNameObj, 'k-clearable', clearable), _defineProperty(_classNameObj, 'k-' + size, size !== 'default'), _defineProperty(_classNameObj, 'k-fluid', fluid), _classNameObj);

    var hasValue = value != null && (!multiple && value !== '' || multiple && value.length);
    var isGroup = Array.isArray(self.get('data.0.data'));

    var label = void 0;
    var labels = [];

    var handleProps = function handleProps(props) {
        var active = false;
        var valid = false;

        if (!multiple) {
            if (props.value === value) {
                // set label
                label = props.label;
                active = true;
            } else {
                active = false;
            }
        } else if (Array.isArray(value)) {
            var index = value.indexOf(props.value);
            if (~index) {
                // keep order consistent
                labels[index] = props.label;
                active = true;
            } else {
                active = false;
            }
        }

        var tmp = void 0;
        if (!filterable && props.label || keywords == null || ~props.label.toLowerCase().indexOf(tmp = keywords.toLowerCase()) || (0, _utils.isStringOrNumber)(props.value) && ~String(props.value).toLowerCase().indexOf(tmp)) {
            valid = true;
        }

        return { active: active, valid: valid };
    };

    var Options = function Options(props) {
        var data = props.data;
        var ret = [];
        data.forEach(function (item, index) {
            // deprecate text, use label instead of
            if (item.text) item.label = item.text;

            var _handleProps = handleProps(item),
                valid = _handleProps.valid,
                active = _handleProps.active;

            if (valid) {
                ret.push(h(_dropdown.DropdownItem, { 'ev-select': function () {
                        try {
                            return [self._onSelect.bind(self, item.value)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'disabled': function () {
                        try {
                            return [item.disabled][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'className': _className(function () {
                        try {
                            return [{ 'k-active': active }][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this)), 'hideOnSelect': function () {
                        try {
                            return [!multiple][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), 'children': function () {
                        try {
                            return [item.template ? item.template(item, index) : item.label][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this), '_context': _this }));
            }
        });

        return ret;
    };

    var OptionsVNodes = function OptionsVNodes(_ref) {
        var children = _ref.children;

        return __u.map(children ? Array.isArray(children) ? children : [children] : children, function (vNode) {
            if (vNode.tag === _option2.default) {
                var props = vNode.props;
                props = _extends({}, props, {
                    'ev-select': self._onSelect.bind(self, props.value),
                    hideOnSelect: !multiple,
                    label: props.label || (0, _utils.getTextByChildren)(props.children),
                    children: props.children || props.label
                });

                var _handleProps2 = handleProps(props),
                    active = _handleProps2.active,
                    valid = _handleProps2.valid;

                if (!valid) {
                    return hc('');
                } else {
                    var _className2;

                    props.className = _className((_className2 = {}, _defineProperty(_className2, props.className, props.className), _defineProperty(_className2, 'k-active', active), _className2));
                }

                // return the cloned vNode
                return h(_option2.default, props);
            } else if (vNode.tag === _group2.default) {
                var _props = vNode.props;
                _props = _extends({}, _props, {
                    children: h(OptionsVNodes, { 'children': function () {
                            try {
                                return [_props.children][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this), '_context': _this })
                });
                return h(_group2.default, _props);
            }

            return vNode;
        });
    };

    var Menu = h(_dropdown.DropdownMenu, { 'ev-$changed:show': function () {
            try {
                return [self._position][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'className': 'k-select-dropdown', 'ev-$change:show': function () {
            try {
                return [self._onChangeShow][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': [function () {
            try {
                return [!isGroup][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h(Options, { 'data': function () {
                try {
                    return [data][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': null, '_context': this }) : _Vdt.utils.map(function () {
            try {
                return [data][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), function (value, key) {
            return h(_group2.default, { 'label': function () {
                    try {
                        return [value.label][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'children': h(Options, { 'data': function () {
                        try {
                            return [value.data][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': null, '_context': this }), '_context': this });
        }, this), h(OptionsVNodes, { 'children': function () {
                try {
                    return [children][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), '_context': this })], '_context': this }, null, null, null, function (i) {
        widgets['menu'] = i;
    });

    // if the value is not in options, then set hasValue to false
    if (hasValue && !label && !labels.length) {
        hasValue = false;
    }

    return h('div', { 'style': function () {
            try {
                return [width != null ? (0, _utils.addStyle)(style, { width: width + 'px' }) : style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, h(_dropdown2.default, { 'position': function () {
            try {
                return [{ my: 'left top', at: 'left bottom' }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'trigger': 'click', 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': [h('div', { 'ev-click': function () {
                try {
                    return [self._focusInput][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, [h('input', { 'type': 'hidden', 'value': function () {
                try {
                    return [value][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'name': function () {
                try {
                    return [name][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }), function () {
            try {
                return [!multiple && filterable][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h(_input2.default, { 'value': function () {
                try {
                    return [keywords == null ? label : keywords][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'ev-input': function () {
                try {
                    return [self._onSearch][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'ev-blur': function () {
                try {
                    return [self._onBlur][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'ev-focus': function () {
                try {
                    return [self._selectInput][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'disabled': function () {
                try {
                    return [disabled][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'placeholder': function () {
                try {
                    return [placeholder][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'size': function () {
                try {
                    return [size][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'fluid': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': null, '_context': this }, null, null, null, function (i) {
            widgets['input'] = i;
        }) : function () {
            try {
                return [!filterable && !hasValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h('span', null, function () {
            try {
                return [placeholder][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'k-placeholder c-ellipsis') : function () {
            try {
                return [!multiple][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h('span', null, function () {
            try {
                return [label][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'k-value c-ellipsis') : h(Animate, { 'a:tag': 'span', 'a:disabled': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'className': 'k-values', 'children': [_Vdt.utils.map(function () {
                try {
                    return [labels][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), function (item, index) {
                return h(Animate, { 'a:tag': 'span', 'className': 'k-tag', 'key': function () {
                        try {
                            return [value[index]][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'a:transition': 'fade', 'children': [h('span', null, function () {
                        try {
                            return [item][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'k-text'), h('i', { 'ev-click': function () {
                            try {
                                return [self._delete.bind(self, value[index])][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this) }, null, 'k-icon ion-ios-close-empty')], '_context': this });
            }, this), function () {
                try {
                    return [filterable][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h(_input2.default, { 'value': function () {
                    try {
                        return [keywords][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'ev-input': function () {
                    try {
                        return [self._onSearch][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'ev-blur': function () {
                    try {
                        return [self._onBlur][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'ev-focus': function () {
                    try {
                        return [self._onFocus][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'disabled': function () {
                    try {
                        return [disabled][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'placeholder': function () {
                    try {
                        return [!hasValue ? placeholder : ''][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'autoWidth': function () {
                    try {
                        return [true][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'size': function () {
                    try {
                        return [size][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), 'children': null, '_context': this }, null, null, null, function (i) {
                widgets['input'] = i;
            }) : undefined], '_context': this }), h('span', null, [function () {
            try {
                return [clearable][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h('i', { 'ev-click': function () {
                try {
                    return [self._onClear][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, null, _className(function () {
            try {
                return [{ "k-clear ion-ios-close": true, "k-show": hasValue }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this))) : undefined, h('i', null, null, 'k-arrow ion-arrow-down-b')], 'k-suffix')], 'k-wrapper'), function () {
            try {
                return [Menu][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)], '_context': this }), _className(function () {
        try {
            return [_extends({}, classNameObj, { 'k-active': hasValue })][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _input = __webpack_require__("./components/input/index.js");

var _input2 = _interopRequireDefault(_input);

var _dropdown = __webpack_require__("./components/dropdown/index.js");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _utils = __webpack_require__("./components/utils.js");

var _option = __webpack_require__("./components/select/option.js");

var _option2 = _interopRequireDefault(_option);

var _group = __webpack_require__("./components/select/group.js");

var _group2 = _interopRequireDefault(_group);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/select/option.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _dropdown = __webpack_require__("./components/dropdown/index.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Option = function (_DropdownItem) {
  _inherits(Option, _DropdownItem);

  function Option() {
    _classCallCheck(this, Option);

    return _possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).apply(this, arguments));
  }

  return Option;
}(_dropdown.DropdownItem);

exports.default = Option;
module.exports = exports['default'];

/***/ }),

/***/ "./components/slider/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Slider = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp; /**
                    * Created by sylvia on 2017/10/18.
                    */


var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/slider/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/slider/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Slider = (_temp = _class = function (_Intact) {
    _inherits(Slider, _Intact);

    function Slider() {
        _classCallCheck(this, Slider);

        return _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).apply(this, arguments));
    }

    _createClass(Slider, [{
        key: 'defaults',
        value: function defaults() {
            return {
                max: 100,
                min: 0,
                value: 0,
                isRange: false,
                unit: '',
                isShowEnd: true,
                isShowInput: true,
                step: 1,

                _sliderValue: 0,
                _inputValue: 0,
                _isDragging: false,
                _isFirst: false,
                _isSecond: false
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            this._setFixedValue(this.get('value'));

            this.on("$change:_inputValue", function (c, val) {
                if (!_this2.get('_isDragging')) {
                    _this2._setFixedValue(val);
                }
            });
        }
    }, {
        key: '_beforeUpdate',
        value: function _beforeUpdate(lastVNode, nextVNode) {
            if (lastVNode && nextVNode) {
                this._setFixedValue(this.get('value'));
            }
        }
    }, {
        key: '_setFixedValue',
        value: function _setFixedValue(value) {
            var fixedValue = this._getFixedValue(value);
            this.set({
                value: fixedValue,
                _inputValue: fixedValue,
                _sliderValue: fixedValue
            });
        }
    }, {
        key: '_getFixedValue',
        value: function _getFixedValue(value) {
            var _get = this.get(),
                step = _get.step,
                max = _get.max,
                min = _get.min,
                isRange = _get.isRange;

            function fix(v) {
                if (Number.isNaN(Number(v))) {
                    return min;
                } else if (v < min) {
                    return min;
                } else if (v > max) {
                    return max;
                } else {
                    // for the accuracy
                    return Number((Math.round(v / step) * step).toFixed(10));
                }
            }

            var fixedValue = void 0;
            if (isRange) {
                if (!Array.isArray(value)) {
                    fixedValue = [min, min];
                } else {
                    fixedValue = [fix(value[0]), fix(value[1])];
                }
            } else {
                fixedValue = fix(value);
            }

            return fixedValue;
        }
    }, {
        key: '_clickWrapper',
        value: function _clickWrapper(e) {
            if (this.get('disabled') || this.get('_isDragging')) return;

            var currentPosition = e.clientX;
            var newValue = this._getSlidingValue(currentPosition);
            if (this.get('isRange')) {
                var leftBtnPosition = this.$sliderFirstBtn.getBoundingClientRect().left,
                    rightBtnPosition = this.$sliderSecondBtn.getBoundingClientRect().left,
                    valueArr = this.get('value').slice();
                if (Math.abs(leftBtnPosition - currentPosition) <= Math.abs(rightBtnPosition - currentPosition)) {
                    valueArr[0] = newValue;
                } else {
                    valueArr[1] = newValue;
                }
                newValue = valueArr;
            }

            this._setFixedValue(newValue);
        }
    }, {
        key: '_getSlidingValue',
        value: function _getSlidingValue(pos) {
            var rect = this.$slider.getBoundingClientRect();
            var percent = (pos - rect.left) / rect.width;

            var _get2 = this.get(),
                max = _get2.max,
                min = _get2.min;

            var sliderWidth = max - min;

            if (percent <= 0) {
                return min;
            } else if (percent >= 1) {
                return max;
            } else {
                return min + sliderWidth * percent;
            }
        }
    }, {
        key: '_onDrag',
        value: function _onDrag(indexFlag, e) {
            if (this.get('disabled')) return;

            if (indexFlag) {
                var value = this.get('value');
                this._min = value[0];
                this._max = value[1];
                if (indexFlag === '_isFirst') {
                    this.set({
                        _isDragging: true,
                        _isFirst: true,
                        _isSecond: false
                    });
                } else {
                    this.set({
                        _isDragging: true,
                        _isFirst: false,
                        _isSecond: true
                    });
                }
            } else {
                this.set('_isDragging', true);
            }

            this.__onRangeSliding = this._onRangeSliding.bind(this, indexFlag);
            this.__onRangeSlideEnd = this._onRangeSlideEnd.bind(this, indexFlag);
            window.addEventListener('mousemove', this.__onRangeSliding);
            window.addEventListener('mouseup', this.__onRangeSlideEnd);
        }
    }, {
        key: '_onRangeSliding',
        value: function _onRangeSliding(indexFlag, e) {
            if (this.get('disabled')) return;

            var tempValue = this._getSlidingValue(e.clientX, this.get('_isDragging'));
            var fixedValue = void 0;
            if (indexFlag) {
                if (indexFlag === '_isFirst') {
                    if (this.get('_isSecond')) return;
                    tempValue = [Math.min(tempValue, this._max), Math.max(tempValue, this._max)];
                } else {
                    if (this.get('_isFirst')) return;
                    tempValue = [Math.min(tempValue, this._min), Math.max(tempValue, this._min)];
                }
            }

            fixedValue = this._getFixedValue(tempValue);

            this.set({
                value: fixedValue,
                _inputValue: fixedValue,
                _sliderValue: tempValue
            });
        }
    }, {
        key: '_onRangeSlideEnd',
        value: function _onRangeSlideEnd(indexFlag, e) {
            if (this.get('disabled')) return;

            if (this.get('_isDragging')) {
                this.set('_isDragging', false, { silent: true });
                var newValue = this._getSlidingValue(e.clientX);
                if (indexFlag) {
                    if (indexFlag === '_isFirst') {
                        if (this.get('_isSecond')) return;
                        this.set('_isFirst', false, { async: true });
                        newValue = [Math.min(newValue, this._max), Math.max(newValue, this._max)];
                    } else {
                        if (this.get('_isFirst')) return;
                        this.set('_isSecond', false, { async: true });
                        newValue = [Math.min(newValue, this._min), Math.max(newValue, this._min)];
                    }
                }

                this._setFixedValue(newValue);

                this.trigger('stop', this.get('value'));

                window.removeEventListener('mousemove', this.__onRangeSliding);
                window.removeEventListener('mouseup', this.__onRangeSlideEnd);
            }
        }
    }, {
        key: '_stopPropagation',
        value: function _stopPropagation(e) {
            e.stopPropagation();
        }
    }, {
        key: '_destory',
        value: function _destory() {
            this._onRangeSlideEnd();
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Slider;
}(_intact2.default), _class.propTypes = {
    max: Number,
    min: Number,
    value: Number,
    isRange: Boolean,
    unit: String,
    isShowEnd: Boolean,
    isShowInput: Boolean,
    step: Number
}, _temp);
exports.default = Slider;
exports.Slider = Slider;

/***/ }),

/***/ "./components/slider/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/slider/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/slider/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/slider/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/slider/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        value = _self$get.value,
        min = _self$get.min,
        max = _self$get.max,
        className = _self$get.className,
        disabled = _self$get.disabled,
        isRange = _self$get.isRange,
        isInnerText = _self$get.isInnerText,
        isShowInput = _self$get.isShowInput,
        isShowEnd = _self$get.isShowEnd,
        unit = _self$get.unit,
        step = _self$get.step,
        _isDragging = _self$get._isDragging,
        _isFirst = _self$get._isFirst,
        _inputValue = _self$get._inputValue,
        _isSecond = _self$get._isSecond,
        _sliderValue = _self$get._sliderValue,
        style = _self$get.style;

    var classNameObj = (_classNameObj = {
        'k-slider': true,
        'k-disabled': disabled
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-dragging', _isDragging), _classNameObj);

    var sliderWidth = max - min;

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('div', { 'ev-click': function () {
            try {
                return [self._clickWrapper][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('div', { 'style': function () {
            try {
                return [isRange ? {
                    width: Math.abs(_sliderValue[1] - _sliderValue[0]) / sliderWidth * 100 + '%',
                    left: (Math.min(_sliderValue[0], _sliderValue[1]) - min) / sliderWidth * 100 + '%'
                } : {
                    width: (_sliderValue - min) / sliderWidth * 100 + '%'
                }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, null, 'k-bar'), h('div', { 'style': function () {
            try {
                return [{
                    left: isRange ? (_sliderValue[0] - min) / sliderWidth * 100 + '%' : (_sliderValue - min) / sliderWidth * 100 + '%'
                }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-mousedown': function () {
            try {
                return [isRange ? self._onDrag.bind(self, '_isFirst') : self._onDrag.bind(self, undefined)][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._stopPropagation][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [isInnerText][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [isRange ? value : value[0]][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)) : undefined, _className(function () {
        try {
            return [{
                "k-handle": true,
                "k-active": _isFirst && _sliderValue[1] === self._max || _isSecond && value[0] !== self._min
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), null, function () {
        try {
            return [function (dom) {
                return self.$sliderFirstBtn = dom;
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), function () {
        try {
            return [isRange][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', { 'ev-mousedown': function () {
            try {
                return [self._onDrag.bind(self, "_isSecond")][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'style': function () {
            try {
                return [{
                    left: (_sliderValue[1] - min) / sliderWidth * 100 + '%'
                }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [isInnerText][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [value[1]][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)) : undefined, _className(function () {
        try {
            return [{
                "k-handle": true,
                "k-active": _isSecond && _sliderValue[0] === self._min || _isFirst && _sliderValue[1] !== self._max
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), null, function () {
        try {
            return [function (dom) {
                return self.$sliderSecondBtn = dom;
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)) : undefined, function () {
        try {
            return [isShowEnd][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, [h('span', null, [function () {
        try {
            return [min + unit][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), ' ']), h('span', null, function () {
        try {
            return [max + unit][0];
        } catch (e) {
            _e(e);
        }
    }.call(this))], 'k-box') : undefined], 'k-wrapper', null, function () {
        try {
            return [function (dom) {
                return self.$slider = dom;
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), function () {
        try {
            return [isShowInput && !isRange][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h(_spinner2.default, { 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'max': function () {
            try {
                return [max][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'min': function () {
            try {
                return [min][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'step': function () {
            try {
                return [step][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this, value: _getModel(self, '_inputValue'), 'ev-$change:value': function ev$changeValue(__c, __n) {
            _setModel(self, '_inputValue', __n);
        } }) : undefined], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _spinner = __webpack_require__("./components/spinner/index.js");

var _spinner2 = _interopRequireDefault(_spinner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/spinner/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Spinner = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/spinner/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/spinner/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var numberReg = /^(-|\+)?\d+(\.(\d+)?)?$/;

var Spinner = (_temp = _class = function (_Intact) {
    _inherits(Spinner, _Intact);

    function Spinner() {
        _classCallCheck(this, Spinner);

        return _possibleConstructorReturn(this, (Spinner.__proto__ || Object.getPrototypeOf(Spinner)).apply(this, arguments));
    }

    _createClass(Spinner, [{
        key: 'defaults',
        value: function defaults() {
            return {
                disabled: false,
                value: 0,
                max: Number.POSITIVE_INFINITY,
                min: Number.NEGATIVE_INFINITY,
                step: 1,
                size: 'default'
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var value = this.get('value');
            if (value == null) {
                var min = this.get('min');
                if (min === Number.NEGATIVE_INFINITY) {
                    value = 0;
                } else {
                    value = min;
                }
                this.set('value', value);
            }
            this.initValue = value;
        }
    }, {
        key: '_increase',
        value: function _increase(e) {
            if (this._disableIncrease()) return;

            var _get = this.get(),
                value = _get.value,
                step = _get.step;

            this.set('value', Number((value + step).toFixed(10)));
        }
    }, {
        key: '_decrease',
        value: function _decrease(e) {
            if (this._disableDecrease()) return;

            var _get2 = this.get(),
                value = _get2.value,
                step = _get2.step;

            this.set('value', Number((value - step).toFixed(10)));
        }
    }, {
        key: '_disableDecrease',
        value: function _disableDecrease() {
            var _get3 = this.get(),
                value = _get3.value,
                min = _get3.min,
                step = _get3.step,
                disabled = _get3.disabled;

            return disabled || value <= min || value - min < step;
        }
    }, {
        key: '_disableIncrease',
        value: function _disableIncrease() {
            var _get4 = this.get(),
                value = _get4.value,
                max = _get4.max,
                step = _get4.step,
                disabled = _get4.disabled;

            return disabled || value >= max || max - value < step;
        }
    }, {
        key: '_changeValue',
        value: function _changeValue(e) {
            var _get5 = this.get(),
                disabled = _get5.disabled,
                max = _get5.max,
                min = _get5.min;

            var val = e.target.value.trim();

            if (!numberReg.test(val) || disabled) {
                this.set('value', this.initValue);
            } else {
                val = Number(val);
                if (val >= max) {
                    val = max;
                } else if (val < min) {
                    val = min;
                }
                this.set('value', val);
            }
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Spinner;
}(_intact2.default), _class.propTypes = {
    disabled: Boolean,
    max: Number,
    min: Number,
    step: Number
}, _temp);
exports.default = Spinner;
exports.Spinner = Spinner;

/***/ }),

/***/ "./components/spinner/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/spinner/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/spinner/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/spinner/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/spinner/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        disabled = _self$get.disabled,
        max = _self$get.max,
        min = _self$get.min,
        step = _self$get.step,
        children = _self$get.children,
        value = _self$get.value,
        style = _self$get.style,
        size = _self$get.size;

    var classNameObj = (_classNameObj = {
        'k-spinner': true,
        'k-disabled': disabled
    }, _defineProperty(_classNameObj, 'k-' + size, size !== 'default'), _defineProperty(_classNameObj, className, className), _classNameObj);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h(_button.Button, { 'icon': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._decrease][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [self._disableDecrease()][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'className': 'k-left', 'size': function () {
            try {
                return [size][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': '-', '_context': this }), h(_input.Input, { 'disabled': function () {
            try {
                return [disabled][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-change': function () {
            try {
                return [self._changeValue][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'size': function () {
            try {
                return [size][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this, value: _getModel(self, 'value'), 'ev-$change:value': function ev$changeValue(__c, __n) {
            _setModel(self, 'value', __n);
        } }), h(_button.Button, { 'icon': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._increase][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [self._disableIncrease()][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'className': 'k-right', 'size': function () {
            try {
                return [size][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': '+', '_context': this })], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _button = __webpack_require__("./components/button/index.js");

var _input = __webpack_require__("./components/input/index.js");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/steps/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Step = exports.Steps = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/steps/index.vdt");

var _index2 = _interopRequireDefault(_index);

var _step = __webpack_require__("./components/steps/step.js");

var _step2 = _interopRequireDefault(_step);

__webpack_require__("./components/steps/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Steps = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Steps, _Intact);

    function Steps() {
        _classCallCheck(this, Steps);

        return _possibleConstructorReturn(this, (Steps.__proto__ || Object.getPrototypeOf(Steps)).apply(this, arguments));
    }

    _createClass(Steps, [{
        key: 'defaults',
        value: function defaults() {
            return {
                value: undefined,
                status: 'normal'
            };
        }
    }]);

    return Steps;
}(_intact2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Steps;
exports.Steps = Steps;
exports.Step = _step2.default;

/***/ }),

/***/ "./components/steps/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/steps/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/steps/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/steps/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/steps/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        value = _self$get.value,
        style = _self$get.style,
        status = _self$get.status;

    var classNameObj = {
        'k-steps c-clearfix': true
    };

    var stepIndex = 0;
    var steps = (Array.isArray(children) ? children : [children]).filter(function (vNode) {
        if (vNode && vNode.tag === _step2.default) {
            vNode.props = _extends({}, vNode.props, { index: stepIndex });
            if (value == stepIndex) {
                vNode.props.selected = true;
                if (status === 'error') {
                    vNode.props.error = true;
                }
            } else if (value > stepIndex) {
                vNode.props.done = true;
            }
            stepIndex++;
            return true;
        }
        return false;
    });

    // add width
    steps = steps.map(function (vNode) {
        vNode.props.width = 100 / stepIndex + '%';
        return vNode;
    });

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, function () {
        try {
            return [steps][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _step = __webpack_require__("./components/steps/step.js");

var _step2 = _interopRequireDefault(_step);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/steps/step.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _step = __webpack_require__("./components/steps/step.vdt");

var _step2 = _interopRequireDefault(_step);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Step = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Step, _Intact);

    function Step() {
        _classCallCheck(this, Step);

        return _possibleConstructorReturn(this, (Step.__proto__ || Object.getPrototypeOf(Step)).apply(this, arguments));
    }

    _createClass(Step, [{
        key: 'defaults',
        value: function defaults() {
            return {
                title: undefined,
                done: false,
                selected: false,
                error: false,
                index: undefined
            };
        }
    }]);

    return Step;
}(_intact2.default), _class2.template = _step2.default, _class2.propTypes = {
    done: Boolean,
    selected: Boolean,
    error: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Step;
module.exports = exports['default'];

/***/ }),

/***/ "./components/steps/step.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        selected = _self$get.selected,
        done = _self$get.done,
        title = _self$get.title,
        index = _self$get.index,
        width = _self$get.width,
        error = _self$get.error;

    var classNameObj = {
        'k-step': true,
        'k-active': selected,
        'k-done': done,
        'k-error': error
    };

    return h('div', { 'style': function () {
            try {
                return [{ width: width }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h('div', null, null, 'k-tail'), h('div', null, h('div', null, function () {
        try {
            return [done][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('i', null, null, 'ion-ios-checkmark-empty k-icon') : function () {
        try {
            return [error][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('i', null, null, 'ion-ios-close-empty k-icon') : h('span', null, function () {
        try {
            return [index][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)), 'k-inner'), 'k-head'), h('div', null, [h('div', null, function () {
        try {
            return [title][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-title'), h('div', null, function () {
        try {
            return [children][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'k-content')], 'k-main')], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/table/column.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _column = __webpack_require__("./components/table/column.vdt");

var _column2 = _interopRequireDefault(_column);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableColumn = function (_Intact) {
    _inherits(TableColumn, _Intact);

    function TableColumn() {
        _classCallCheck(this, TableColumn);

        return _possibleConstructorReturn(this, (TableColumn.__proto__ || Object.getPrototypeOf(TableColumn)).apply(this, arguments));
    }

    _createClass(TableColumn, [{
        key: 'defaults',
        value: function defaults() {
            return {
                title: '',
                template: function template(data, index) {},

                key: '',
                sortable: false,
                width: undefined,
                groups: undefined,

                // passed by parent
                $parent: undefined
            };
        }
    }, {
        key: 'onClick',
        value: function onClick(e) {
            this.trigger('click', e);
        }
    }, {
        key: 'onDragStart',
        value: function onDragStart(e) {
            this.trigger('dragStart', e);
        }
    }, {
        key: 'template',
        get: function get() {
            return _column2.default;
        }
    }]);

    return TableColumn;
}(_intact2.default);

exports.default = TableColumn;
module.exports = exports['default'];

/***/ }),

/***/ "./components/table/column.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        width = _self$get.width,
        title = _self$get.title,
        key = _self$get.key,
        sortable = _self$get.sortable,
        groups = _self$get.groups,
        $parent = _self$get.$parent;

    var _$parent$get = $parent.get(),
        sort = _$parent$get.sort,
        resizable = _$parent$get.resizable;

    return h('th', { 'width': function () {
            try {
                return [width][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'title': function () {
            try {
                return [title][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self.onClick][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [function () {
        try {
            return [resizable][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', { 'ev-mousedown': function () {
            try {
                return [self.onDragStart][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, null, 'k-resize') : undefined, h('div', null, [function () {
        try {
            return [!groups][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', null, function () {
        try {
            return [title][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), 'c-ellipsis') : undefined, '\n        ', function () {
        var _this = this;

        try {
            return [function () {
                if (sortable) {
                    var type = key === sort.key ? sort.type : '';
                    return h('div', null, h('i', null, null, _className(function () {
                        try {
                            var _ref;

                            return [(_ref = {
                                'k-icon': true
                            }, _defineProperty(_ref, 'icon-' + type, type), _defineProperty(_ref, 'icon-sortable', !type), _ref)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this))), _className(function () {
                        try {
                            return [_defineProperty({ 'k-sort': true }, 'k-' + type, type)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this)));
                }
            }()][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n    '], 'k-th')], _className(function () {
        try {
            return [{ 'k-sortable': sortable }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/table/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.TableColumn = exports.Table = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/table/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/table/index.styl");

var _column = __webpack_require__("./components/table/column.js");

var _column2 = _interopRequireDefault(_column);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var scrollBarWidth = undefined;

var MIN_WIDTH = 40;
var slice = Array.prototype.slice;

var Table = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Table, _Intact);

    function Table() {
        _classCallCheck(this, Table);

        return _possibleConstructorReturn(this, (Table.__proto__ || Object.getPrototypeOf(Table)).apply(this, arguments));
    }

    _createClass(Table, [{
        key: 'defaults',
        value: function defaults() {
            return {
                data: [],
                scheme: {},
                checkType: 'checkbox', // radio | none 
                rowKey: function rowKey(value, index) {
                    return index;
                },
                rowClassName: function rowClassName(value, index) {},
                // add className for tr
                checkedKeys: [], // for checkbox
                checkedKey: undefined, // for radio
                rowCheckable: true, // click row to check
                rowExpandable: true, // click row to expand
                noDataTemplate: '/(ㄒoㄒ)/~~ 没有找到亲要的数据哦~',
                disableRow: function disableRow(data, index) {
                    return false;
                },

                sort: {},
                groups: {},
                resizable: false,
                expand: undefined, // expand template callback
                expandedKeys: [],
                type: 'default', // default border
                fixHeader: false,

                _padding: 0,
                _disabledAmount: 0
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this2 = this;

            // keep the event consistent
            this.on('$change:checkedKeys', function (c, newValue, oldValue) {
                _this2.trigger('$change:checked', c, newValue, oldValue);
            });
            this.on('$change:checkedKey', function (c, newValue, oldValue) {
                _this2.trigger('$change:checked', c, [newValue], [oldValue]);
            });
            // calculate padding of header when some props have changed
            ['data', 'fixHeader'].forEach(function (item) {
                _this2.on('$changed:' + item, _this2._calcHeaderPadding);
            });
            // update disabled amount when some props have changed
            ['data', 'disableRow'].forEach(function (item) {
                _this2.on('$change:' + item, _this2._updateDisabledAmount);
            });
            this._updateDisabledAmount();

            this._move = this._move.bind(this);
            this._dragEnd = this._dragEnd.bind(this);
        }
    }, {
        key: '_mount',
        value: function _mount() {
            if (scrollBarWidth === undefined) {
                scrollBarWidth = getScrollbarWidth();
            }
            this._calcHeaderPadding();
        }
    }, {
        key: 'isCheckAll',
        value: function isCheckAll() {
            var checkedKeys = this.get('checkedKeys');
            var dataLength = this.get('data').length;
            var disabledAmount = this.get("_disabledAmount");
            var amount = dataLength - disabledAmount;
            return amount && checkedKeys.length === amount;
        }
    }, {
        key: 'isChecked',
        value: function isChecked(key) {
            var _get = this.get(),
                checkType = _get.checkType,
                checkedKey = _get.checkedKey,
                checkedKeys = _get.checkedKeys;

            if (checkType === 'checkbox') {
                return ~checkedKeys.indexOf(key);
            } else if (checkType === 'radio') {
                return checkedKey === key;
            }
            return false;
        }
    }, {
        key: 'checkAll',
        value: function checkAll() {
            var _this3 = this;

            var rowKey = this.get('rowKey');
            var disableRow = this.get('disableRow');
            var checkedKeys = [];
            this.get('data').forEach(function (value, index) {
                if (!disableRow.call(_this3, value, index)) {
                    checkedKeys.push(rowKey.call(_this3, value, index));
                }
            });
            this.set('checkedKeys', checkedKeys);
        }
    }, {
        key: 'uncheckAll',
        value: function uncheckAll() {
            this.set('checkedKeys', []);
        }
    }, {
        key: 'checkRow',
        value: function checkRow(key) {
            this._checkUncheckRow(key, true, false);
        }
    }, {
        key: 'uncheckRow',
        value: function uncheckRow(key) {
            this._checkUncheckRow(key, false, false);
        }
    }, {
        key: 'shrinkRow',
        value: function shrinkRow(key) {
            this._expandShrinkRow(key, false, false);
        }
    }, {
        key: 'expandRow',
        value: function expandRow(key) {
            this._expandShrinkRow(key, true, false);
        }

        /**
         * @brief get the checked data
         * @return {Array}
         */

    }, {
        key: 'getCheckedData',
        value: function getCheckedData() {
            var _this4 = this;

            var rowKey = this.get('rowKey');
            var checkType = this.get('checkType');
            if (checkType === 'checkbox') {
                var checkedKeys = this.get('checkedKeys');
                var checkedKeysMap = {};
                checkedKeys.forEach(function (item) {
                    checkedKeysMap[item] = true;
                });
                return this.get('data').filter(function (value, index) {
                    var key = rowKey.call(_this4, value, index);
                    return checkedKeysMap[key];
                });
            } else if (checkType === 'radio') {
                var checkedKey = this.get('checkedKey');
                return this.get('data').filter(function (value, index) {
                    return rowKey.call(_this4, value, index) === checkedKey;
                });
            } else {
                return [];
            }
        }
    }, {
        key: '_calcHeaderPadding',
        value: function _calcHeaderPadding() {
            if (this.get('fixHeader')) {
                var tableHeight = this.table.offsetHeight;
                var containerHeight = this.scroll.offsetHeight;
                var headerHeight = this.header.offsetHeight;
                this.set('_padding', tableHeight - headerHeight > containerHeight ? scrollBarWidth : 0);
            }
        }
    }, {
        key: '_updateDisabledAmount',
        value: function _updateDisabledAmount() {
            var _this5 = this;

            var disabledAmount = 0;
            var disableRow = this.get('disableRow');
            this.get('data').forEach(function (item, index) {
                if (disableRow.call(_this5, item, index)) {
                    disabledAmount++;
                }
            });
            this.set('_disabledAmount', disabledAmount);
        }
    }, {
        key: '_toggleCheckAll',
        value: function _toggleCheckAll(c, checked) {
            if (checked) {
                this.checkAll();
            } else {
                this.uncheckAll();
            }
        }
    }, {
        key: '_clickRow',
        value: function _clickRow(value, index, key, e) {
            // if is from checkbox or radio then do nothing
            if (e.target.tagName.toLowerCase() === 'input') return;
            if (this.get('disableRow').call(this, value, index)) return;

            if (this.get('rowCheckable')) {
                this._checkUncheckRow(key);
            }

            if (this.get('rowExpandable')) {
                this._expandShrinkRow(key);
            }
        }
    }, {
        key: '_checkUncheckRow',
        value: function _checkUncheckRow(key) {
            var isCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var isToggle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            var checkType = this.get('checkType');
            if (checkType === 'checkbox') {
                var checkedKeys = this.get('checkedKeys').slice(0);
                var i = checkedKeys.indexOf(key);
                if ((!isCheck || isToggle) && i > -1) {
                    checkedKeys.splice(i, 1);
                    this.set('checkedKeys', checkedKeys);
                } else if (isCheck || isToggle) {
                    checkedKeys.push(key);
                    this.set('checkedKeys', checkedKeys);
                }
            } else if (checkType === 'radio') {
                this.set('checkedKey', key);
            }
        }
    }, {
        key: '_expandShrinkRow',
        value: function _expandShrinkRow(key) {
            var isExpand = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var isToggle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

            if (typeof this.get('expand') !== 'function') return;

            var expandedKeys = this.get('expandedKeys').slice(0);
            var i = expandedKeys.indexOf(key);
            if ((!isExpand || isToggle) && i > -1) {
                expandedKeys.splice(i, 1);
                this.set('expandedKeys', expandedKeys);
            } else if (isExpand || isToggle) {
                expandedKeys.push(key);
                this.set('expandedKeys', expandedKeys);
            }
        }
    }, {
        key: '_sort',
        value: function _sort(key, value) {
            var sort = Object.assign({}, this.get('sort'));
            sort.key = key;
            sort.type = sort.type === 'desc' ? 'asc' : 'desc';
            this.set('sort', sort);
        }
    }, {
        key: '_dragStart',
        value: function _dragStart(e) {
            // left key
            if (e.which !== 1) return;

            this._resizing = true;
            this._containerWidth = this.element.offsetWidth;
            this._x = e.clientX;

            var currentTh = e.target.parentNode;
            var prevTh = currentTh.previousElementSibling;

            this._currentThs = [currentTh];
            this._prevThs = [prevTh];
            this._tables = [this.table];

            if (this.get('fixHeader')) {
                var ths = this.table.children[0].getElementsByTagName('th');
                var fixThs = currentTh.parentNode.children;
                var index = slice.call(fixThs).indexOf(currentTh);
                this._currentThs.push(ths[index]);
                this._prevThs.push(ths[index - 1]);
                // this._tables.push(this.header.children[0]);
                // if fixHeader we should change the width of header and scroll
                this._tables = [this.header, this.scroll];
            }

            document.addEventListener('mousemove', this._move);
            document.addEventListener('mouseup', this._dragEnd);
        }
    }, {
        key: '_move',
        value: function _move(e) {
            if (this._resizing) {
                var delX = e.clientX - this._x;
                var prevWidth = this._prevThs[0].offsetWidth + delX;
                var tableWidth = this._tables[0].offsetWidth + delX;

                if (prevWidth < MIN_WIDTH) return;

                this._prevThs.forEach(function (item) {
                    item.style.width = prevWidth + 'px';
                });

                if (this._containerWidth >= tableWidth) {
                    this._tables.forEach(function (item) {
                        item.style.width = '100%';
                    });
                } else {
                    this._tables.forEach(function (item) {
                        item.style.width = tableWidth + 'px';
                    });
                }

                this._x = e.clientX;
            }
        }
    }, {
        key: '_dragEnd',
        value: function _dragEnd(e) {
            if (this._resizing) {
                this._resizing = false;
                document.removeEventListener('mousemove', this._move);
                document.removeEventListener('mouseup', this._dragEnd);
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            this._dragEnd();
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Table;
}(_intact2.default), _class2.propTypes = {
    rowCheckable: Boolean,
    rowExpandable: Boolean,
    resizable: Boolean,
    fixHeader: Boolean
}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Table;
exports.Table = Table;
exports.TableColumn = _column2.default;

// reference: http://stackoverflow.com/questions/13382516/getting-scroll-bar-width-using-javascript

function getScrollbarWidth() {
    var outer = document.createElement("div");
    outer.style.visibility = "hidden";
    outer.style.width = "100px";
    outer.style.msOverflowStyle = "scrollbar"; // needed for WinJS apps

    document.body.appendChild(outer);

    var widthNoScroll = outer.offsetWidth;
    // force scrollbars
    outer.style.overflow = "scroll";

    // add innerdiv
    var inner = document.createElement("div");
    inner.style.width = "100%";
    outer.appendChild(inner);

    var widthWithScroll = inner.offsetWidth;

    // remove divs
    outer.parentNode.removeChild(outer);

    return widthNoScroll - widthWithScroll;
}

/***/ }),

/***/ "./components/table/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _this = this,
        _classNameObj;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        checkType = _self$get.checkType,
        scheme = _self$get.scheme,
        checkedKeys = _self$get.checkedKeys,
        data = _self$get.data,
        rowKey = _self$get.rowKey,
        className = _self$get.className,
        fixHeader = _self$get.fixHeader,
        noDataTemplate = _self$get.noDataTemplate,
        disableRow = _self$get.disableRow,
        groups = _self$get.groups,
        resizable = _self$get.resizable,
        expand = _self$get.expand,
        expandedKeys = _self$get.expandedKeys,
        type = _self$get.type,
        style = _self$get.style,
        rowClassName = _self$get.rowClassName,
        children = _self$get.children,
        sort = _self$get.sort;

    var colSpan = checkType === 'checkbox' || checkType === 'radio' ? 1 : 0;
    var expandable = typeof expand === 'function';
    var _scheme = {};

    var theadCreator = function theadCreator() {
        return h('thead', null, h('tr', null, [function () {
            try {
                return [checkType === 'checkbox'][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this) ? h('th', null, h(_checkbox2.default, { 'value': function () {
                try {
                    return [self.isCheckAll()][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'ev-$change:value': function () {
                try {
                    return [self._toggleCheckAll][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'children': null, '_context': _this }), 'k-th-check') : function () {
            try {
                return [checkType === 'radio'][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this) ? h('th', null, null, 'k-th-check') : undefined, '\n        ', function () {
            var _this2 = this;

            try {
                return [__u.map(scheme, function (item, key) {
                    colSpan++;

                    if (!__u.isObject(item)) {
                        item = { title: item };
                    }

                    return h(_column2.default, _extends({}, function () {
                        try {
                            return [item][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this2), { 'key': function () {
                            try {
                                return [key][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this2), '$parent': function () {
                            try {
                                return [self][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this2), 'ev-click': function () {
                            try {
                                return [item.sortable ? self._sort.bind(self, key, item) : undefined][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this2), 'ev-dragStart': function () {
                            try {
                                return [self._dragStart][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this2), 'children': null, '_context': _this2 }));
                })][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this), '\n        ', function () {
            try {
                return [// for using TableColumn as children
                __u.map(children ? Array.isArray(children) ? children : [children] : children, function (vNode) {
                    if (vNode.tag === _column2.default) {
                        colSpan++;
                        var props = _extends({}, vNode.props, { $parent: self });
                        vNode.props = props;
                        if (props.key == null) {
                            _e('key for TableColumn must be specified.');
                        } else if (/^\d+$/.test(props.key)) {
                            // avoid digital key
                            _e('don\'t use digits as key.');
                        }
                        _scheme[props.key] = {
                            title: props.title,
                            template: props.template || props.default
                        };
                        return vNode;
                    }
                })][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this), '\n    ']));
    };

    var thead = theadCreator();

    var tbody = h('tbody', null, ['\n    ', function () {
        var _this3 = this;

        try {
            return [data && data.length ? __u.map(data, function (value, index) {
                var key = rowKey.call(self, value, index);
                var disabled = disableRow.call(self, value, index);
                var className = rowClassName.call(self, value, index);
                var tr = h(_row2.default, { 'key': function () {
                        try {
                            return [key][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3), 'ev-click': function () {
                        try {
                            return [self._clickRow.bind(self, value, index, key)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3), 'className': _className(function () {
                        try {
                            var _ref;

                            return [(_ref = {
                                'k-disabled': disabled
                            }, _defineProperty(_ref, className, className), _defineProperty(_ref, 'k-checked', self.isChecked(key)), _ref)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3)), 'ev-$destroyed': function () {
                        try {
                            return [self.shrinkRow.bind(self, key)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3), 'children': [function () {
                        try {
                            return [checkType === 'checkbox'][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3) ? h('td', null, h(_checkbox2.default, { 'name': 'k-table-checkbox', 'trueValue': function () {
                            try {
                                return [key][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this3), 'disabled': function () {
                            try {
                                return [disabled][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this3), 'children': null, '_context': _this3, value: _getModel(self, 'checkedKeys'), 'ev-$change:value': function ev$changeValue(__c, __n) {
                            _setModel(self, 'checkedKeys', __n);
                        } })) : function () {
                        try {
                            return [checkType === 'radio'][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3) ? h('td', null, h(_radio2.default, { 'name': 'k-table-radio', 'trueValue': function () {
                            try {
                                return [key][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this3), 'disabled': function () {
                            try {
                                return [disabled][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this3), 'children': null, '_context': _this3, value: _getModel(self, 'checkedKey'), 'ev-$change:value': function ev$changeValue(__c, __n) {
                            _setModel(self, 'checkedKey', __n);
                        } })) : undefined, '\n                ', function () {
                        var _this4 = this;

                        try {
                            return [__u.map(__u.extend({}, scheme, _scheme), function (item, key) {
                                var td = void 0;
                                if (__u.isObject(item) && item.template) {
                                    if (typeof item.template === 'function') {
                                        td = item.template.call(self, value, index);
                                        // for Intact-Vue
                                        if (_intact.normalize) {
                                            td = (0, _intact.normalize)(td);
                                        }
                                    } else {
                                        td = item.template;
                                    }
                                } else if (value[key] !== undefined) {
                                    td = value[key];
                                } else {
                                    var _obj = value,
                                        keys = key.split('.'),
                                        i = 0;
                                    while (_obj != null && i < keys.length) {
                                        _obj = _obj[keys[i++]];
                                    }
                                    td = i && i === keys.length ? _obj : null;
                                }
                                return h('td', { 'title': function () {
                                        try {
                                            return [typeof td === 'string' || typeof td === 'number' ? td : undefined][0];
                                        } catch (e) {
                                            _e(e);
                                        }
                                    }.call(_this4) }, function () {
                                    try {
                                        return [typeof td === 'boolean' ? String(td) : td][0];
                                    } catch (e) {
                                        _e(e);
                                    }
                                }.call(_this4));
                            })][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3), '\n            '], '_context': _this3 });

                if (expandable && expandedKeys.indexOf(key) > -1) {
                    return [tr, h('tr', null, h('td', { 'colspan': function () {
                            try {
                                return [colSpan][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(_this3) }, function () {
                        try {
                            return [expand.call(self, value, index)][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3)), 'k-expand', function () {
                        try {
                            return [key + '.expand'][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(_this3))];
                } else {
                    return tr;
                }
            }) : h('tr', null, h('td', { 'colspan': function () {
                    try {
                        return [colSpan][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) }, ['\n                ', function () {
                try {
                    return [noDataTemplate][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), '\n            '], 'k-no-data'), null, 'table_no_data')][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n']);

    var classNameObj = (_classNameObj = {
        'k-table-wrapper': true
    }, _defineProperty(_classNameObj, className, className), _defineProperty(_classNameObj, 'k-' + type, type !== 'default'), _classNameObj);

    var table = h('table', null, ['\n    ', function () {
        try {
            return [thead][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n    ', function () {
        try {
            return [tbody][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n'], 'k-table', null, function () {
        try {
            return [function (dom) {
                return self.table = dom;
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this));

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [function () {
        try {
            return [fixHeader][0];
        } catch (e) {
            _e(e);
        }
    }.call(this) ? h('div', { 'style': function () {
            try {
                return [{ paddingRight: self.get('_padding') + 'px' }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, h('table', null, ['\n            ', function () {
        try {
            return [theadCreator()][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n        '], 'k-table'), 'k-fixed', null, function () {
        try {
            return [function (dom) {
                return self.header = dom;
            }][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)) : undefined, '\n    ', function () {
        try {
            return [fixHeader ? h('div', { 'style': function () {
                    try {
                        return [typeof fixHeader === 'number' || typeof fixHeader === 'string' ? { maxHeight: fixHeader + 'px' } : undefined][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this) }, function () {
                try {
                    return [table][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'k-scroll', null, function () {
                try {
                    return [function (dom) {
                        return self.scroll = dom;
                    }][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this)) : table][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n'], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _checkbox = __webpack_require__("./components/checkbox/index.js");

var _checkbox2 = _interopRequireDefault(_checkbox);

var _radio = __webpack_require__("./components/radio/index.js");

var _radio2 = _interopRequireDefault(_radio);

var _row = __webpack_require__("./components/table/row.js");

var _row2 = _interopRequireDefault(_row);

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _column = __webpack_require__("./components/table/column.js");

var _column2 = _interopRequireDefault(_column);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/table/row.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _row = __webpack_require__("./components/table/row.vdt");

var _row2 = _interopRequireDefault(_row);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// for tr $destroyed event
var TableRow = function (_Intact) {
    _inherits(TableRow, _Intact);

    function TableRow() {
        _classCallCheck(this, TableRow);

        return _possibleConstructorReturn(this, (TableRow.__proto__ || Object.getPrototypeOf(TableRow)).apply(this, arguments));
    }

    _createClass(TableRow, [{
        key: 'template',
        get: function get() {
            return _row2.default;
        }
    }]);

    return TableRow;
}(_intact2.default);

exports.default = TableRow;
module.exports = exports['default'];

/***/ }),

/***/ "./components/table/row.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

  _Vdt || (_Vdt = Vdt);
  obj || (obj = {});
  blocks || (blocks = {});
  var h = _Vdt.miss.h,
      hc = _Vdt.miss.hc,
      hu = _Vdt.miss.hu,
      widgets = this && this.widgets || {},
      _blocks = {},
      __blocks = {},
      __u = _Vdt.utils,
      extend = __u.extend,
      _e = __u.error,
      _className = __u.className,
      __o = __u.Options,
      _getModel = __o.getModel,
      _setModel = __o.setModel,
      _setCheckboxModel = __u.setCheckboxModel,
      _detectCheckboxChecked = __u.detectCheckboxChecked,
      _setSelectModel = __u.setSelectModel,
      self = this.data,
      scope = obj,
      Animate = self && self.Animate,
      parent = ($callee || {})._super;
  return h('tr', _extends({}, function () {
    try {
      return [self.get()][0];
    } catch (e) {
      _e(e);
    }
  }.call(this)), function () {
    try {
      return [self.get('children')][0];
    } catch (e) {
      _e(e);
    }
  }.call(this));
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/tabs/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Tab = exports.Tabs = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _tab = __webpack_require__("./components/tabs/tab.js");

var _tab2 = _interopRequireDefault(_tab);

var _index = __webpack_require__("./components/tabs/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/tabs/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Tabs = (_dec = _intact2.default.template(), (_class = function (_Intact) {
    _inherits(Tabs, _Intact);

    function Tabs() {
        _classCallCheck(this, Tabs);

        return _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).apply(this, arguments));
    }

    _createClass(Tabs, [{
        key: 'defaults',
        value: function defaults() {
            return {
                data: undefined,
                value: undefined
            };
        }
    }, {
        key: '_changeTab',
        value: function _changeTab(item) {
            this.set('value', item.value);
            if (item.to) {
                window.location.href = item.to;
            }
        }
    }, {
        key: 'template',
        get: function get() {
            return _index2.default;
        }
    }]);

    return Tabs;
}(_intact2.default), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Tabs;
exports.Tabs = Tabs;
exports.Tab = _tab2.default;

/***/ }),

/***/ "./components/tabs/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tabs/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tabs/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tabs/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/tabs/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        className = _self$get.className,
        data = _self$get.data,
        value = _self$get.value,
        children = _self$get.children,
        style = _self$get.style;

    var classNameObj = _defineProperty({
        'k-tabs': true
    }, className, className);

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [_Vdt.utils.map(function () {
        try {
            return [data][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), function (item, key) {
        return h('a', { 'ev-click': function () {
                try {
                    return [self._changeTab.bind(self, item)][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, function () {
            try {
                return [item.text][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), _className(function () {
            try {
                return [{ 'k-tab': true, 'k-active': item.value === value }][0];
            } catch (e) {
                _e(e);
            }
        }.call(this)));
    }, this), '\n    ', function () {
        try {
            return [__u.map(children ? Array.isArray(children) ? children : [children] : children, function (vNode) {
                if (vNode.tag === _tab2.default) {
                    vNode.props = _extends({}, vNode.props, { _value: value, _parent: self });
                }
                return vNode;
            })][0];
        } catch (e) {
            _e(e);
        }
    }.call(this), '\n'], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _tab = __webpack_require__("./components/tabs/tab.js");

var _tab2 = _interopRequireDefault(_tab);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/tabs/tab.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _tab = __webpack_require__("./components/tabs/tab.vdt");

var _tab2 = _interopRequireDefault(_tab);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Tab = (_dec = _intact2.default.template(), (_class = function (_Intact) {
    _inherits(Tab, _Intact);

    function Tab() {
        _classCallCheck(this, Tab);

        return _possibleConstructorReturn(this, (Tab.__proto__ || Object.getPrototypeOf(Tab)).apply(this, arguments));
    }

    _createClass(Tab, [{
        key: 'defaults',
        value: function defaults() {
            return {
                value: undefined,
                to: undefined,

                // passed by parent
                _value: undefined,
                _parent: undefined
            };
        }
    }, {
        key: '_isActive',
        value: function _isActive() {
            var value = this.get('value');
            return value !== undefined && value === this.get('_value');
        }
    }, {
        key: '_changeTab',
        value: function _changeTab(e) {
            this.get('_parent')._changeTab(this.get());
        }
    }, {
        key: 'template',
        get: function get() {
            return _tab2.default;
        }
    }]);

    return Tab;
}(_intact2.default), (_applyDecoratedDescriptor(_class.prototype, 'template', [_dec], Object.getOwnPropertyDescriptor(_class.prototype, 'template'), _class.prototype)), _class));
exports.default = Tab;
module.exports = exports['default'];

/***/ }),

/***/ "./components/tabs/tab.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
        value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

        _Vdt || (_Vdt = Vdt);
        obj || (obj = {});
        blocks || (blocks = {});
        var h = _Vdt.miss.h,
            hc = _Vdt.miss.hc,
            hu = _Vdt.miss.hu,
            widgets = this && this.widgets || {},
            _blocks = {},
            __blocks = {},
            __u = _Vdt.utils,
            extend = __u.extend,
            _e = __u.error,
            _className = __u.className,
            __o = __u.Options,
            _getModel = __o.getModel,
            _setModel = __o.setModel,
            _setCheckboxModel = __u.setCheckboxModel,
            _detectCheckboxChecked = __u.detectCheckboxChecked,
            _setSelectModel = __u.setSelectModel,
            self = this.data,
            scope = obj,
            Animate = self && self.Animate,
            parent = ($callee || {})._super;

        var _self$get = self.get(),
            value = _self$get.value,
            children = _self$get.children,
            _value = _self$get._value;

        return h('a', { 'ev-click': function () {
                        try {
                                return [self._changeTab][0];
                        } catch (e) {
                                _e(e);
                        }
                }.call(this) }, function () {
                try {
                        return [self.get('children')][0];
                } catch (e) {
                        _e(e);
                }
        }.call(this), _className(function () {
                try {
                        return [{
                                'k-tab': true,
                                'k-active': value !== undefined && value === _value
                        }][0];
                } catch (e) {
                        _e(e);
                }
        }.call(this)));
};

module.exports = exports['default'];

/***/ }),

/***/ "./components/tooltip/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Tooltip = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _dropdown = __webpack_require__("./components/dropdown/dropdown.js");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _position2 = __webpack_require__("./components/moveWrapper/position.js");

var _position3 = _interopRequireDefault(_position2);

var _index = __webpack_require__("./components/tooltip/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/tooltip/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by sylvia on 2017/10/31.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var Tooltip = function (_Dropdown) {
    _inherits(Tooltip, _Dropdown);

    function Tooltip() {
        _classCallCheck(this, Tooltip);

        return _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).apply(this, arguments));
    }

    return Tooltip;
}(_dropdown2.default);

var TooltipContent = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(TooltipContent, _Intact);

    function TooltipContent() {
        _classCallCheck(this, TooltipContent);

        return _possibleConstructorReturn(this, (TooltipContent.__proto__ || Object.getPrototypeOf(TooltipContent)).apply(this, arguments));
    }

    _createClass(TooltipContent, [{
        key: 'defaults',
        value: function defaults() {
            return {
                show: false,
                trigger: 'hover',
                canHover: false,
                showArrow: true,
                positon: {},
                transition: 'fade',

                _feedback: {}
            };
        }
    }, {
        key: '_init',
        value: function _init() {
            var _this3 = this;

            this.on('$change:show', function (c, value) {
                _this3.trigger(value ? 'beforeShow' : 'beforeHide', _this3);
            });

            this.on('$changed:show', function (c, value) {
                if (value) {
                    _this3._addDocumentClick();
                    _this3.position();
                    _this3.trigger('show', _this3);
                } else {
                    _this3._removeDocumentClick();
                    _this3.trigger('hide', _this3);
                }
            });

            this._onDocumentClick = this._onDocumentClick.bind(this);
        }
    }, {
        key: '_mount',
        value: function _mount() {
            if (this.get('show')) {
                this._addDocumentClick();
            }
        }
    }, {
        key: 'show',
        value: function show() {
            clearTimeout(this.timer);
            this.set('show', true);
        }
    }, {
        key: 'hide',
        value: function hide(immediately) {
            var _this4 = this;

            if (!immediately && this.get('canHover')) {
                this.timer = setTimeout(function () {
                    _this4.set('show', false);
                }, 200);
            } else {
                this.set('show', false);
            }
        }
    }, {
        key: 'position',
        value: function position() {
            var _this5 = this;

            var pos = this.get('position');
            if (typeof pos === 'string') {
                switch (pos) {
                    case 'left':
                        pos = { my: 'right-10 center', at: 'left center' };
                        break;
                    case 'bottom':
                        pos = { my: 'center top+10', at: 'center bottom' };
                        break;
                    case 'right':
                        pos = { my: 'left+10 center', at: 'right center' };
                        break;
                    default:
                        pos = { my: 'center bottom-10', at: 'center top' };
                        break;
                }
            }
            var element = this.refs.content.element;
            (0, _position3.default)(element, _extends({
                my: 'center bottom-10',
                at: 'center top',
                of: this.dropdown.element,
                using: function using(feedback) {
                    _this5.set('_feedback', feedback);
                }
            }, pos));
        }
    }, {
        key: '_addDocumentClick',
        value: function _addDocumentClick() {
            if (this.get('trigger') === 'click') {
                document.addEventListener('click', this._onDocumentClick);
            }
        }
    }, {
        key: '_removeDocumentClick',
        value: function _removeDocumentClick() {
            if (this.get('trigger') === 'click') {
                document.removeEventListener('click', this._onDocumentClick);
            }
        }
    }, {
        key: '_onDocumentClick',
        value: function _onDocumentClick(e) {
            var target = e.target;
            var element = this.refs.content.element;

            if (element === target || element.contains(target)) return;
            if (e._dropdown) return;

            this.hide(true);
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            clearTimeout(this.timer);
            this._removeDocumentClick();
        }
    }]);

    return TooltipContent;
}(_intact2.default), _class2.template = _index2.default, _class2.propTypes = {
    show: Boolean,
    canHover: Boolean,
    showArrow: Boolean
}, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));


var h = _intact2.default.Vdt.miss.h;

function Wrapper(props, inVue) {
    var children = props.children,
        content = props.content,
        _blocks = props._blocks,
        _context = props._context,
        ref = props.ref,
        rest = _objectWithoutProperties(props, ['children', 'content', '_blocks', '_context', 'ref']);

    if (_blocks && _blocks.content) {
        content = _blocks.content.call(_context);
    }

    var contentVNode = h(TooltipContent, _extends({
        _context: _context,
        children: content,
        ref: ref
    }, rest));

    return !inVue ? [h(Tooltip, _extends({
        _context: _context,
        children: children,
        menu: contentVNode
    }, rest, {
        className: 'k-tooltip'
    })), contentVNode] : h(VueWrapper, _extends({
        children: [h(Tooltip, _extends({
            _context: _context,
            children: children,
            menu: contentVNode
        }, props.trigger ? { trigger: props.trigger } : {})), contentVNode]
    }, rest));
}

// for vue Boolean cast
Wrapper.propTypes = {
    canHover: Boolean
};

var VueWrapper = function (_Intact2) {
    _inherits(VueWrapper, _Intact2);

    function VueWrapper() {
        _classCallCheck(this, VueWrapper);

        return _possibleConstructorReturn(this, (VueWrapper.__proto__ || Object.getPrototypeOf(VueWrapper)).apply(this, arguments));
    }

    _createClass(VueWrapper, [{
        key: 'template',
        value: function template(data) {
            var _data$get = data.get(),
                className = _data$get.className,
                children = _data$get.children,
                rest = _objectWithoutProperties(_data$get, ['className', 'children']);

            return h('div', rest, children, _intact2.default.Vdt.utils.className(_defineProperty({
                'k-tooltip': true
            }, className, className)));
        }
    }]);

    return VueWrapper;
}(_intact2.default);

var _Wrapper = _intact2.default.functionalWrapper ? _intact2.default.functionalWrapper(Wrapper) : Wrapper;

exports.default = _Wrapper;
exports.Tooltip = _Wrapper;

/***/ }),

/***/ "./components/tooltip/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tooltip/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tooltip/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tooltip/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/tooltip/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function (obj, _Vdt, blocks, $callee) {

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        children = _self$get.children,
        show = _self$get.show,
        trigger = _self$get.trigger,
        showArrow = _self$get.showArrow,
        canHover = _self$get.canHover,
        className = _self$get.className,
        _feedback = _self$get._feedback,
        transition = _self$get.transition;

    var events = {};
    if (canHover && trigger === 'hover') {
        events['ev-mouseenter'] = self.show;
        events['ev-mouseleave'] = self.hide.bind(self, false);
    }

    var classNameObj = _defineProperty({
        "k-tooltip-content": true,
        'k-cannot-hover': trigger === 'hover' && !canHover
    }, className, className);

    return h(_moveWrapper2.default, { 'children': function () {
            try {
                return [show][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) ? h(Animate, _extends({ 'className': _className(function () {
                try {
                    return [classNameObj][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this)), 'a:transition': function () {
                try {
                    return [transition][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) }, function () {
            try {
                return [events][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), { 'a:delayDestroy': function () {
                try {
                    return [false][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this), 'children': [function () {
                try {
                    return [showArrow][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this) ? h('i', null, null, _className(function () {
                try {
                    var _ref;

                    return [(_ref = {
                        "k-arrow": true
                    }, _defineProperty(_ref, 'k-' + _feedback.vertical, _feedback.vertical), _defineProperty(_ref, 'k-' + _feedback.horizontal, _feedback.horizontal), _ref)][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this))) : undefined, function () {
                try {
                    return [children][0];
                } catch (e) {
                    _e(e);
                }
            }.call(this)], '_context': this }), null, null, null, function (i) {
            widgets['content'] = i;
        }) : undefined, '_context': this });
};

var _moveWrapper = __webpack_require__("./components/moveWrapper/index.js");

var _moveWrapper2 = _interopRequireDefault(_moveWrapper);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./components/transfer/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.Transfer = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./components/transfer/index.vdt");

var _index2 = _interopRequireDefault(_index);

__webpack_require__("./components/transfer/index.styl");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var Transfer = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(Transfer, _Intact);

    function Transfer() {
        _classCallCheck(this, Transfer);

        return _possibleConstructorReturn(this, (Transfer.__proto__ || Object.getPrototypeOf(Transfer)).apply(this, arguments));
    }

    _createClass(Transfer, [{
        key: 'defaults',
        value: function defaults() {
            return {
                data: [],
                value: [],
                leftChecked: [],
                rightChecked: [],
                filterable: false,
                filter: function filter(data, keywords) {
                    return data.label.includes(keywords);
                },
                label: function label(data, index) {
                    return data.label;
                },

                placeholder: '请输入',
                leftTitle: '请选择',
                rightTitle: '已选择'
            };
        }
    }, {
        key: '_mount',
        value: function _mount() {
            document.addEventListener('keydown', this._onKeydown);
            document.addEventListener('keyup', this._onKeyup);
        }
    }, {
        key: '_onKeydown',
        value: function _onKeydown(e) {
            if (e.keyCode === 16) {
                this.shiftKey = true;
            }
        }
    }, {
        key: '_onKeyup',
        value: function _onKeyup(e) {
            if (e.keyCode === 16) {
                this.shiftKey = false;
            }
        }
    }, {
        key: '_add',
        value: function _add() {
            var value = this.get('value').concat(this.get('leftChecked'));
            this.set({
                leftChecked: [],
                value: value
            });
        }
    }, {
        key: '_remove',
        value: function _remove() {
            var value = this.get('value').slice(0);
            this.get('rightChecked').forEach(function (item) {
                var index = value.indexOf(item);
                value.splice(index, 1);
            });
            this.set({
                rightChecked: [],
                value: value
            });
        }
    }, {
        key: '_onCheckboxChange',
        value: function _onCheckboxChange(type, index, e) {
            var keywords = this.get(type + 'Keywords');
            var data = type === 'left' ? this.get('data') : this.get('value');
            var filter = this.get('filter');

            if (this.startIndex === undefined || !this.shiftKey) {
                this.startIndex = index;
                this.checked = e.target.checked;
            } else if (this.shiftKey) {
                var values = data;
                if (this.get('filterable') && keywords) {
                    values = data.filter(function (item) {
                        return filter(item, keywords);
                    });
                }
                if (index > this.startIndex) {
                    values = values.slice(this.startIndex, index + 1);
                } else if (index < this.startIndex) {
                    values = values.slice(index, this.startIndex + 1);
                }
                values = values.filter(function (item) {
                    return !item.disabled;
                });
                var checkedValues = this.get(type + 'Checked');
                var _values = [];

                if (this.checked) {
                    checkedValues.forEach(function (item) {
                        if (!~values.indexOf(item)) {
                            _values.push(item);
                        }
                    });
                    this.set(type + 'Checked', values.concat(_values));
                } else {
                    checkedValues.forEach(function (item) {
                        if (!~values.indexOf(item)) {
                            _values.push(item);
                        }
                    });
                    this.set(type + 'Checked', _values);
                }
            }
        }
    }, {
        key: '_onClickLabel',
        value: function _onClickLabel(e) {
            if (e.shiftKey && e.target.tagName !== 'INPUT') {
                e.preventDefault();
                e.target.click();
            }
        }
    }, {
        key: '_destroy',
        value: function _destroy() {
            document.removeEventListener('keydown', this._onKeydown);
            document.removeEventListener('keyup', this._onKeyup);
        }
    }]);

    return Transfer;
}(_intact2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));
exports.default = Transfer;
exports.Transfer = Transfer;

/***/ }),

/***/ "./components/transfer/index.styl":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/transfer/index.styl");
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(true) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/transfer/index.styl", function() {
			var newContent = __webpack_require__("./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/transfer/index.styl");
			if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),

/***/ "./components/transfer/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {
    var _this = this;

    _Vdt || (_Vdt = Vdt);
    obj || (obj = {});
    blocks || (blocks = {});
    var h = _Vdt.miss.h,
        hc = _Vdt.miss.hc,
        hu = _Vdt.miss.hu,
        widgets = this && this.widgets || {},
        _blocks = {},
        __blocks = {},
        __u = _Vdt.utils,
        extend = __u.extend,
        _e = __u.error,
        _className = __u.className,
        __o = __u.Options,
        _getModel = __o.getModel,
        _setModel = __o.setModel,
        _setCheckboxModel = __u.setCheckboxModel,
        _detectCheckboxChecked = __u.detectCheckboxChecked,
        _setSelectModel = __u.setSelectModel,
        self = this.data,
        scope = obj,
        Animate = self && self.Animate,
        parent = ($callee || {})._super;

    var _self$get = self.get(),
        data = _self$get.data,
        className = _self$get.className,
        style = _self$get.style,
        value = _self$get.value,
        leftChecked = _self$get.leftChecked,
        rightChecked = _self$get.rightChecked,
        filterable = _self$get.filterable,
        filter = _self$get.filter,
        label = _self$get.label,
        placeholder = _self$get.placeholder,
        leftTitle = _self$get.leftTitle,
        rightTitle = _self$get.rightTitle;

    var classNameObj = _defineProperty({
        'k-transfer': true
    }, className, className);

    var Panel = function Panel(props) {
        var keywords = self.get(props.model + 'Keywords');
        return h('div', null, [h('div', null, function () {
            try {
                return [props.title][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this), 'k-title'), function () {
            try {
                return [filterable][0];
            } catch (e) {
                _e(e);
            }
        }.call(_this) ? h(_input2.default, { 'placeholder': function () {
                try {
                    return [placeholder][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'clearable': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'fluid': function () {
                try {
                    return [true][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), 'children': null, '_context': _this, '_blocks': function (blocks) {
                var _blocks = {},
                    __blocks = extend({}, blocks);
                return (_blocks.append = function (parent) {
                    return h(_button2.default, { 'icon': function () {
                            try {
                                return [true][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'type': 'none', 'children': h('i', null, null, 'ion-ios-search'), '_context': this });
                }) && (__blocks.append = function (parent) {
                    var self = this;
                    return blocks.append ? blocks.append.call(this, function () {
                        return _blocks.append.call(self, parent);
                    }) : _blocks.append.call(this, parent);
                }) && __blocks;
            }.call(_this, {}), value: _getModel(self, function () {
                try {
                    return [props.model + 'Keywords'][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this)), 'ev-$change:value': function ev$changeValue(__c, __n) {
                _setModel(self, function () {
                    try {
                        return [props.model + 'Keywords'][0];
                    } catch (e) {
                        _e(e);
                    }
                }.call(this), __n);
            } }) : undefined, h(Animate, { 'className': 'k-list', 'children': _Vdt.utils.map(function () {
                try {
                    return [keywords ? props.data.filter(function (item) {
                        return filter(item, keywords);
                    }) : props.data][0];
                } catch (e) {
                    _e(e);
                }
            }.call(_this), function (value, key) {
                return h(Animate, { 'className': _className(function () {
                        try {
                            return [{ "k-item": true, "k-disabled": value.disabled }][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this)), 'key': function () {
                        try {
                            return [value][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'a:transition': 'fade', 'ev-click': function () {
                        try {
                            return [self._onClickLabel][0];
                        } catch (e) {
                            _e(e);
                        }
                    }.call(this), 'children': h(_checkbox2.default, { 'name': function () {
                            try {
                                return [props.model][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'trueValue': function () {
                            try {
                                return [value][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'disabled': function () {
                            try {
                                return [value.disabled][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'ev-click': function () {
                            try {
                                return [self._onCheckboxChange.bind(self, props.model, key)][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), 'children': function () {
                            try {
                                return [label.call(self, value, key, props.model)][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this), '_context': this, value: _getModel(self, function () {
                            try {
                                return [props.model + 'Checked'][0];
                            } catch (e) {
                                _e(e);
                            }
                        }.call(this)), 'ev-$change:value': function ev$changeValue(__c, __n) {
                            _setModel(self, function () {
                                try {
                                    return [props.model + 'Checked'][0];
                                } catch (e) {
                                    _e(e);
                                }
                            }.call(this), __n);
                        } }), '_context': this });
            }, _this), '_context': _this })], 'k-panel');
    };

    return h('div', { 'style': function () {
            try {
                return [style][0];
            } catch (e) {
                _e(e);
            }
        }.call(this) }, [h(Panel, { 'data': function () {
            try {
                return [data.filter(function (item) {
                    return !~value.indexOf(item);
                })][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'model': 'left', 'title': function () {
            try {
                return [leftTitle][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this }), h('div', null, [h(_button2.default, { 'circle': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'icon': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [!rightChecked.length][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._remove][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-arrow-left'), '_context': this }), h(_button2.default, { 'circle': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'icon': function () {
            try {
                return [true][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'disabled': function () {
            try {
                return [!leftChecked.length][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'ev-click': function () {
            try {
                return [self._add][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': h('i', null, null, 'k-icon ion-ios-arrow-right'), '_context': this })], 'k-arrows'), h(Panel, { 'data': function () {
            try {
                return [data.filter(function (item) {
                    return ~value.indexOf(item);
                })][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'model': 'right', 'title': function () {
            try {
                return [rightTitle + ' (' + value.length + ')'][0];
            } catch (e) {
                _e(e);
            }
        }.call(this), 'children': null, '_context': this })], _className(function () {
        try {
            return [classNameObj][0];
        } catch (e) {
            _e(e);
        }
    }.call(this)));
};

var _button = __webpack_require__("./components/button/index.js");

var _button2 = _interopRequireDefault(_button);

var _checkbox = __webpack_require__("./components/checkbox/index.js");

var _checkbox2 = _interopRequireDefault(_checkbox);

var _input = __webpack_require__("./components/input/index.js");

var _input2 = _interopRequireDefault(_input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

module.exports = exports['default'];

/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/breadcrumb/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-breadcrumb {\n  font-size: 1rem;\n}\n.k-breadcrumb .k-item {\n  display: inline-block;\n}\n.k-breadcrumb .k-item:last-of-type {\n  font-weight: bold;\n}\n.k-breadcrumb .k-item-link {\n  color: #595959;\n}\n.k-breadcrumb a.k-item-link:hover {\n  color: #195d9f;\n}\n.k-breadcrumb .k-separator {\n  margin: 0 0.571428571428571rem;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/checkbox/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-checkbox {\n  display: inline-block;\n  cursor: pointer;\n}\n.k-checkbox .k-wrapper {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: middle;\n  border: 1px solid #979797;\n  border-radius: 2px;\n  position: relative;\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-checkbox .k-wrapper:before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  width: 0.285714285714286rem;\n  height: 0.571428571428571rem;\n  top: 0.071428571428571rem;\n  left: 0.285714285714286rem;\n  border: 1px solid #fff;\n  border-top: 0;\n  border-left: 0;\n  -webkit-transform: rotate(45deg) scale(0);\n      -ms-transform: rotate(45deg) scale(0);\n          transform: rotate(45deg) scale(0);\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-checkbox input {\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n}\n.k-checkbox .k-text {\n  vertical-align: middle;\n  margin-left: 0.571428571428571em;\n  display: inline-block;\n}\n.k-checkbox.k-checked .k-wrapper {\n  border-color: #0a5eee;\n  background: #0a5eee;\n}\n.k-checkbox.k-checked .k-wrapper:before {\n  -webkit-transform: rotate(45deg) scale(1);\n      -ms-transform: rotate(45deg) scale(1);\n          transform: rotate(45deg) scale(1);\n}\n.k-checkbox.k-disabled {\n  color: #999;\n  cursor: not-allowed;\n}\n.k-checkbox.k-disabled .k-wrapper {\n  border-color: #d9d9d9;\n  background: #f7f7f7;\n}\n.k-checkbox.k-disabled .k-wrapper:before {\n  border-color: #999;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/datepicker/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-datepicker {\n  display: inline-block;\n}\n.k-datepicker .k-inner {\n  cursor: pointer;\n}\n.k-datepicker-content {\n  position: absolute;\n  border-radius: 0.142857142857143rem;\n  -webkit-box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n          box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n  color: #595959;\n}\n.k-datepicker-content .k-day,\n.k-datepicker-content .k-weekday {\n  display: inline-block;\n  width: 2.5em;\n  text-align: center;\n  margin: 0.083333333333333em 0.166666666666667em;\n}\n.k-datepicker-content .k-day {\n  height: 2.5em;\n  line-height: calc(2.5em - 2px);\n  border-radius: 50%;\n  cursor: pointer;\n  border: 1px solid transparent;\n}\n.k-datepicker-content .k-day:hover {\n  background: #eee;\n}\n.k-datepicker-content .k-day.k-out {\n  color: #999;\n}\n.k-datepicker-content .k-day.k-today {\n  border: 1px solid #cad0dd;\n}\n.k-datepicker-content .k-day.k-active {\n  background: #0a5eee;\n  color: #fff;\n}\n.k-datepicker-content .k-day.k-active.k-today {\n  border-color: transparent;\n}\n.k-datepicker-content .k-day.k-disabled {\n  color: #ccc;\n  cursor: not-allowed;\n}\n.k-datepicker-content .k-day.k-disabled:hover {\n  background: none;\n}\n.k-datepicker-content .k-weekday {\n  color: #999;\n}\n.k-datepicker-content .k-month {\n  text-align: center;\n  padding: 0 0 0.416666666666667em;\n}\n.k-datepicker-content .k-month .k-text {\n  margin: 0 0.25em;\n  line-height: 2.5em;\n}\n.k-datepicker-content .k-month .k-icon {\n  font-size: 1.166666666666667em;\n}\n.k-datepicker-content .k-month .k-prev {\n  float: left;\n}\n.k-datepicker-content .k-month .k-next {\n  float: right;\n}\n.k-datepicker-content .k-month .k-text-wrapper {\n  cursor: pointer;\n}\n.k-datepicker-content .k-year-picker {\n  width: 19.833333333333332em;\n}\n.k-datepicker-content .k-time-picker {\n  width: 19.833333333333332em;\n}\n.k-datepicker-content .k-scroll-select {\n  height: 17.5em;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dialog/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-dialog-wrapper {\n  position: absolute;\n  z-index: 9999;\n  top: 0;\n  left: 0;\n}\n.k-dialog-wrapper .k-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #000;\n  opacity: 0.5;\n  -webkit-transition: opacity 0.25s ease-in-out;\n  transition: opacity 0.25s ease-in-out;\n}\n.k-dialog-wrapper .k-overlay.animate-enter,\n.k-dialog-wrapper .k-overlay.animate-leave {\n  opacity: 0;\n}\n.k-dialog {\n  position: absolute;\n  width: 47.857142857142854rem;\n  border-radius: 2px;\n  background: #fff;\n  font-size: 0.857142857142857rem;\n  color: #595959;\n}\n.k-dialog > .k-header {\n  padding: 0 2.142857142857143rem;\n  border-bottom: 1px solid #cad0dd;\n  position: relative;\n}\n.k-dialog > .k-header .k-title {\n  height: 4.285714285714286em;\n  line-height: 4.285714285714286em;\n  font-size: 1rem;\n  color: #404040;\n}\n.k-dialog > .k-header .k-close {\n  position: absolute;\n  right: 0.357142857142857em;\n  top: 0.714285714285714em;\n}\n.k-dialog > .k-header .k-close.k-btn .k-icon {\n  font-size: 2.285714285714286em;\n}\n.k-dialog > .k-body {\n  padding: 1.285714285714286rem 2.142857142857143rem;\n}\n.k-dialog > .k-footer {\n  text-align: right;\n  padding: 1.714285714285714rem 2.142857142857143rem;\n}\n.k-dialog > .k-footer .k-btn {\n  margin-left: 0.857142857142857rem;\n}\n.k-dialog.k-dragging {\n  cursor: default;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.k-dialog.animate-enter-active,\n.k-dialog.animate-leave-active {\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-dialog.animate-enter,\n.k-dialog.animate-leave {\n  -webkit-transform: translateY(-10px) scale(1.05);\n      -ms-transform: translateY(-10px) scale(1.05);\n          transform: translateY(-10px) scale(1.05);\n  opacity: 0;\n}\n.k-dialog.k-small {\n  width: 32.142857142857146rem;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/dropdown/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-dropdown {\n  display: inline-block;\n}\n.k-dropdown-menu {\n  position: absolute;\n  min-width: 7.142857142857143rem;\n  background: #fff;\n  border-radius: 0.142857142857143rem;\n  -webkit-box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n          box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n  font-size: 0.857142857142857rem;\n  z-index: 9999;\n  top: 0;\n  left: 0;\n}\n.k-dropdown-menu .k-dropdown {\n  display: block;\n}\n.k-dropdown-menu .k-item {\n  padding: 0.666666666666667em 1.333333333333333em;\n  cursor: pointer;\n}\n.k-dropdown-menu .k-item.k-hover {\n  background: #0a5eee;\n  color: #fff;\n}\n.k-dropdown-menu .k-item:first-of-type {\n  border-radius: 0.142857142857143rem 0.142857142857143rem 0 0;\n}\n.k-dropdown-menu .k-item:last-of-type {\n  border-radius: 0 0 0.142857142857143rem 0.142857142857143rem;\n}\n.k-dropdown-menu .k-item.k-disabled {\n  background: #f7f7f7;\n  color: #999;\n  cursor: not-allowed;\n}\n.k-dropdown-menu.dropdown-leave-active {\n  pointer-events: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/editable/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-editable {\n  display: inline-block;\n  line-height: 2.142857142857143em;\n}\n.k-editable .k-edit {\n  float: right;\n  cursor: pointer;\n  margin: 0 0 0 0.571428571428571em;\n}\n.k-editable.k-invalid .k-input .k-inner {\n  border: 1px solid #db2828;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/form/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-form-item:not(:last-of-type) {\n  margin: 0 0 1.428571428571429em 0;\n}\n.k-form-item {\n  display: table;\n}\n.k-form-item > .k-label {\n  display: table-cell;\n  width: 5.714285714285714em;\n  text-align: right;\n  padding-right: 0.714285714285714em;\n  line-height: 2.571428571428572em;\n}\n.k-form-item > .k-content {\n  display: table-cell;\n  vertical-align: middle;\n  line-height: 1;\n}\n.k-form-item .k-error {\n  position: absolute;\n  color: #db2828;\n  font-size: 0.857142857142857rem;\n  margin: 2px 0 0 0;\n}\n.k-form-item.k-invalid .k-input .k-inner {\n  border: 1px solid #db2828;\n}\n.k-form-item.k-invalid .k-select .k-wrapper {\n  border: 1px solid #db2828;\n}\n.k-form-item .k-form-item {\n  display: block;\n  width: auto;\n}\n.k-form-item > .k-append {\n  display: table-cell;\n  padding: 0 0.714285714285714rem;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/grid/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-row {\n  display: block;\n  zoom: 1;\n}\n.k-row:after {\n  display: table;\n  clear: both;\n  content: '';\n  height: 0;\n}\n.k-1 {\n  width: 4.166666666666666%;\n  float: left;\n}\n.k-offset-1 {\n  margin-left: 4.166666666666666%;\n}\n.k-2 {\n  width: 8.333333333333332%;\n  float: left;\n}\n.k-offset-2 {\n  margin-left: 8.333333333333332%;\n}\n.k-3 {\n  width: 12.5%;\n  float: left;\n}\n.k-offset-3 {\n  margin-left: 12.5%;\n}\n.k-4 {\n  width: 16.666666666666664%;\n  float: left;\n}\n.k-offset-4 {\n  margin-left: 16.666666666666664%;\n}\n.k-5 {\n  width: 20.833333333333336%;\n  float: left;\n}\n.k-offset-5 {\n  margin-left: 20.833333333333336%;\n}\n.k-6 {\n  width: 25%;\n  float: left;\n}\n.k-offset-6 {\n  margin-left: 25%;\n}\n.k-7 {\n  width: 29.166666666666668%;\n  float: left;\n}\n.k-offset-7 {\n  margin-left: 29.166666666666668%;\n}\n.k-8 {\n  width: 33.33333333333333%;\n  float: left;\n}\n.k-offset-8 {\n  margin-left: 33.33333333333333%;\n}\n.k-9 {\n  width: 37.5%;\n  float: left;\n}\n.k-offset-9 {\n  margin-left: 37.5%;\n}\n.k-10 {\n  width: 41.66666666666667%;\n  float: left;\n}\n.k-offset-10 {\n  margin-left: 41.66666666666667%;\n}\n.k-11 {\n  width: 45.83333333333333%;\n  float: left;\n}\n.k-offset-11 {\n  margin-left: 45.83333333333333%;\n}\n.k-12 {\n  width: 50%;\n  float: left;\n}\n.k-offset-12 {\n  margin-left: 50%;\n}\n.k-13 {\n  width: 54.166666666666664%;\n  float: left;\n}\n.k-offset-13 {\n  margin-left: 54.166666666666664%;\n}\n.k-14 {\n  width: 58.333333333333336%;\n  float: left;\n}\n.k-offset-14 {\n  margin-left: 58.333333333333336%;\n}\n.k-15 {\n  width: 62.5%;\n  float: left;\n}\n.k-offset-15 {\n  margin-left: 62.5%;\n}\n.k-16 {\n  width: 66.66666666666666%;\n  float: left;\n}\n.k-offset-16 {\n  margin-left: 66.66666666666666%;\n}\n.k-17 {\n  width: 70.83333333333334%;\n  float: left;\n}\n.k-offset-17 {\n  margin-left: 70.83333333333334%;\n}\n.k-18 {\n  width: 75%;\n  float: left;\n}\n.k-offset-18 {\n  margin-left: 75%;\n}\n.k-19 {\n  width: 79.16666666666666%;\n  float: left;\n}\n.k-offset-19 {\n  margin-left: 79.16666666666666%;\n}\n.k-20 {\n  width: 83.33333333333334%;\n  float: left;\n}\n.k-offset-20 {\n  margin-left: 83.33333333333334%;\n}\n.k-21 {\n  width: 87.5%;\n  float: left;\n}\n.k-offset-21 {\n  margin-left: 87.5%;\n}\n.k-22 {\n  width: 91.66666666666666%;\n  float: left;\n}\n.k-offset-22 {\n  margin-left: 91.66666666666666%;\n}\n.k-23 {\n  width: 95.83333333333334%;\n  float: left;\n}\n.k-offset-23 {\n  margin-left: 95.83333333333334%;\n}\n.k-24 {\n  width: 100%;\n  float: left;\n}\n.k-offset-24 {\n  margin-left: 100%;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/input/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-input {\n  font-size: 1rem;\n  display: inline-block;\n  width: 21.428571428571427rem;\n  vertical-align: middle;\n}\n.k-input .k-wrapper {\n  display: inline-block;\n  width: 100%;\n  position: relative;\n}\n.k-input .k-inner {\n  display: inline-block;\n  width: 100%;\n  font-size: 1rem;\n  height: 2.571428571428572rem;\n  border: 1px solid #cad0dd;\n  padding: 0 0.714285714285714rem;\n  background-color: #fff;\n  -webkit-transition: border 0.25s ease-in-out, background 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, box-shadow 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n  outline: none;\n}\n.k-input .k-inner:focus {\n  border: 1px solid #0a5eee;\n}\n.k-input.k-fluid {\n  width: 100%;\n}\n.k-input .k-textarea {\n  padding: 0.357142857142857rem 0.714285714285714rem;\n  height: auto;\n  line-height: 1.5;\n}\n.k-input.k-with-prefix .k-inner {\n  padding-left: 2.142857142857143rem;\n}\n.k-input.k-with-suffix .k-inner,\n.k-input.k-clearable .k-inner {\n  padding-right: 2.142857142857143rem;\n}\n.k-input .k-prefix,\n.k-input .k-suffix {\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n      -ms-transform: translateY(-50%);\n          transform: translateY(-50%);\n}\n.k-input .k-prefix {\n  left: 0.714285714285714rem;\n}\n.k-input .k-suffix {\n  right: 0.714285714285714rem;\n}\n.k-input .k-clear {\n  cursor: pointer;\n  opacity: 0;\n  -webkit-transition: opacity 0.25s ease-in-out;\n  transition: opacity 0.25s ease-in-out;\n  pointer-events: none;\n}\n.k-input .k-clear:hover {\n  color: #0a5eee;\n}\n.k-input.k-with-suffix .k-clear {\n  margin-right: 0.357142857142857rem;\n}\n.k-input.k-with-suffix.k-clearable .k-inner {\n  padding-right: 3.214285714285714rem;\n}\n.k-input .k-inner:focus + .k-suffix .k-clear.k-show,\n.k-input:hover .k-clear.k-show {\n  opacity: 1;\n  pointer-events: all;\n}\n.k-input.k-group {\n  display: table;\n}\n.k-input .k-prepend,\n.k-input .k-append {\n  display: table-cell;\n  width: 1px;\n  vertical-align: middle;\n  padding: 0 0.5em;\n  background: #eee;\n  border: 1px solid #cad0dd;\n}\n.k-input .k-prepend .k-btn,\n.k-input .k-append .k-btn {\n  margin: -1px -0.571428571428571em;\n  border-radius: 0;\n}\n.k-input .k-prepend {\n  border-right: none;\n  white-space: nowrap;\n}\n.k-input .k-append {\n  border-left: none;\n  white-space: nowrap;\n}\n.k-input.k-disabled {\n  color: #999;\n  cursor: not-allowed;\n}\n.k-input.k-disabled .k-inner {\n  color: #999;\n  border-color: #d9d9d9;\n  background: #f7f7f7;\n  cursor: not-allowed;\n}\n.k-input.k-small {\n  font-size: 0.857142857142857rem;\n}\n.k-input.k-small .k-inner {\n  height: 2.142857142857143rem;\n  font-size: 0.857142857142857rem;\n}\n.k-input.k-mini {\n  font-size: 0.857142857142857rem;\n}\n.k-input.k-mini .k-inner {\n  height: 1.857142857142857rem;\n  font-size: 0.857142857142857rem;\n}\n.k-input .k-fake {\n  position: absolute;\n  visibility: hidden;\n  top: 0;\n  white-space: nowrap;\n}\n.k-input.k-auto-width {\n  width: auto;\n}\n.k-input.k-auto-width .k-inner {\n  -webkit-box-sizing: content-box;\n          box-sizing: content-box;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/message/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-messages {\n  position: fixed;\n  top: 0.714285714285714rem;\n  width: 100%;\n  pointer-events: none;\n  z-index: 9999;\n}\n.k-messages .animate-enter,\n.k-messages .animate-leave {\n  opacity: 0;\n  -webkit-transform: translateY(-0.5rem);\n      -ms-transform: translateY(-0.5rem);\n          transform: translateY(-0.5rem);\n}\n.k-messages .animate-enter-active,\n.k-messages .animate-leave-active {\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-messages .animate-move {\n  -webkit-transition: -webkit-transform 0.25s ease-in-out;\n  transition: -webkit-transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out, -webkit-transform 0.25s ease-in-out;\n}\n.k-message {\n  text-align: center;\n  width: 100%;\n}\n.k-message > .k-container {\n  display: inline-block;\n  -webkit-box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n          box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n  background: #fff;\n  border-radius: 0.285714285714286rem;\n  margin-bottom: 0.714285714285714rem;\n  pointer-events: all;\n}\n.k-message > .k-container > .k-icon {\n  display: inline-block;\n  vertical-align: middle;\n  padding-left: 0.714285714285714rem;\n  color: #0a5eee;\n}\n.k-message > .k-container > .k-icon:before {\n  font-size: 1.285714285714286rem;\n}\n.k-message > .k-container > .k-content {\n  display: inline-block;\n  padding: 0.714285714285714rem;\n  vertical-align: middle;\n}\n.k-message > .k-container > .k-close {\n  vertical-align: middle;\n}\n.k-message > .k-container > .k-close .k-icon:before {\n  font-size: 1.714285714285714rem;\n}\n.k-message.k-danger > .k-container > .k-icon {\n  color: #db2828;\n}\n.k-message.k-success > .k-container > .k-icon {\n  color: #4db500;\n}\n.k-message.k-warning > .k-container > .k-icon {\n  color: #ff8a00;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/pagination/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-pagination {\n  font-size: 1rem;\n}\n.k-pagination .k-pages,\n.k-pagination .k-limits,\n.k-pagination .k-goto,\n.k-pagination .k-total {\n  margin-left: 1.428571428571429em;\n  display: inline-block;\n}\n.k-pagination .k-pages {\n  margin-left: 0;\n}\n.k-pagination .k-pages > div {\n  display: inline-block;\n  border: 1px solid #cad0dd;\n  border-radius: 0.142857142857143rem;\n  margin-right: 0.714285714285714em;\n  min-width: 2.571428571428572em;\n  height: 2.571428571428572em;\n  line-height: calc(2.571428571428572em - 2px);\n  cursor: pointer;\n  text-align: center;\n  vertical-align: middle;\n}\n.k-pagination .k-pages > div:not(.k-active):not(.k-disabled):hover {\n  border-color: #0a5eee;\n  color: #0a5eee;\n}\n.k-pagination .k-pages > div:last-of-type {\n  margin-right: 0;\n}\n.k-pagination .k-pages .k-active {\n  background-color: #0a5eee;\n  border-color: #0a5eee;\n  color: #fff;\n}\n.k-pagination .k-pages .k-disabled {\n  cursor: not-allowed;\n  color: #999;\n  border-color: #d9d9d9;\n}\n.k-pagination .k-goto .k-input {\n  font-size: inherit;\n  width: 4.285714285714286em;\n  margin: 0 0.714285714285714em;\n}\n.k-pagination .k-select {\n  width: auto;\n}\n.k-pagination.k-small {\n  font-size: 0.857142857142857rem;\n}\n.k-pagination.k-small .k-pages > div {\n  margin-right: 0.416666666666667em;\n  min-width: 2.5em;\n  height: 2.5em;\n  line-height: calc(2.5em - 2px);\n}\n.k-pagination.k-mini {\n  font-size: 0.857142857142857rem;\n}\n.k-pagination.k-mini .k-pages > div {\n  margin-right: 0.416666666666667em;\n  min-width: 2.166666666666667em;\n  height: 2.166666666666667em;\n  line-height: calc(2.166666666666667em - 2px);\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/progress/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-progress {\n  position: relative;\n  line-height: 1;\n}\n.k-progress.k-bar {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.k-progress.k-bar .k-container {\n  height: 1rem;\n  border-radius: 1rem;\n  background-color: #eaeef2;\n  overflow: hidden;\n  position: relative;\n  vertical-align: middle;\n  font-size: 0.857142857142857em;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n}\n.k-progress.k-bar .k-content {\n  position: relative;\n  left: 0;\n  top: 0;\n  white-space: nowrap;\n  width: 100%;\n  height: 100%;\n  border-radius: 1rem;\n}\n.k-progress.k-bar .k-bg {\n  background-color: #0a5eee;\n  height: 100%;\n  border-radius: 1rem;\n  -webkit-transition: all 0.6s ease;\n  transition: all 0.6s ease;\n  position: relative;\n}\n.k-progress.k-bar .k-inner-text {\n  display: inline-block;\n  vertical-align: middle;\n  color: #fff;\n  margin: 1px 3px;\n  width: 100%;\n  text-align: right;\n  padding-right: 10px;\n}\n.k-progress.k-bar.k-success .k-bg {\n  background: #4db500;\n}\n.k-progress.k-bar.k-error .k-bg {\n  background: #db2828;\n}\n.k-progress.k-bar.k-active .k-bg:before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: #fff;\n  -webkit-animation: progress-bar-animation 2s ease infinite;\n          animation: progress-bar-animation 2s ease infinite;\n  border-radius: 14px;\n}\n.k-progress.k-bar.k-mini {\n  font-size: 0.857142857142857em;\n}\n.k-progress.k-bar.k-mini .k-container {\n  height: 0.357142857142857rem;\n}\n.k-progress.k-bar.k-small {\n  font-size: 0.857142857142857em;\n}\n.k-progress.k-bar.k-small .k-container {\n  height: 0.714285714285714rem;\n}\n.k-progress.k-bar .k-text {\n  margin-left: 15px;\n  width: 2.857142857142857rem;\n}\n.k-progress.k-circle {\n  width: 6em;\n  height: 6em;\n  font-size: 1.428571428571429rem;\n}\n.k-progress.k-circle .k-canvas {\n  -webkit-transform: rotate(-90deg);\n      -ms-transform: rotate(-90deg);\n          transform: rotate(-90deg);\n}\n.k-progress.k-circle .k-meter,\n.k-progress.k-circle .k-value,\n.k-progress.k-circle .k-animate {\n  fill: none;\n}\n.k-progress.k-circle .k-meter {\n  stroke: #eaeef2;\n}\n.k-progress.k-circle .k-value {\n  stroke: #0a5eee;\n  stroke-linecap: round;\n  -webkit-transition: all 0.6s ease;\n  transition: all 0.6s ease;\n}\n.k-progress.k-circle .k-animate {\n  stroke: #fff;\n  stroke-linecap: round;\n}\n.k-progress.k-circle .k-text {\n  position: absolute;\n  top: 50%;\n  text-align: center;\n  width: 100%;\n  -webkit-transform: translateY(-50%);\n      -ms-transform: translateY(-50%);\n          transform: translateY(-50%);\n}\n.k-progress.k-circle.k-success .k-value {\n  stroke: #4db500;\n}\n.k-progress.k-circle.k-error .k-value {\n  stroke: #db2828;\n}\n.k-progress.k-circle.k-mini {\n  width: 3.333333333333333em;\n  height: 3.333333333333333em;\n  font-size: 0.857142857142857rem;\n}\n.k-progress.k-circle.k-small {\n  width: 5em;\n  height: 5em;\n  font-size: 1.142857142857143rem;\n}\n@-webkit-keyframes progress-bar-animation {\n  from {\n    opacity: 0.2;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n  to {\n    opacity: 0;\n    width: 100%;\n  }\n}\n@keyframes progress-bar-animation {\n  from {\n    opacity: 0.2;\n    width: 1rem;\n    margin-left: -1rem;\n  }\n  to {\n    opacity: 0;\n    width: 100%;\n  }\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/radio/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-radio {\n  display: inline-block;\n  cursor: pointer;\n}\n.k-radio .k-wrapper {\n  display: inline-block;\n  width: 1rem;\n  height: 1rem;\n  vertical-align: middle;\n  border: 1px solid #979797;\n  border-radius: 50%;\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n  position: relative;\n}\n.k-radio .k-wrapper:before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  width: 0.571428571428571rem;\n  height: 0.571428571428571rem;\n  top: 50%;\n  left: 50%;\n  margin-left: -0.285714285714286rem;\n  margin-top: -0.285714285714286rem;\n  border-radius: 50%;\n  background-color: #0a5eee;\n  -webkit-transform: scale(0);\n      -ms-transform: scale(0);\n          transform: scale(0);\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-radio input {\n  width: 100%;\n  height: 100%;\n  opacity: 0;\n  cursor: pointer;\n  position: absolute;\n}\n.k-radio .k-text {\n  vertical-align: middle;\n  display: inline-block;\n  margin-left: 0.571428571428571em;\n}\n.k-radio.k-checked .k-wrapper {\n  border-color: #0a5eee;\n}\n.k-radio.k-checked .k-wrapper:before {\n  -webkit-transform: scale(1);\n      -ms-transform: scale(1);\n          transform: scale(1);\n}\n.k-radio.k-disabled {\n  color: #999;\n  cursor: not-allowed;\n}\n.k-radio.k-disabled .k-wrapper {\n  border-color: #d9d9d9;\n  background: #f7f7f7;\n}\n.k-radio.k-disabled .k-wrapper:before {\n  background: #999;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/scrollSelect/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-scroll-select {\n  text-align: center;\n  overflow: hidden;\n  max-height: 100%;\n  height: 8.928571428571429rem;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  position: relative;\n}\n.k-scroll-select .k-wrapper {\n  -webkit-transition: -webkit-transform 0.25s ease-in-out;\n  transition: -webkit-transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out, -webkit-transform 0.25s ease-in-out;\n}\n.k-scroll-select.k-dragging .k-wrapper {\n  -webkit-transition: none;\n  transition: none;\n}\n.k-scroll-select.k-disabled .k-item {\n  color: #ccc;\n}\n.k-scroll-select .k-item {\n  line-height: 1.785714285714286rem;\n  color: #999;\n  cursor: pointer;\n}\n.k-scroll-select .k-item.k-active {\n  color: #0a5eee;\n  font-size: 1.1em;\n}\n.k-scroll-select > .k-append {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  -webkit-transform: translateY(-50%);\n      -ms-transform: translateY(-50%);\n          transform: translateY(-50%);\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/select/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-select {\n  display: inline-block;\n  vertical-align: middle;\n  position: relative;\n  width: 14.285714285714286rem;\n}\n.k-select > .k-wrapper {\n  width: 100%;\n  min-height: 2.571428571428572rem;\n  cursor: pointer;\n  outline: none;\n  vertical-align: middle;\n  border: 1px solid #cad0dd;\n  padding: 0 2.142857142857143rem 0 0.714285714285714rem;\n  background: #fff;\n  -webkit-transition: border 0.25s ease-in-out, background 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, box-shadow 0.25s ease-in-out;\n  transition: border 0.25s ease-in-out, background 0.25s ease-in-out, box-shadow 0.25s ease-in-out, -webkit-box-shadow 0.25s ease-in-out;\n}\n.k-select .k-suffix {\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n      -ms-transform: translateY(-50%);\n          transform: translateY(-50%);\n  right: 0.714285714285714rem;\n}\n.k-select.k-fluid {\n  width: 100%;\n}\n.k-select .k-clear {\n  margin-right: 0.357142857142857rem;\n  opacity: 0;\n  -webkit-transition: opacity 0.25s ease-in-out;\n  transition: opacity 0.25s ease-in-out;\n  pointer-events: none;\n}\n.k-select .k-clear:hover {\n  color: #0a5eee;\n}\n.k-select:hover .k-clear.k-show {\n  opacity: 1;\n  pointer-events: all;\n}\n.k-select.k-clearable > .k-wrapper {\n  padding-right: 3.214285714285714rem;\n}\n.k-select .k-input .k-inner {\n  width: 100%;\n  height: calc(2.571428571428572rem - 2px);\n  border: none;\n  padding: 0;\n}\n.k-select .k-input .k-inner:focus {\n  border: none;\n}\n.k-select .k-placeholder {\n  color: #999;\n}\n.k-select .k-input,\n.k-select .k-placeholder,\n.k-select .k-value {\n  line-height: calc(2.571428571428572rem - 2px);\n}\n.k-select .k-placeholder,\n.k-select .k-value {\n  display: block;\n}\n.k-select .k-arrow {\n  display: inline-block;\n  -webkit-transition: -webkit-transform 0.25s ease-in-out;\n  transition: -webkit-transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out;\n  transition: transform 0.25s ease-in-out, -webkit-transform 0.25s ease-in-out;\n}\n.k-select.k-show > .k-wrapper {\n  border: 1px solid #0a5eee;\n}\n.k-select.k-show .k-arrow {\n  -webkit-transform: rotate(180deg);\n      -ms-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n.k-select.k-disabled > .k-wrapper {\n  color: #999;\n  cursor: not-allowed;\n  background: #f7f7f7;\n  border-color: #d9d9d9;\n}\n.k-select.k-disabled .k-input {\n  color: #999;\n  background: #f7f7f7;\n  cursor: not-allowed;\n}\n.k-select .k-values {\n  display: inline-block;\n  margin-top: 0.357142857142857rem;\n}\n.k-select .k-values .k-input {\n  margin-top: -0.357142857142857rem;\n}\n.k-select .k-tag {\n  padding: 0.142857142857143rem 0.357142857142857rem;\n  background: #f7f7f7;\n  border-radius: 0.142857142857143rem;\n  margin: 0 0.357142857142857rem 0.357142857142857rem 0;\n}\n.k-select .k-tag,\n.k-select .k-tag .k-text,\n.k-select .k-tag .k-icon {\n  display: inline-block;\n  vertical-align: middle;\n}\n.k-select .k-tag .k-icon {\n  margin-left: 0.357142857142857rem;\n}\n.k-select .k-tag .k-icon:before {\n  font-size: 1.428571428571429rem;\n}\n.k-select.k-small > .k-wrapper {\n  min-height: 2.142857142857143rem;\n  font-size: 0.857142857142857rem;\n}\n.k-select.k-small > .k-wrapper .k-input,\n.k-select.k-small > .k-wrapper .k-placeholder,\n.k-select.k-small > .k-wrapper .k-value {\n  line-height: calc(2.142857142857143rem - 2px);\n}\n.k-select.k-small > .k-wrapper .k-input .k-inner {\n  height: calc(2.142857142857143rem - 2px);\n}\n.k-select.k-small > .k-wrapper .k-values {\n  margin-top: 0.071428571428571rem;\n}\n.k-select.k-small > .k-wrapper .k-values .k-input {\n  margin-top: -0.071428571428571rem;\n}\n.k-select.k-small > .k-wrapper .k-tag {\n  margin: 0 0.142857142857143rem 0.071428571428571rem 0;\n}\n.k-select.k-mini > .k-wrapper {\n  min-height: 1.857142857142857rem;\n  font-size: 0.857142857142857rem;\n}\n.k-select.k-mini > .k-wrapper .k-input,\n.k-select.k-mini > .k-wrapper .k-placeholder,\n.k-select.k-mini > .k-wrapper .k-value {\n  line-height: calc(1.857142857142857rem - 2px);\n}\n.k-select.k-mini > .k-wrapper .k-input .k-inner {\n  height: calc(1.857142857142857rem - 2px);\n}\n.k-select.k-mini > .k-wrapper .k-values {\n  margin-top: 0.071428571428571rem;\n}\n.k-select.k-mini > .k-wrapper .k-values .k-input {\n  margin-top: -0.071428571428571rem;\n}\n.k-select.k-mini > .k-wrapper .k-tag {\n  margin: 0 0.142857142857143rem 0.071428571428571rem 0;\n}\n.k-select-dropdown {\n  min-width: auto;\n  max-height: 14.285714285714286rem;\n  overflow: auto;\n}\n.k-select-dropdown .k-active {\n  color: #0a5eee;\n}\n.k-select-dropdown .k-group > .k-label {\n  color: #999;\n  padding: 0.571428571428571rem;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/slider/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-slider {\n  position: relative;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.k-slider .k-wrapper {\n  height: 0.5rem;\n  background-color: #eaeef2;\n  border-radius: 0.5rem;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.k-slider .k-wrapper .k-box {\n  position: absolute;\n  top: 0.5rem;\n  padding: 5px 2px;\n  width: 100%;\n}\n.k-slider .k-wrapper .k-box :last-child {\n  float: right;\n}\n.k-slider .k-wrapper .k-bar {\n  background-color: #0a5eee;\n  position: absolute;\n  height: 100%;\n  border-radius: 0.5rem;\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n}\n.k-slider .k-wrapper .k-handle {\n  height: 1rem;\n  width: 1rem;\n  position: absolute;\n  top: 50%;\n  margin-top: -0.5rem;\n  margin-left: -0.5rem;\n  text-align: center;\n  -webkit-transition: all 0.25s ease-in-out;\n  transition: all 0.25s ease-in-out;\n  border: 2px solid #0a5eee;\n  border-radius: 50%;\n  background-color: #fff;\n  transition: all 0.25s ease-in-out;\n}\n.k-slider .k-wrapper .k-handle:hover {\n  -webkit-transform: scale(1.5);\n      -ms-transform: scale(1.5);\n          transform: scale(1.5);\n  cursor: -webkit-grab;\n  cursor: grab;\n  background-color: #0a5eee;\n}\n.k-slider .k-spinner {\n  margin-left: 1rem;\n}\n.k-slider.k-dragging .k-bar {\n  -webkit-transition: none;\n  transition: none;\n}\n.k-slider.k-dragging .k-handle {\n  -webkit-transition: none;\n  transition: none;\n}\n.k-slider.k-dragging .k-handle.k-active {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n  -webkit-transform: scale(1.5);\n      -ms-transform: scale(1.5);\n          transform: scale(1.5);\n  background-color: #0a5eee;\n}\n.k-slider.k-disabled .k-wrapper {\n  cursor: not-allowed;\n}\n.k-slider.k-disabled .k-bar {\n  background-color: #999;\n}\n.k-slider.k-disabled .k-handle {\n  border-color: #999;\n}\n.k-slider.k-disabled .k-handle:hover {\n  background-color: #fff;\n  cursor: not-allowed;\n  -webkit-transform: none;\n      -ms-transform: none;\n          transform: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/spinner/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-spinner {\n  display: inline-block;\n}\n.k-spinner .k-btn:hover {\n  z-index: 1;\n  position: relative;\n}\n.k-spinner .k-left {\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  margin-right: -1px;\n}\n.k-spinner .k-right {\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  margin-left: -1px;\n}\n.k-spinner .k-input {\n  width: 3.285714285714286rem;\n  vertical-align: top;\n}\n.k-spinner .k-inner {\n  text-align: center;\n  padding: 0;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/steps/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-steps {\n  width: 100%;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n.k-steps .k-step {\n  float: left;\n  position: relative;\n  -webkit-box-flex: 1;\n      -ms-flex: 1;\n          flex: 1;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n}\n.k-steps .k-head {\n  float: left;\n  padding-right: 0.714285714285714rem;\n  background: #fff;\n  position: relative;\n}\n.k-steps .k-head .k-inner {\n  width: 1.428571428571429rem;\n  height: 1.428571428571429rem;\n  line-height: calc(1.428571428571429rem - 2px);\n  border-radius: 50%;\n  text-align: center;\n  border: 1px solid #999;\n  color: #999;\n}\n.k-steps .k-head .k-icon:before {\n  font-size: 1.714285714285714rem;\n  line-height: calc(1.428571428571429rem - 2px);\n}\n.k-steps .k-main {\n  float: left;\n  position: relative;\n  color: #999;\n}\n.k-steps .k-title {\n  line-height: 1.428571428571429rem;\n  font-weight: bold;\n  padding-right: 0.714285714285714rem;\n  background: #fff;\n  display: inline-block;\n  white-space: nowrap;\n}\n.k-steps .k-content {\n  font-size: 0.857142857142857rem;\n  margin: 0.357142857142857rem 0 0;\n  white-space: nowrap;\n}\n.k-steps .k-tail {\n  position: absolute;\n  left: 0;\n  right: 0.714285714285714rem;\n  top: 0.714285714285714rem;\n  height: 1px;\n  background: #d9d9d9;\n}\n.k-steps .k-step:last-of-type {\n  -webkit-box-flex: 0;\n      -ms-flex: 0;\n          flex: 0;\n}\n.k-steps .k-step:last-of-type .k-tail {\n  display: none;\n}\n.k-steps .k-step:last-of-type .k-title {\n  padding-right: 0;\n}\n.k-steps .k-done .k-inner {\n  color: #0a5eee;\n  border-color: #0a5eee;\n}\n.k-steps .k-done .k-tail {\n  background: #0a5eee;\n}\n.k-steps .k-active .k-inner {\n  color: #fff;\n  border-color: #0a5eee;\n  background: #0a5eee;\n}\n.k-steps .k-active .k-main {\n  color: #595959;\n}\n.k-steps .k-error .k-inner {\n  color: #db2828;\n  border-color: #db2828;\n  background: #fff;\n}\n.k-steps .k-error .k-main {\n  color: #db2828;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tabs/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-tabs {\n  border-bottom: 1px solid #cad0dd;\n}\n.k-tabs .k-tab {\n  height: 4.214285714285714rem;\n  line-height: calc(4.214285714285714rem - 2px);\n  padding: 0 0.571428571428571rem;\n  margin: 0 0.714285714285714rem;\n  cursor: pointer;\n  display: inline-block;\n  text-align: center;\n  color: #595959;\n  position: relative;\n  vertical-align: middle;\n}\n.k-tabs .k-tab.k-active {\n  color: #0a5eee;\n}\n.k-tabs .k-tab.k-active:after {\n  content: '';\n  display: block;\n  position: absolute;\n  height: 0.142857142857143rem;\n  width: 100%;\n  background: #0a5eee;\n  margin-left: -0.571428571428571rem;\n  bottom: -0.071428571428571rem;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/tooltip/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-tooltip {\n  display: inline-block;\n}\n.k-tooltip-content {\n  position: absolute;\n  background-color: #fff;\n  -webkit-box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n          box-shadow: 0 2px 8px 0 rgba(191,191,191,0.5);\n  padding: 0.357142857142857rem 0.714285714285714rem;\n  border-radius: 0.142857142857143rem;\n  font-size: 0.857142857142857rem;\n  color: #0a5eee;\n  line-height: 1.4;\n  z-index: 9999;\n}\n.k-tooltip-content > .k-arrow:before,\n.k-tooltip-content > .k-arrow {\n  position: absolute;\n  display: block;\n  border-style: solid;\n  border-color: transparent;\n}\n.k-tooltip-content > .k-arrow:before {\n  content: ' ';\n}\n.k-tooltip-content > .k-arrow.k-center {\n  left: 50%;\n  margin-left: -6px;\n}\n.k-tooltip-content > .k-arrow.k-top:before,\n.k-tooltip-content > .k-arrow.k-bottom:before,\n.k-tooltip-content > .k-arrow.k-top,\n.k-tooltip-content > .k-arrow.k-bottom {\n  border-width: 8px 6px;\n}\n.k-tooltip-content > .k-arrow.k-top:before,\n.k-tooltip-content > .k-arrow.k-bottom:before {\n  left: -6px;\n}\n.k-tooltip-content > .k-arrow.k-top {\n  top: -16px;\n  border-bottom-color: rgba(191,191,191,0.2);\n}\n.k-tooltip-content > .k-arrow.k-top:before {\n  border-bottom-color: #fff;\n  top: -7px;\n}\n.k-tooltip-content > .k-arrow.k-bottom {\n  bottom: -16px;\n  border-top-color: rgba(191,191,191,0.2);\n}\n.k-tooltip-content > .k-arrow.k-bottom:before {\n  border-top-color: #fff;\n  bottom: -7px;\n}\n.k-tooltip-content > .k-arrow.k-middle {\n  top: 50%;\n  margin-top: -6px;\n}\n.k-tooltip-content > .k-arrow.k-left:before,\n.k-tooltip-content > .k-arrow.k-right:before,\n.k-tooltip-content > .k-arrow.k-left,\n.k-tooltip-content > .k-arrow.k-right {\n  border-width: 6px 8px;\n}\n.k-tooltip-content > .k-arrow.k-left:before,\n.k-tooltip-content > .k-arrow.k-right:before {\n  top: -6px;\n}\n.k-tooltip-content > .k-arrow.k-left {\n  left: -16px;\n  border-right-color: rgba(191,191,191,0.2);\n}\n.k-tooltip-content > .k-arrow.k-left:before {\n  border-right-color: #fff;\n  left: -7px;\n}\n.k-tooltip-content > .k-arrow.k-right {\n  right: -16px;\n  border-left-color: rgba(191,191,191,0.2);\n}\n.k-tooltip-content > .k-arrow.k-right:before {\n  border-left-color: #fff;\n  right: -7px;\n}\n.k-tooltip-content.k-cannot-hover {\n  pointer-events: none;\n}\n", ""]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/index.js?{\"url\":true}!./node_modules/postcss-loader/lib/index.js?{\"plugins\":[null]}!./node_modules/stylus-loader/index.js?{\"include css\":true,\"sourceMap\":false}!./components/transfer/index.styl":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("./node_modules/css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".k-transfer .k-panel,\n.k-transfer .k-arrows {\n  display: inline-block;\n  vertical-align: middle;\n}\n.k-transfer .k-panel {\n  width: 21.428571428571427rem;\n}\n.k-transfer .k-title {\n  color: #404040;\n  line-height: 2.142857142857143rem;\n  font-size: 1rem;\n}\n.k-transfer .k-list {\n  height: 21.428571428571427rem;\n  border: 1px solid #cad0dd;\n  border-radius: 0.142857142857143rem;\n  overflow: auto;\n}\n.k-transfer .k-item {\n  color: #595959;\n  background: #fff;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}\n.k-transfer .k-item:not(.k-disabled):hover {\n  background: #eee;\n}\n.k-transfer .k-checkbox {\n  padding: 5px 10px;\n  display: block;\n}\n.k-transfer .k-input {\n  margin-bottom: -1px;\n}\n.k-transfer .k-arrows .k-btn {\n  display: block;\n  margin: 10px;\n}\n", ""]);

// exports


/***/ }),

/***/ "./site/components/breadcrumb/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>通过添加<code>to</code>属性，来展示超链接</p>\n","codes":[{"language":"vdt","content":"import {Breadcrumb, BreadcrumbItem} from 'kpc/components/breadcrumb';\n\n<Breadcrumb>\n    <BreadcrumbItem to=\"/\">item 1</BreadcrumbItem>\n    <BreadcrumbItem to=\"/components/breadcrumb/\">item 2</BreadcrumbItem>\n    <BreadcrumbItem>item 3</BreadcrumbItem>\n</Breadcrumb>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":0,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Breadcrumb, BreadcrumbItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/breadcrumb'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Breadcrumb</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BreadcrumbItem</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/\"</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BreadcrumbItem</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BreadcrumbItem</span> <span class=\"hljs-attr\">to</span>=<span class=\"hljs-string\">\"/components/breadcrumb/\"</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BreadcrumbItem</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BreadcrumbItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BreadcrumbItem</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Breadcrumb</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/breadcrumb/demos/separator/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"指定分隔符","order":1},"catalogs":[],"contents":"<p>通过<code>separator</code>属性可以指定分隔符，该属性值会使用<code>innerHTML</code>写入，所以可以使用任意html字符串。</p>\n<blockquote>\n<p>使用<code>innerHTML</code>存在XSS风险，需要自行规避</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import {Breadcrumb, BreadcrumbItem} from 'kpc/components/breadcrumb';\n\n<Breadcrumb separator=\"<b class='separator'>=></b>\">\n    <BreadcrumbItem to=\"/\">\n        <i class=\"ion-home\" /> item 1\n    </BreadcrumbItem>\n    <BreadcrumbItem to=\"/components/breadcrumb/\">\n        <i class=\"ion-earth\" /> item 2\n    </BreadcrumbItem>\n    <BreadcrumbItem>\n        <i class=\"ion-planet\" /> item 3\n    </BreadcrumbItem>\n</Breadcrumb>"},{"language":"styl","content":".separator\n    color #ffa133\ni\n    margin-right 3px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":1,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Breadcrumb, BreadcrumbItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/breadcrumb'</span>;\n\n&lt;Breadcrumb separator=\"&lt;b class='separator'&gt;=&gt;&lt;/b&gt;\"&gt;\n    &lt;BreadcrumbItem to=\"/\"&gt;\n        &lt;i class=\"ion-home\" /&gt; item 1\n    &lt;/BreadcrumbItem&gt;\n    &lt;BreadcrumbItem to=\"/components/breadcrumb/\"&gt;\n        &lt;i class=\"ion-earth\" /&gt; item 2\n    &lt;/BreadcrumbItem&gt;\n    &lt;BreadcrumbItem&gt;\n        &lt;i class=\"ion-planet\" /&gt; item 3\n    &lt;/BreadcrumbItem&gt;\n&lt;/Breadcrumb&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.separator</span>\n    <span class=\"hljs-attribute\">color</span> <span class=\"hljs-number\">#ffa133</span>\n<span class=\"hljs-selector-tag\">i</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">3px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"按钮类型","order":0},"catalogs":[],"contents":"<p>有如下几种类型：默认按钮，主按钮，警告按钮，危险按钮，文字按钮。</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button>default</Button>\n    <Button type=\"primary\">primay</Button>\n    <Button type=\"warning\">warning</Button>\n    <Button type=\"danger\">danger</Button>\n    <Button type=\"none\">none</Button>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"},{"language":"vue","content":"<template>\n    <div>\n        <Button>default</Button>\n        <Button type=\"primary\">primay</Button>\n        <Button type=\"warning\">warning</Button>\n        <Button type=\"danger\">danger</Button>\n        <Button type=\"none\">none</Button>\n    </div>\n</template>\n<style src=\"./index.styl\" lang=\"stylus\"></style>\n<script>\nimport Button from 'kpc/components/button';\n\nexport default {\n    components: {\n        Button\n    }\n}\n</script>"}],"index":3,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>default<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>primay<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"warning\"</span>&gt;</span>warning<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"danger\"</span>&gt;</span>danger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"none\"</span>&gt;</span>none<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"},{"language":"vue","content":"<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>default<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>primay<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"warning\"</span>&gt;</span>warning<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"danger\"</span>&gt;</span>danger<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"none\"</span>&gt;</span>none<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Button\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/disabled/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"禁用状态","order":5},"catalogs":[],"contents":"<p>添加<code>disabled</code>属性，可以禁用按钮</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button disabled>disabled</Button>\n    <Button disabled type=\"none\">disabled text</Button>\n    <Button disabled icon circle><i class=\"k-icon ion-ios-search\"></i></Button>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":4,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>disabled<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">disabled</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"none\"</span>&gt;</span>disabled text<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">disabled</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/group/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"按钮组","order":1},"catalogs":[],"contents":"<p>将<code>Button</code>作为<code>ButtonGroup</code>的子元素，可以展示按钮组。给<code>ButtonGroup</code>添加<code>vertical</code>属性，可以是按钮组纵向排列。给<code>ButtonGroup</code>添加<code>checkType</code>属性，可以使按钮组拥有单选或复选能力。</p>\n","codes":[{"language":"vdt","content":"import {Button, ButtonGroup} from 'kpc/components/button';\n\n<div>\n    <ButtonGroup>\n        <Button>开机</Button>\n        <Button>关机</Button>\n        <Button>重启</Button>\n    </ButtonGroup>\n    <ButtonGroup>\n        <Button type=\"primary\" size=\"small\">开机</Button>\n        <Button type=\"primary\" size=\"small\">关机</Button>\n        <Button type=\"primary\" size=\"small\">重启</Button>\n    </ButtonGroup>\n    <ButtonGroup>\n        <Button type=\"primary\" size=\"small\">\n            <i class=\"k-icon ion-ios-arrow-left\"></i>上一页\n        </Button>\n        <Button type=\"primary\" size=\"small\">\n            下一页<i class=\"k-icon ion-ios-arrow-right\"></i>\n        </Button>\n    </ButtonGroup>\n    <br /><br />\n    <p>纵向按钮组</p>\n    <ButtonGroup vertical>\n        <Button type=\"primary\" size=\"small\">开机</Button>\n        <Button type=\"primary\" size=\"small\">关机</Button>\n        <Button type=\"primary\" size=\"small\">重启</Button>\n    </ButtonGroup>\n    <br /><br />\n    <p>radio按钮组</p>\n    <ButtonGroup checkType=\"radio\" v-model=\"city\">\n        <Button value=\"beijing\" type=\"small\">北京</Button>\n        <Button value=\"shanghai\" type=\"small\">上海</Button>\n        <Button value=\"guangzhou\" type=\"small\">广州</Button>\n        <Button value=\"shenzhen\" type=\"small\">深圳</Button>\n    </ButtonGroup>\n    <p>checkbox按钮组</p>\n    <ButtonGroup checkType=\"checkbox\" v-model=\"cities\">\n        <Button value=\"beijing\" type=\"small\">北京</Button>\n        <Button value=\"shanghai\" type=\"small\">上海</Button>\n        <Button value=\"guangzhou\" type=\"small\">广州</Button>\n        <Button value=\"shenzhen\" type=\"small\">深圳</Button>\n    </ButtonGroup>\n</div>"},{"language":"styl","content":".k-btns\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            city: 'beijing'\n        };\n    }\n}"},{"language":"vue","content":"<template>\n    <div>\n        <ButtonGroup>\n            <Button>开机</Button>\n            <Button>关机</Button>\n            <Button>重启</Button>\n        </ButtonGroup>\n        <ButtonGroup>\n            <Button type=\"primary\" size=\"small\">开机</Button>\n            <Button type=\"primary\" size=\"small\">关机</Button>\n            <Button type=\"primary\" size=\"small\">重启</Button>\n        </ButtonGroup>\n        <ButtonGroup vertical>\n            <Button type=\"primary\" size=\"small\">开机</Button>\n            <Button type=\"primary\" size=\"small\">关机</Button>\n            <Button type=\"primary\" size=\"small\">重启</Button>\n        </ButtonGroup>\n    </div>\n</template>\n<style src=\"./index.styl\" lang=\"stylus\"></style>\n<script>\nimport {Button, ButtonGroup} from 'kpc/components/button';\n\nexport default {\n    components: {\n        Button, ButtonGroup\n    }\n}\n</script>"}],"index":5,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-arrow-left\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>上一页\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>\n            下一页<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>纵向按钮组<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">vertical</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>radio按钮组<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"radio\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"city\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"beijing\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>北京<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"shanghai\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>上海<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"guangzhou\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>广州<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"shenzhen\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>深圳<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>checkbox按钮组<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">checkType</span>=<span class=\"hljs-string\">\"checkbox\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"cities\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"beijing\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>北京<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"shanghai\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>上海<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"guangzhou\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>广州<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"shenzhen\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>深圳<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btns</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">city</span>: <span class=\"hljs-string\">'beijing'</span>\n        };\n    }\n}</code></pre>"},{"language":"vue","content":"<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span> <span class=\"hljs-attr\">vertical</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>开机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>关机<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>重启<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"./index.styl\"</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">\"stylus\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\">\n<span class=\"hljs-keyword\">import</span> {Button, ButtonGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n    <span class=\"hljs-attr\">components</span>: {\n        Button, ButtonGroup\n    }\n}\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/icon/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"图标按钮","order":1},"catalogs":[],"contents":"<p>给<code>Button</code>添加<code>icon</code>属性，可以展示图标按钮。图标按钮仅仅是使按钮的宽高相等，此时你可以将任意图标元素作为它的子元素。<code>circle</code>属性可以展示圆形图标。如果你不需要宽高相等的图标按钮，而仅仅是带图标的文字按钮，去掉<code>icon</code>属性即可。</p>\n<blockquote>\n<p>请给图标元素添加<code>k-icon</code>类名，用于定位图标元素，以便按钮变为<code>loading</code>状态时能够将它替换为loading图标</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button icon><i class=\"ion-ios-search\"></i></Button>\n    <Button icon circle><i class=\"ion-ios-search\"></i></Button>\n    <Button type=\"primary\"><i class=\"k-icon ion-ios-search\"></i>搜索</Button>\n    <Button circle type='primary'><i class=\"k-icon ion-ios-search\"></i>搜索</Button>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":6,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>搜索<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">'primary'</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>搜索<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/loading/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"加载状态按钮","order":2},"catalogs":[],"contents":"<p>添加<code>loading</code>属性，可以将按钮设为加载状态，此时按钮不可点。</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button type=\"primary\" loading>确认</Button>\n    <Button icon circle loading><i class=\"k-icon ion-ios-search\"></i></Button>\n    <br /> <br />\n    <Button type=\"primary\" \n        loading={{ self.get('loading1') }}\n        ev-click={{ self.onClick.bind(self, 'loading1') }}\n    >点击加载</Button>\n    <Button type=\"primary\" \n        loading={{ self.get('loading2') }}\n        ev-click={{ self.onClick.bind(self, 'loading2') }}\n    ><i class=\"k-icon ion-ios-search\"></i>点击加载</Button>\n    <Button icon circle\n        loading={{ self.get('loading3') }}\n        ev-click={{ self.onClick.bind(self, 'loading3') }}\n    ><i class=\"k-icon ion-ios-search\"></i></Button>\n    <Button type=\"primary\" \n        loading={{ self.get('loading4') }}\n        ev-click={{ self.onClick.bind(self, 'loading4') }}\n    >图标在右侧<i class=\"k-icon ion-ios-search\"></i></Button>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    onClick(name) {\n        this.set(name, true);\n    }\n}"}],"index":7,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">loading</span>&gt;</span>确认<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">loading</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> \n        <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">loading1</span>') }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onClick.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">loading1</span>') }}\n    &gt;</span>点击加载<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> \n        <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">loading2</span>') }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onClick.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">loading2</span>') }}\n    &gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>点击加载<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span>\n        <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">loading3</span>') }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onClick.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">loading3</span>') }}\n    &gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> \n        <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">loading4</span>') }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onClick.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">loading4</span>') }}\n    &gt;</span>图标在右侧<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    onClick(name) {\n        <span class=\"hljs-keyword\">this</span>.set(name, <span class=\"hljs-literal\">true</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"按钮尺寸","order":4},"catalogs":[],"contents":"<p>通过<code>size</code>属性可以指定按钮的尺寸：<code>default</code>,<code>small</code>, <code>mini</code>。</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button>default</Button>\n    <Button type=\"small\">small</Button>\n    <Button type=\"mini\">mini</Button>\n    <br /><br />\n    <Button icon circle><i class=\"k-icon ion-ios-search\"></i></Button>\n    <Button icon circle size=\"small\"><i class=\"k-icon ion-ios-search\"></i></Button>\n    <Button icon circle size=\"mini\"><i class=\"k-icon ion-ios-search\"></i></Button>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":8,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span>&gt;</span>default<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>small<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"mini\"</span>&gt;</span>mini<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">circle</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"mini\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-ios-search\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/button/demos/tagName/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"指定按钮tagName","order":5},"catalogs":[],"contents":"<p><code>Button</code>默认渲染成<code>button</code>元素，通过<code>tagName</code>，我们可以渲染成任意元素或组件。此时，我们可以通过<code>tagProps</code>属性，给指定的<code>tagName</code>传递与<code>Button</code>属性名相冲突的属性。</p>\n<blockquote>\n<p>当给<code>Button</code>指定<code>href</code>属性时，则它会强制渲染成<code>a</code>标签</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<div>\n    <Button tagName=\"div\" type=\"primary\">div元素按钮</Button>\n    <Button href=\"https://www.ksyun.com\" \n        style=\"margin-left: 20px;\"\n        target=\"_blank\"\n    >超链接按钮</Button>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":9,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">tagName</span>=<span class=\"hljs-string\">\"div\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>div元素按钮<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"https://www.ksyun.com\"</span> \n        <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-left: 20px;\"</span>\n        <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">\"_blank\"</span>\n    &gt;</span>超链接按钮<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/checkbox/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p><code>Checkbox</code>的基本用法，及禁用状态。由于<code>trueValue</code>的默认值为<code>true</code>，所以可以直接传入<code>value=true</code>来指定选中状态。</p>\n<blockquote>\n<p>选中状态的判定条件是<code>value === trueValue || value.indexOf(trueValue)</code>，对于值为对象的情况要注意。</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Checkbox from 'kpc/components/checkbox';\n\n<div>\n    <Checkbox>checkbox</Checkbox>\n    <Checkbox disabled>disabled checkbox</Checkbox>\n    <Checkbox value={{ true }} disabled>disabled checked checkbox</Checkbox>\n</div>"},{"language":"styl","content":".k-checkbox\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":11,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Checkbox <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/checkbox'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span>&gt;</span>checkbox<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>disabled checkbox<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">true</span> }} <span class=\"hljs-attr\">disabled</span>&gt;</span>disabled checked checkbox<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-checkbox</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/checkbox/demos/group/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"Checkbox组","order":1},"catalogs":[],"contents":"<p>和浏览器原生行为一样，给<code>Checkbox</code>指定相同的<code>name</code>，它们便组成了复选框组。</p>\n<blockquote>\n<p>此时必须初始化绑定的属性为数组，否则<code>Checkbox</code>将类似<code>radio</code>一样只能单选</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Checkbox from 'kpc/components/checkbox';\n\n<div>\n    <Checkbox name=\"languages\" trueValue=\"Javascript\" v-model=\"languages\">Javascript</Checkbox>\n    <Checkbox name=\"languages\" trueValue=\"C++\" v-model=\"languages\">C++</Checkbox>\n    <Checkbox name=\"languages\" trueValue=\"PHP\" v-model=\"languages\">PHP</Checkbox>\n    Your selected: {{ JSON.stringify(self.get('languages')) }}\n</div>"},{"language":"styl","content":".k-checkbox\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            // 必须初始化为数组\n            languages: []\n        };\n    }\n}"}],"index":12,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Checkbox <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/checkbox'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"languages\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"Javascript\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"languages\"</span>&gt;</span>Javascript<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"languages\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"C++\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"languages\"</span>&gt;</span>C++<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"languages\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"PHP\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"languages\"</span>&gt;</span>PHP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    Your selected: {{ JSON.stringify(self.get('languages')) }}\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-checkbox</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-comment\">// 必须初始化为数组</span>\n            languages: []\n        };\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/checkbox/demos/value/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"指定选中和非选中的取值","order":1},"catalogs":[],"contents":"<p><code>Checkbox</code>默认选中的值为<code>true</code>，非选中的值为<code>false</code>，通过<code>trueValue</code>和<code>falseValue</code>属性，我们可以指定选中和非选中的值。</p>\n<blockquote>\n<p>当指定值为对象时，不要在模板中直接定义对象字面量（如：trueValue={{ {a: 1} }}），因为在模板中创建的对象每次执行模板都会生成一份新数据，使全等判断(<code>===</code>)失效。此时应该在js中定义该对象，然后模板中引用它。</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Checkbox from 'kpc/components/checkbox';\n\n<div>\n    <Checkbox v-model=\"value1\">默认值: {{ JSON.stringify(self.get('value1')) }}</Checkbox>\n    <Checkbox v-model=\"value2\" trueValue=\"checked\">\n        指定选中时取值为\"checked\": {{ JSON.stringify(self.get('value2')) }}\n    </Checkbox>\n    <Checkbox v-model=\"value3\" trueValue={{ 0 }} falseValue={{ self.get(\"uncheckedValue\") }}>\n        指定非选中时取值为对象：{{ JSON.stringify(self.get('value3')) }}\n    </Checkbox>\n</div>"},{"language":"styl","content":".k-checkbox\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            uncheckedValue: {\n                unchecked: true\n            }\n        };\n    }\n}"}],"index":13,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Checkbox <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/checkbox'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value1\"</span>&gt;</span>默认值: {{ JSON.stringify(self.get('value1')) }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value2\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"checked\"</span>&gt;</span>\n        指定选中时取值为\"checked\": {{ JSON.stringify(self.get('value2')) }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Checkbox</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value3\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">0</span> }} <span class=\"hljs-attr\">falseValue</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>(\"<span class=\"hljs-attr\">uncheckedValue</span>\") }}&gt;</span>\n        指定非选中时取值为对象：{{ JSON.stringify(self.get('value3')) }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Checkbox</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-checkbox</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">uncheckedValue</span>: {\n                <span class=\"hljs-attr\">unchecked</span>: <span class=\"hljs-literal\">true</span>\n            }\n        };\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>基本用法和禁用状态</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<div>\n    <Datepicker v-model=\"date\" />\n    <Datepicker disabled value=\"2018-01-01\"/>\n</div>"},{"language":"styl","content":".k-datepicker\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":15,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n&lt;div&gt;\n    &lt;Datepicker v-model=\"date\" /&gt;\n    &lt;Datepicker disabled value=\"2018-01-01\"/&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-datepicker</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/clearable/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"可清空","order":1},"catalogs":[],"contents":"<p>添加<code>clearable</code>属性，可以清空当前日期。</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<Datepicker clearable v-model=\"date\" />"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":16,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Datepicker</span> <span class=\"hljs-attr\">clearable</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"date\"</span> /&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/datetime/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"选择时间","order":5},"catalogs":[],"contents":"<p>将<code>type</code>属性指定为<code>datetime</code>，即可让日期支持选择时间。通过<code>disabledHours &amp; disabledMinutes &amp; disabledSeconds</code>可以禁用时分秒的选择。</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<div>\n    <Datepicker type=\"datetime\" v-model=\"datetime1\" />\n    <Datepicker type=\"datetime\" v-model=\"datetime2\" \n        placeholder=\"时间精确到小时\"\n        disabledMinutes\n        disabledSeconds\n    />\n</div>"},{"language":"styl","content":".k-datepicker\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":17,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n&lt;div&gt;\n    &lt;Datepicker type=\"datetime\" v-model=\"datetime1\" /&gt;\n    &lt;Datepicker type=\"datetime\" v-model=\"datetime2\" \n        placeholder=\"时间精确到小时\"\n        disabledMinutes\n        disabledSeconds\n    /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-datepicker</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/disabledDate/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"禁用指定日期","order":3},"catalogs":[],"contents":"<p>通过<code>disabledDate</code>属性，可以定义个方法，来指定哪些日期被禁止选择。组件会将一个日期字符串作为方法的参数，如果方法返回“真”则禁用掉该日期，否则不禁用。</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<Datepicker disabledDate={{ (date) => {\n    // 禁用掉2018-02-05和2018-03-05\n    return ~['2018-02-05', '2018-03-05'].indexOf(date);\n} }} />"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":18,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Datepicker</span> <span class=\"hljs-attr\">disabledDate</span>=<span class=\"hljs-string\">{{</span> (<span class=\"hljs-attr\">date</span>) =&gt;</span> {\n    // 禁用掉2018-02-05和2018-03-05\n    return ~['2018-02-05', '2018-03-05'].indexOf(date);\n} }} /&gt;</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/maxMin/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"最大和最小日期","order":2},"catalogs":[],"contents":"<p>通过<code>maxDate</code>和<code>minDate</code>可以给组件指定最大和最小选择日期。</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<div>\n    <Datepicker v-model=\"from\" placeholder=\"开始日期\"\n        maxDate={{ self.get('to') }}\n        minDate={{ new Date() }}\n    />\n    <Datepicker v-model=\"to\" placeholder=\"结束日期\"\n        minDate={{ self.get('from') }}\n    />\n</div>"},{"language":"styl","content":".k-datepicker\n    margin-right 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":19,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n&lt;div&gt;\n    &lt;Datepicker v-model=\"from\" placeholder=\"开始日期\"\n        maxDate={{ self.get('to') }}\n        minDate={{ new Date() }}\n    /&gt;\n    &lt;Datepicker v-model=\"to\" placeholder=\"结束日期\"\n        minDate={{ self.get('from') }}\n    /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-datepicker</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/datepicker/demos/multiple/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"日期多选","order":4},"catalogs":[],"contents":"<p>添加<code>multiple</code>属性，即可支持日期多选。</p>\n","codes":[{"language":"vdt","content":"import Datepicker from 'kpc/components/datepicker';\n\n<div>\n    <Datepicker multiple v-model=\"date\" />\n    You selected: {{ JSON.stringify(self.get('date')) }}\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":20,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Datepicker <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/datepicker'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Datepicker</span> <span class=\"hljs-attr\">multiple</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"date\"</span> /&gt;</span>\n    You selected: {{ JSON.stringify(self.get('date')) }}\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dialog/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>定义一个弹窗，然后通过<code>v-model</code>建立绑定，当该绑定的值为<code>true</code>时，展示弹窗。</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\nimport Dialog from 'kpc/components/dialog';\n\n<div>\n    <Button ev-click={{ self.set.bind(self, 'show', true) }}\n        type=\"primary\"\n    >Show Dialog</Button>\n    <Dialog v-model=\"show\" title=\"Dialog Title\">\n        Dialog Body \n    </Dialog>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":22,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.set.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">show</span>', <span class=\"hljs-attr\">true</span>) }}\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n    &gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Dialog Title\"</span>&gt;</span>\n        Dialog Body \n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dialog/demos/block/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义头部和底部","order":2},"catalogs":[],"contents":"<p>组件提供了<code>header</code>和<code>footer</code>扩展点（block），通过它们可以自定义头部和底部。</p>\n<blockquote>\n<p>可以通过<code>parent()</code>引用到组件定义的默认内容</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\nimport Dialog from 'kpc/components/dialog';\n\n<div>\n    <Button ev-click={{ self.set.bind(self, 'show', true) }}\n        type=\"primary\"\n    >Show Dialog</Button>\n    <Dialog v-model=\"show\">\n        <b:header>\n            <div class=\"k-title\">\n                <i class=\"ion-person\"></i>\n                Custom Header\n            </div>\n        </b:header>\n\n        Dialog Body \n\n        <b:footer>\n            Custom Footer\n            {{ parent() }}\n        </b:footer>\n    </Dialog>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":23,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n&lt;div&gt;\n    &lt;Button ev-click={{ self.set.bind(self, 'show', true) }}\n        type=\"primary\"\n    &gt;Show Dialog&lt;/Button&gt;\n    &lt;Dialog v-model=\"show\"&gt;\n        &lt;b:header&gt;\n            &lt;div class=\"k-title\"&gt;\n                &lt;i class=\"ion-person\"&gt;&lt;/i&gt;\n                Custom Header\n            &lt;/div&gt;\n        &lt;/b:header&gt;\n\n        Dialog Body \n\n        &lt;b:footer&gt;\n            Custom Footer\n            {{ parent() }}\n        &lt;/b:footer&gt;\n    &lt;/Dialog&gt;\n&lt;/div&gt;</code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dialog/demos/events/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"事件回调","order":0},"catalogs":[],"contents":"<p>弹窗点击“确认”和“取消”时，分别会派发出<code>ok</code>和<code>cancel</code>事件，通过它们可以执行相应的回调逻辑。</p>\n","codes":[{"language":"vdt","content":"import Button from 'kpc/components/button';\nimport Dialog from 'kpc/components/dialog';\n\n<div>\n    <Button ev-click={{ self.set.bind(self, 'show', true) }}\n        type=\"primary\"\n    >Show Dialog</Button>\n    <Dialog v-model=\"show\" title=\"Dialog Title\"\n        ev-ok={{ self.onOk }}\n        ev-cancel={{ self.onCancel }}\n    >Dialog Body</Dialog>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    onOk() {\n        Message.success('You clicked ok button.');\n    }\n\n    onCancel() {\n        Message.error('You clicked cancel button.');\n    }\n}"}],"index":24,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.set.bind</span>(<span class=\"hljs-attr\">self</span>, '<span class=\"hljs-attr\">show</span>', <span class=\"hljs-attr\">true</span>) }}\n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>\n    &gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dialog</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Dialog Title\"</span>\n        <span class=\"hljs-attr\">ev-ok</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onOk</span> }}\n        <span class=\"hljs-attr\">ev-cancel</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.onCancel</span> }}\n    &gt;</span>Dialog Body<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dialog</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    onOk() {\n        Message.success(<span class=\"hljs-string\">'You clicked ok button.'</span>);\n    }\n\n    onCancel() {\n        Message.error(<span class=\"hljs-string\">'You clicked cancel button.'</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dialog/demos/extends/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"继承弹窗","order":3},"catalogs":[],"contents":"<p>在实际应用中，弹窗的逻辑一般都很复杂，通过继承，我们可以控制弹窗的各个细节，例如：点击确定时进行表单验证，发送请求，延迟关闭等等。将这些业务逻辑封装在单独的模块中，是推荐的做法。</p>\n","codes":[{"language":"vdt","content":"<t:parent>\n    <b:body>\n        Hello\n    </b:body>\n</t:parent>","file":"dialog.vdt"},{"language":"js","content":"import Dialog from 'kpc/components/dialog';\nimport template from './dialog.vdt';\n\nexport default class extends Dialog {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {...super.defaults(), title: 'Extends Dialog'};\n    }\n\n    ok() {\n        this.showLoading();\n        setTimeout(() => {\n            this.close();\n            this.trigger(\"ok\", 'test');\n        }, 2000);\n    }\n}","file":"dialog.js"},{"language":"vdt","content":"import Button from 'kpc/components/button';\n\n<Button type=\"primary\" ev-click={{ self.showDialog }}>Show Dialog</Button>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Dialog from './dialog';\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    showDialog() {\n        const dialog = new Dialog();\n        dialog.show();\n        dialog.on('ok', (data) => {\n            Message.info(`data from dialog: ${data}`);\n        });\n    }\n}"}],"index":25,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\">&lt;t:parent&gt;\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">b:body</span>&gt;</span>\n        Hello\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">b:body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">t:parent</span>&gt;</span></span></code></pre>","file":"dialog.vdt"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dialog'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./dialog.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Dialog</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {...super.defaults(), <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'Extends Dialog'</span>};\n    }\n\n    ok() {\n        <span class=\"hljs-keyword\">this</span>.showLoading();\n        setTimeout(<span class=\"hljs-function\"><span class=\"hljs-params\">()</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">this</span>.close();\n            <span class=\"hljs-keyword\">this</span>.trigger(<span class=\"hljs-string\">\"ok\"</span>, <span class=\"hljs-string\">'test'</span>);\n        }, <span class=\"hljs-number\">2000</span>);\n    }\n}</code></pre>","file":"dialog.js"},{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showDialog</span> }}&gt;</span>Show Dialog<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Dialog <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./dialog'</span>;\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showDialog() {\n        <span class=\"hljs-keyword\">const</span> dialog = <span class=\"hljs-keyword\">new</span> Dialog();\n        dialog.show();\n        dialog.on(<span class=\"hljs-string\">'ok'</span>, (data) =&gt; {\n            Message.info(<span class=\"hljs-string\">`data from dialog: <span class=\"hljs-subst\">${data}</span>`</span>);\n        });\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dropdown/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>一个完整的菜单需要用到<code>Dropdown</code>，<code>DropdownMenu</code>和<code>DropdownItem</code>三个组件。<code>Dropdown</code>会将第一个子元素作为触发器，第二个元素为菜单<code>DropdownMenu</code>。</p>\n<blockquote>\n<p><code>Dropdown</code>会返回两个元素（触发器和菜单），而不是将它们包裹起来，作为一个元素返回所以不要将它作为模板的顶级元素，例如本例中，用<code>&lt;div&gt;</code>将之包裹起来才能作为模板元素返回。</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import {Dropdown, DropdownMenu, DropdownItem} from 'kpc/components/dropdown';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Dropdown>\n        <Button type=\"primary\">\n            hover <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":27,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Dropdown, DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            hover <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dropdown/demos/disabled/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"禁用菜单（项）","order":3},"catalogs":[],"contents":"<p>通过给<code>Dropdown</code>和<code>DropdownItem</code>添加<code>disabled</code>属性，可以分别禁用菜单和菜单项。</p>\n","codes":[{"language":"vdt","content":"import {Dropdown, DropdownMenu, DropdownItem} from 'kpc/components/dropdown';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Dropdown disabled>\n        <Button type=\"primary\">\n            disabled <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n\n    <Dropdown>\n        <Button type=\"primary\">\n            disabled item<i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem disabled>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":28,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Dropdown, DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            disabled <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            disabled item<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dropdown/demos/nested/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"嵌套菜单","order":4},"catalogs":[],"contents":"<p><code>Dropdown</code>可以嵌套使用，实现级联菜单。子菜单需要指定展示的位置<code>position</code>。我们还可以通过<code>trigger</code>单独子菜单触发方式。</p>\n","codes":[{"language":"vdt","content":"import {Dropdown, DropdownMenu, DropdownItem} from 'kpc/components/dropdown';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Dropdown>\n        <Button type=\"primary\">\n            hover <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n            <Dropdown position={{ {my: 'left top', at: 'right top'} }}>\n                <DropdownItem>\n                    <span class=\"c-middle\" style=\"margin-right: 10px\">hover</span>\n                    <i class=\"c-middle ion-ios-arrow-right\"></i>\n                </DropdownItem>\n                <DropdownMenu>\n                    <Dropdown position={{ {my: 'left top', at: 'right top'} }}>\n                        <DropdownItem>\n                            <span class=\"c-middle\" style=\"margin-right: 10px\">hover</span>\n                            <i class=\"c-middle ion-ios-arrow-right\"></i>\n                        </DropdownItem>\n                        <DropdownMenu>\n                            <DropdownItem>item 1</DropdownItem>\n                            <DropdownItem>item 2</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                    <DropdownItem>item 1</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n            <Dropdown trigger=\"click\" position={{ {my: 'left top', at: 'right top'} }}>\n                <DropdownItem>\n                    <span class=\"c-middle\" style=\"margin-right: 10px\">click</span>\n                    <i class=\"c-middle ion-ios-arrow-right\"></i>\n                </DropdownItem>\n                <DropdownMenu>\n                    <Dropdown trigger=\"click\" position={{ {my: 'left top', at: 'right top'} }}>\n                        <DropdownItem>\n                            <span class=\"c-middle\" style=\"margin-right: 10px\">click</span>\n                            <i class=\"c-middle ion-ios-arrow-right\"></i>\n                        </DropdownItem>\n                        <DropdownMenu>\n                            <DropdownItem>item 1</DropdownItem>\n                            <DropdownItem>item 2</DropdownItem>\n                        </DropdownMenu>\n                    </Dropdown>\n                    <DropdownItem>item 1</DropdownItem>\n                </DropdownMenu>\n            </Dropdown>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n</div>"},{"language":"styl","content":".ion-ios-arrow-right\n    float right\n    &:before\n        font-size inherit"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":29,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Dropdown, DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            hover <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">top</span>'} }}&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>hover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle ion-ios-arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">top</span>'} }}&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>hover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle ion-ios-arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">top</span>'} }}&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>click<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle ion-ios-arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">top</span>'} }}&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>click<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"c-middle ion-ios-arrow-right\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.ion-ios-arrow-right</span>\n    <span class=\"hljs-attribute\">float</span> right\n    &amp;:before\n        <span class=\"hljs-attribute\">font-size</span> inherit</code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dropdown/demos/position/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"菜单位置","order":2},"catalogs":[],"contents":"<p>通过<code>position</code>属性，可以定义菜单相对触发器的位置。位置对象中<code>my</code>指菜单，<code>at</code>指触发器</p>\n","codes":[{"language":"vdt","content":"import {Dropdown, DropdownMenu, DropdownItem} from 'kpc/components/dropdown';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Dropdown position={{ {my: 'left top', at: 'left bottom+5'} }}>\n        <Button type=\"primary\">\n            left <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n\n    <Dropdown position={{ {my: 'right top', at: 'right bottom+5'} }}>\n        <Button type=\"primary\">\n            right <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n\n    <Dropdown position={{ {my: 'center bottom-5', at: 'center top'} }}>\n        <Button type=\"primary\">\n            top center <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":30,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Dropdown, DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">left</span> <span class=\"hljs-attr\">bottom</span>+<span class=\"hljs-attr\">5</span>'} }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            left <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">top</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">right</span> <span class=\"hljs-attr\">bottom</span>+<span class=\"hljs-attr\">5</span>'} }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            right <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">position</span>=<span class=\"hljs-string\">{{</span> {<span class=\"hljs-attr\">my:</span> '<span class=\"hljs-attr\">center</span> <span class=\"hljs-attr\">bottom-5</span>', <span class=\"hljs-attr\">at:</span> '<span class=\"hljs-attr\">center</span> <span class=\"hljs-attr\">top</span>'} }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            top center <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/dropdown/demos/trigger/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"触发方式","order":0},"catalogs":[],"contents":"<p><code>Dropdown</code>提供了两种触发方式来弹窗菜单，<code>hover</code>悬停触发（默认），<code>click</code>点击触发。通过<code>trigger</code>属性来指定它们。</p>\n","codes":[{"language":"vdt","content":"import {Dropdown, DropdownMenu, DropdownItem} from 'kpc/components/dropdown';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Dropdown>\n        <Button type=\"primary\">\n            hover <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n\n    <Dropdown trigger=\"click\">\n        <Button type=\"primary\">\n            click <i class=\"k-icon ion-arrow-down-b\"></i>\n        </Button>\n        <DropdownMenu>\n            <DropdownItem>item 1</DropdownItem>\n            <DropdownItem>item 2</DropdownItem>\n            <DropdownItem>item 3</DropdownItem>\n        </DropdownMenu>\n    </Dropdown>\n</div>"},{"language":"styl","content":".k-btn\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":31,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Dropdown, DropdownMenu, DropdownItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/dropdown'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            hover <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Dropdown</span> <span class=\"hljs-attr\">trigger</span>=<span class=\"hljs-string\">\"click\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span>&gt;</span>\n            click <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"k-icon ion-arrow-down-b\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">DropdownItem</span>&gt;</span>item 3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownItem</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">DropdownMenu</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Dropdown</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/editable/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>使用<code>v-model</code>建立需要编辑的文本的双向数据绑定；使用<code>disabled</code>可以禁用文本编辑</p>\n","codes":[{"language":"vdt","content":"import Editable from 'kpc/components/editable';\n\n<div>\n    <Editable v-model=\"text\" ref=\"a\">\n        <i class=\"ion-ios-location\"></i>\n        <a href=\"\">{{ self.get('text') }}</a>\n    </Editable>\n    <br />\n    <Editable value=\"disabled editable text\" disabled>\n        <i class=\"ion-ios-location\"></i>\n        <a href=\"\">disabled editable text</a>\n    </Editable>\n</div>"},{"language":"styl","content":".ion-ios-location\n    margin-right 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        window.__aaa = this;\n        return {\n            text: 'editable text'\n        }\n    }\n}"}],"index":33,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Editable <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/editable'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Editable</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"text\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">\"a\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-ios-location\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>{{ self.get('text') }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Editable</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Editable</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"disabled editable text\"</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">\"ion-ios-location\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"\"</span>&gt;</span>disabled editable text<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Editable</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.ion-ios-location</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-built_in\">window</span>.__aaa = <span class=\"hljs-keyword\">this</span>;\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">'editable text'</span>\n        }\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/editable/demos/validate/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"验证输入","order":1},"catalogs":[],"contents":"<p>使用<code>validate</code>属性，指定输入验证规则，改值可以是函数/正则/正则字符串。验证失败，输入框会添加className: <code>k-invalid</code>，用以改变样式。我们还可以绑定<code>error</code>事件弹出更多错误提示。</p>\n","codes":[{"language":"vdt","content":"import Editable from 'kpc/components/editable';\n\n<div>\n    <Editable v-model=\"value\" validate={{ value => /\\d+/.test(value) }}>{{ self.get('value') }}</Editable>\n    <br />\n    <Editable v-model=\"value\" validate={{ /\\d+/ }}>{{ self.get('value') }}</Editable>\n    <br />\n    <Editable v-model=\"value\" validate=\"\\d+\"\n        ev-error={{ self._showErrorTip }}\n    >{{ self.get('value') }}</Editable>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {value: 100};\n    }\n\n    _showErrorTip(c, value) {\n        Message.error('Please enter digits.');\n    }\n}"}],"index":34,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Editable <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/editable'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Editable</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">validate</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value</span> =&gt;</span> /\\d+/.test(value) }}&gt;{{ self.get('value') }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Editable</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Editable</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">validate</span>=<span class=\"hljs-string\">{{</span> /\\<span class=\"hljs-attr\">d</span>+/ }}&gt;</span>{{ self.get('value') }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Editable</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Editable</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">validate</span>=<span class=\"hljs-string\">\"\\d+\"</span>\n        <span class=\"hljs-attr\">ev-error</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._showErrorTip</span> }}\n    &gt;</span>{{ self.get('value') }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Editable</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">100</span>};\n    }\n\n    _showErrorTip(c, value) {\n        Message.error(<span class=\"hljs-string\">'Please enter digits.'</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/form/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>表单需要<code>Form</code>嵌套<code>FormItem</code>进行使用，<code>FormItem</code>中可以包含任意组件或原生元素。同时我们可以指定<code>FormItem</code>的表单验证规则：</p>\n<ol>\n<li>给<code>FormItem</code>添加<code>model</code>属性，指定需要验证的字段名。如果不指定，则不会进行任何验证</li>\n<li>给<code>FormItem</code>添加<code>rules</code>属性，指定需要验证的规则。如果不指定，则不会进行任何验证。内置的验证规则如下：<ol>\n<li><code>required {Boolean}</code>：必须填写</li>\n<li><code>digits {Boolean}</code>： 请输入数字</li>\n<li><code>email {Boolean}</code>: 请输入正确的邮箱地址</li>\n<li><code>url {Boolean}</code>: 请输入正确的网址</li>\n<li><code>date {Boolean}</code>：请输入正确的日期</li>\n<li><code>dateISO {Boolean}</code>：请输入正确的日期（YYYY-MM-DD）</li>\n<li><code>number {Boolean}</code>：请输入正确的数</li>\n<li><code>maxLength {Number}</code>：如果检验的值是数组：最多选择n项；如果检验的值是字符串：最多输入n个字符</li>\n<li><code>minLength {Number}</code>：同上（检验最少长度）</li>\n<li><code>rangeLength {Array&lt;Number&gt;}</code>：同上，检验长度的范围</li>\n<li><code>max {Number}</code>：请输入不大于n的数</li>\n<li><code>min {Number}</code>：请输入不小于n的数</li>\n<li><code>range {Array&lt;Number&gt;}</code>：请输入min到max之间的数</li>\n<li><code>step {Number}</code>：请输入步长为n的数</li>\n<li><code>equalTo {String}</code>：两次输入不一致</li>\n</ol>\n</li>\n<li>给<code>FormItem</code>添加<code>messages</code>属性，指定验证失败时展示的错误内容。默认内容如上所示</li>\n<li>给<code>FormItem</code>添加<code>classNames</code>属性，指定验证失败时错误元素需要额外添加的className，默认不添加</li>\n</ol>\n","codes":[{"language":"vdt","content":"import {Form, FormItem} from 'kpc/components/form';\nimport {Input} from 'kpc/components/input';\nimport {Select, Option} from 'kpc/components/select';\nimport {Checkbox} from 'kpc/components/checkbox';\nimport {Radio} from 'kpc/components/radio';\nimport {ButtonGroup, Button} from 'kpc/components/button';\nimport {Switch} from 'kpc/components/switch';\nimport {Slider} from 'kpc/components/slider';\n\n<Form ev-submit={{ self.submit }} ref=\"form\">\n    <FormItem label=\"Input\" model=\"model.input\" rules={{ {required: true} }}>\n        <Input v-model=\"model.input\" />\n    </FormItem>\n    <FormItem label=\"Select\" model=\"model.select\" \n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    >\n        <Select v-model=\"model.select\">\n            <Option value=\"Javascript\">Javascript</Option>\n            <Option value=\"PHP\">PHP</Option>\n            <Option value=\"C++\">C++</Option>\n        </Select>\n    </FormItem>\n    <FormItem label=\"Checkbox\" model=\"model.checkbox\" \n        rules={{ {required: true, maxLength: 2} }}\n        messages={{ {required: '必须选择'} }}\n    >\n        <Checkbox trueValue=\"Javascript\" v-model=\"model.checkbox\">Javascript</Checkbox>\n        <Checkbox trueValue=\"PHP\" v-model=\"model.checkbox\">PHP</Checkbox>\n        <Checkbox trueValue=\"C++\" v-model=\"model.checkbox\">C++</Checkbox>\n    </FormItem>\n    <FormItem label=\"Radio\" model=\"model.radio\"\n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    >\n        <Radio trueValue=\"Javascript\" v-model=\"model.radio\">Javascript</Radio>\n        <Radio trueValue=\"PHP\" v-model=\"model.radio\">PHP</Radio>\n        <Radio trueValue=\"C++\" v-model=\"model.radio\">C++</Radio>\n    </FormItem>\n    <FormItem label=\"Radio ButtonGroup\" model=\"model.buttonGroup\"\n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    >\n        <ButtonGroup checkType=\"radio\" v-model=\"model.buttonGroup\">\n            <Button value=\"Javascript\">Javascript</Button>\n            <Button value=\"PHP\">PHP</Button>\n            <Button value=\"C++\">C++</Button>\n        </ButtonGroup>\n    </FormItem>\n    <FormItem label=\"Switch\">\n        <Switch v-model=\"model.switch\" />\n    </FormItem>\n    <FormItem label=\"Slider\">\n        <Slider v-model=\"model.slider\" isShowInput={{ false }} />\n    </FormItem>\n    <FormItem label=\"Textarea\" model=\"model.textarea\">\n        <Input type=\"textarea\" v-model=\"model.textarea\" />\n    </FormItem>\n    <FormItem label=\"Password\" model=\"model.password\"\n        rules={{ {required: true} }}\n    >\n        <Input type=\"password\" v-model=\"model.password\" />\n    </FormItem>\n    <FormItem label=\"Confirm Password\" model=\"model.confirmPassword\"\n        rules={{ {required: true, equalTo: 'model.password'} }}\n    >\n        <Input type=\"password\" v-model=\"model.confirmPassword\" />\n    </FormItem>\n    <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\">提交</Button>\n        <Button style=\"margin-left: 20px\" ev-click={{ self.reset }}>重置</Button>\n    </FormItem>\n</Form>"},{"language":"styl","content":".k-form-item\n    > .k-label\n        width 150px\n.k-slider\n.k-select\n    width 300px\n.k-radio\n.k-checkbox\n    margin-right 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            model: {\n                checkbox: []\n            }\n        };\n    }\n\n    submit() {\n        Message.success('验证通过，开始提交');\n        console.log(this.get('model'));\n    }\n\n    reset() {\n        this.refs.form.reset();\n        console.log(this.get('model'));\n    }\n}"}],"index":36,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n<span class=\"hljs-keyword\">import</span> {Checkbox} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/checkbox'</span>;\n<span class=\"hljs-keyword\">import</span> {Radio} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/radio'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> {Switch} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/switch'</span>;\n<span class=\"hljs-keyword\">import</span> {Slider} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n&lt;Form ev-submit={{ self.submit }} ref=\"form\"&gt;\n    &lt;FormItem label=\"Input\" model=\"model.input\" rules={{ {required: true} }}&gt;\n        &lt;Input v-model=\"model.input\" /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Select\" model=\"model.select\" \n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    &gt;\n        &lt;Select v-model=\"model.select\"&gt;\n            &lt;Option value=\"Javascript\"&gt;Javascript&lt;/Option&gt;\n            &lt;Option value=\"PHP\"&gt;PHP&lt;/Option&gt;\n            &lt;Option value=\"C++\"&gt;C++&lt;/Option&gt;\n        &lt;/Select&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Checkbox\" model=\"model.checkbox\" \n        rules={{ {required: true, maxLength: 2} }}\n        messages={{ {required: '必须选择'} }}\n    &gt;\n        &lt;Checkbox trueValue=\"Javascript\" v-model=\"model.checkbox\"&gt;Javascript&lt;/Checkbox&gt;\n        &lt;Checkbox trueValue=\"PHP\" v-model=\"model.checkbox\"&gt;PHP&lt;/Checkbox&gt;\n        &lt;Checkbox trueValue=\"C++\" v-model=\"model.checkbox\"&gt;C++&lt;/Checkbox&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Radio\" model=\"model.radio\"\n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    &gt;\n        &lt;Radio trueValue=\"Javascript\" v-model=\"model.radio\"&gt;Javascript&lt;/Radio&gt;\n        &lt;Radio trueValue=\"PHP\" v-model=\"model.radio\"&gt;PHP&lt;/Radio&gt;\n        &lt;Radio trueValue=\"C++\" v-model=\"model.radio\"&gt;C++&lt;/Radio&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Radio ButtonGroup\" model=\"model.buttonGroup\"\n        rules={{ {required: true} }} \n        messages={{ {required: '必须选择'} }}\n    &gt;\n        &lt;ButtonGroup checkType=\"radio\" v-model=\"model.buttonGroup\"&gt;\n            &lt;Button value=\"Javascript\"&gt;Javascript&lt;/Button&gt;\n            &lt;Button value=\"PHP\"&gt;PHP&lt;/Button&gt;\n            &lt;Button value=\"C++\"&gt;C++&lt;/Button&gt;\n        &lt;/ButtonGroup&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Switch\"&gt;\n        &lt;Switch v-model=\"model.switch\" /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Slider\"&gt;\n        &lt;Slider v-model=\"model.slider\" isShowInput={{ false }} /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Textarea\" model=\"model.textarea\"&gt;\n        &lt;Input type=\"textarea\" v-model=\"model.textarea\" /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Password\" model=\"model.password\"\n        rules={{ {required: true} }}\n    &gt;\n        &lt;Input type=\"password\" v-model=\"model.password\" /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem label=\"Confirm Password\" model=\"model.confirmPassword\"\n        rules={{ {required: true, equalTo: 'model.password'} }}\n    &gt;\n        &lt;Input type=\"password\" v-model=\"model.confirmPassword\" /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem&gt;\n        &lt;Button type=\"primary\" htmlType=\"submit\"&gt;提交&lt;/Button&gt;\n        &lt;Button style=\"margin-left: 20px\" ev-click={{ self.reset }}&gt;重置&lt;/Button&gt;\n    &lt;/FormItem&gt;\n&lt;/Form&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-form-item</span>\n    &gt; <span class=\"hljs-selector-class\">.k-label</span>\n        <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">150px</span>\n<span class=\"hljs-selector-class\">.k-slider</span>\n<span class=\"hljs-selector-class\">.k-select</span>\n    <span class=\"hljs-attribute\">width</span> <span class=\"hljs-number\">300px</span>\n<span class=\"hljs-selector-class\">.k-radio</span>\n<span class=\"hljs-selector-class\">.k-checkbox</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">model</span>: {\n                <span class=\"hljs-attr\">checkbox</span>: []\n            }\n        };\n    }\n\n    submit() {\n        Message.success(<span class=\"hljs-string\">'验证通过，开始提交'</span>);\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'model'</span>));\n    }\n\n    reset() {\n        <span class=\"hljs-keyword\">this</span>.refs.form.reset();\n        <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'model'</span>));\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/form/demos/custom/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义验证规则","order":1},"catalogs":[],"contents":"<p>当内置的验证规则不能满足需求时，我们还可以自定义验证规则。有如下两种方式添加规则：</p>\n<ol>\n<li>通过<code>Form.addMethod()</code>静态方法添加全局验证规则，由于是全局的，我们可以在任意地方的\n<code>FormItem</code>中使用该规则。使用方法见API说明</li>\n<li>通过<code>FormItem</code>的<code>rules</code>属性，定义局部规则，该规则只对该<code>FormItem</code>有效</li>\n</ol>\n<p>本例中，我们添加一条全局规则<code>letter</code>用来验证只能输入字母，同时添加一条局部规则<code>unique</code>来验证所有输入必须不同</p>\n","codes":[{"language":"vdt","content":"import {Form, FormItem} from 'kpc/components/form';\nimport {Input} from 'kpc/components/input';\nimport {Button} from 'kpc/components/button';\n\n<Form>\n    <FormItem label=\"描述\">\n        <FormItem v-for={{ self.get('descriptions') }}\n            model={{ `descriptions.${key}` }}\n            hideLabel\n            rules={{ {\n                required: true, \n                // 自定义全局规则\n                letter: true,\n                // 自定义局部规则，所有描述必须不重复\n                unique(value) {\n                    let count = 0;\n                    self.get('descriptions').find(item => {\n                        if (item === value) count++;\n                        return count > 1;\n                    });\n\n                    // 直接返回错误文案，或者也可以单独定义messages为{unique: '不能相同'}\n                    return count === 1 || '不能相同';\n                }\n            } }}\n        >\n            <Input v-model={{ `descriptions.${key}` }} />    \n            <b:append>\n                <Button ev-click={{ self.delete.bind(self, key) }}>删除</Button>\n            </b:append>\n        </FormItem>\n        <Button ev-click={{ self.add }}>添加</Button>\n    </FormItem>\n</Form>"},{"language":"styl","content":".k-form-item\n    .k-form-item\n        margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nimport {Form} from 'kpc/components/form';\n\n// 添加全局规则\nForm.addMethod('letter', (value, item, param) => {\n    console.log('arguments', value, item, param);\n    return /^[a-z|A-Z]+$/.test(value);\n}, '只能输入字母');\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            descriptions: ['']\n        }\n    }\n\n    add() {\n        this.set('descriptions', this.get('descriptions').concat(''));\n    }\n\n    delete(index) {\n        const descriptions = this.get('descriptions').slice(0);\n        descriptions.splice(index, 1);\n        this.set('descriptions', descriptions);\n    }\n}"}],"index":37,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> {Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n&lt;Form&gt;\n    &lt;FormItem label=\"描述\"&gt;\n        &lt;FormItem v-for={{ self.get('descriptions') }}\n            model={{ `descriptions.${key}` }}\n            hideLabel\n            rules={{ {\n                required: true, \n                // 自定义全局规则\n                letter: true,\n                // 自定义局部规则，所有描述必须不重复\n                unique(value) {\n                    let count = 0;\n                    self.get('descriptions').find(item =&gt; {\n                        if (item === value) count++;\n                        return count &gt; 1;\n                    });\n\n                    // 直接返回错误文案，或者也可以单独定义messages为{unique: '不能相同'}\n                    return count === 1 || '不能相同';\n                }\n            } }}\n        &gt;\n            &lt;Input v-model={{ `descriptions.${key}` }} /&gt;    \n            &lt;b:append&gt;\n                &lt;Button ev-click={{ self.delete.bind(self, key) }}&gt;删除&lt;/Button&gt;\n            &lt;/b:append&gt;\n        &lt;/FormItem&gt;\n        &lt;Button ev-click={{ self.add }}&gt;添加&lt;/Button&gt;\n    &lt;/FormItem&gt;\n&lt;/Form&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-form-item</span>\n    <span class=\"hljs-selector-class\">.k-form-item</span>\n        <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">import</span> {Form} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n\n<span class=\"hljs-comment\">// 添加全局规则</span>\nForm.addMethod(<span class=\"hljs-string\">'letter'</span>, (value, item, param) =&gt; {\n    <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">'arguments'</span>, value, item, param);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-regexp\">/^[a-z|A-Z]+$/</span>.test(value);\n}, <span class=\"hljs-string\">'只能输入字母'</span>);\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">descriptions</span>: [<span class=\"hljs-string\">''</span>]\n        }\n    }\n\n    add() {\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'descriptions'</span>, <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'descriptions'</span>).concat(<span class=\"hljs-string\">''</span>));\n    }\n\n    <span class=\"hljs-keyword\">delete</span>(index) {\n        <span class=\"hljs-keyword\">const</span> descriptions = <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'descriptions'</span>).slice(<span class=\"hljs-number\">0</span>);\n        descriptions.splice(index, <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'descriptions'</span>, descriptions);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/form/demos/label/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义label","order":3},"catalogs":[],"contents":"<p>通过<code>label</code>扩展点，我们可以定义更复杂的<code>label</code>，而不仅仅只是文本</p>\n","codes":[{"language":"vdt","content":"import {Form, FormItem} from 'kpc/components/form';\nimport {Input} from 'kpc/components/input';\n\n<Form>\n    <FormItem>\n        <b:label><i style=\"color: red\">*</i> 姓名</b:label>\n        <Input />\n    </FormItem>\n    <FormItem>\n        <b:label><i class=\"ion-person\"/> 姓名</b:label>\n        <Input />\n    </FormItem>\n</Form>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":38,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;Form&gt;\n    &lt;FormItem&gt;\n        &lt;b:label&gt;&lt;i style=\"color: red\"&gt;*&lt;/i&gt; 姓名&lt;/b:label&gt;\n        &lt;Input /&gt;\n    &lt;/FormItem&gt;\n    &lt;FormItem&gt;\n        &lt;b:label&gt;&lt;i class=\"ion-person\"/&gt; 姓名&lt;/b:label&gt;\n        &lt;Input /&gt;\n    &lt;/FormItem&gt;\n&lt;/Form&gt;</code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/form/demos/variable/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"可变规则","order":3},"catalogs":[],"contents":"<p>规则<code>rules</code>的值是响应式的，这意味着我们可以实时改变验证规则。</p>\n<p>例如本例中，用户可以不输入姓名，但如果输入了“姓”，就必须输入“名”，反之亦然。</p>\n","codes":[{"language":"vdt","content":"import {Form, FormItem} from 'kpc/components/form';\nimport {Input} from 'kpc/components/input';\nimport {Row, Col} from 'kpc/components/grid';\n\n<Form>\n    <FormItem label=\"姓名\">\n        <Row gutter=\"16\">\n            <Col span=\"12\">\n                <FormItem hideLabel model=\"firstName\" rules={{ {\n                    // 该规则取值，随着lastName的存在与否而改变\n                    required: self.get('lastName')\n                } }}> \n                    <Input v-model=\"firstName\" />\n                </FormItem>\n            </Col>\n            <Col span=\"12\">\n                <FormItem hideLabel model=\"lastName\" rules={{ {\n                    // 该规则取值，随着firstName的存在与否而改变\n                    required: self.get('firstName')\n                } }}> \n                    <Input v-model=\"lastName\" />\n                </FormItem>\n            </Col>\n        </Row>\n    </FormItem>\n</Form>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":39,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Form, FormItem} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/form'</span>;\n<span class=\"hljs-keyword\">import</span> {Input} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> {Row, Col} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/grid'</span>;\n\n&lt;Form&gt;\n    &lt;FormItem label=\"姓名\"&gt;\n        &lt;Row gutter=\"16\"&gt;\n            &lt;Col span=\"12\"&gt;\n                &lt;FormItem hideLabel model=\"firstName\" rules={{ {\n                    // 该规则取值，随着lastName的存在与否而改变\n                    required: self.get('lastName')\n                } }}&gt; \n                    &lt;Input v-model=\"firstName\" /&gt;\n                &lt;/FormItem&gt;\n            &lt;/Col&gt;\n            &lt;Col span=\"12\"&gt;\n                &lt;FormItem hideLabel model=\"lastName\" rules={{ {\n                    // 该规则取值，随着firstName的存在与否而改变\n                    required: self.get('firstName')\n                } }}&gt; \n                    &lt;Input v-model=\"lastName\" /&gt;\n                &lt;/FormItem&gt;\n            &lt;/Col&gt;\n        &lt;/Row&gt;\n    &lt;/FormItem&gt;\n&lt;/Form&gt;</code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/grid/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>将<code>Col</code>嵌套在<code>Row</code>中，然后用<code>span</code>属性定义所占的宽度，宽度为百分比，每一份是<code>1/24</code></p>\n","codes":[{"language":"vdt","content":"import {Row, Col} from 'kpc/components/grid';\n\n<div>\n    <Row> \n        <Col span=\"12\">col-12</Col>\n        <Col span=\"12\">col-12</Col>\n    </Row>\n    <Row>\n        <Col span=\"4\">col-4</Col>\n        <Col span=\"6\">col-6</Col>\n        <Col span=\"8\">col-8</Col>\n        <Col span=\"6\">col-6</Col>\n    </Row>\n</div>"},{"language":"styl","content":".k-col\n    line-height 40px\n    text-align center\n    color #fff\n    &:nth-of-type(even)\n        background #0a5eee\n    &:nth-of-type(odd)\n        background lighten(#0a5eee, 30%)\n.k-row\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":41,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Row, Col} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/grid'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span>&gt;</span> \n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span>col-12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span>col-12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"4\"</span>&gt;</span>col-4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</span>col-6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"8\"</span>&gt;</span>col-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</span>col-6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-col</span>\n    <span class=\"hljs-attribute\">line-height</span> <span class=\"hljs-number\">40px</span>\n    <span class=\"hljs-attribute\">text-align</span> center\n    <span class=\"hljs-attribute\">color</span> <span class=\"hljs-number\">#fff</span>\n    &amp;:nth-of-type(even)\n        <span class=\"hljs-attribute\">background</span> <span class=\"hljs-number\">#0a5eee</span>\n    &amp;:nth-of-type(odd)\n        <span class=\"hljs-attribute\">background</span> lighten(<span class=\"hljs-number\">#0a5eee</span>, <span class=\"hljs-number\">30%</span>)\n<span class=\"hljs-selector-class\">.k-row</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/grid/demos/gutter/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"间距","order":1},"catalogs":[],"contents":"<p>给<code>Row</code>添加<code>gutter</code>，可以定义<code>Col</code>之间的间距，单位为<code>px</code></p>\n","codes":[{"language":"vdt","content":"import {Row, Col} from 'kpc/components/grid';\n\n<div>\n    <Row gutter=\"16\"> \n        <Col span=\"12\">col-12</Col>\n        <Col span=\"12\">col-12</Col>\n    </Row>\n    <Row gutter=\"16\">\n        <Col span=\"4\">col-4</Col>\n        <Col span=\"6\">col-6</Col>\n        <Col span=\"8\">col-8</Col>\n        <Col span=\"6\">col-6</Col>\n    </Row>\n</div>"},{"language":"styl","content":".k-col\n    line-height 40px\n    text-align center\n    color #fff\n    &:nth-of-type(even)\n        div\n            background #0a5eee\n    &:nth-of-type(odd)\n        div\n            background lighten(#0a5eee, 30%)\n.k-row\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":42,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Row, Col} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/grid'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span> <span class=\"hljs-attr\">gutter</span>=<span class=\"hljs-string\">\"16\"</span>&gt;</span> \n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span>col-12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"12\"</span>&gt;</span>col-12<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span> <span class=\"hljs-attr\">gutter</span>=<span class=\"hljs-string\">\"16\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"4\"</span>&gt;</span>col-4<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</span>col-6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"8\"</span>&gt;</span>col-8<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">span</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</span>col-6<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-col</span>\n    <span class=\"hljs-attribute\">line-height</span> <span class=\"hljs-number\">40px</span>\n    <span class=\"hljs-attribute\">text-align</span> center\n    <span class=\"hljs-attribute\">color</span> <span class=\"hljs-number\">#fff</span>\n    &amp;:nth-of-type(even)\n        <span class=\"hljs-selector-tag\">div</span>\n            <span class=\"hljs-attribute\">background</span> <span class=\"hljs-number\">#0a5eee</span>\n    &amp;:nth-of-type(odd)\n        <span class=\"hljs-selector-tag\">div</span>\n            <span class=\"hljs-attribute\">background</span> lighten(<span class=\"hljs-number\">#0a5eee</span>, <span class=\"hljs-number\">30%</span>)\n<span class=\"hljs-selector-class\">.k-row</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/autowidth/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自动宽度","order":5},"catalogs":[],"contents":"<p>指定<code>autoWidth</code>可以让输入框宽度随文本长度变化而变化</p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\n\n\n<Input placeholder=\"auto width\" autoWidth />"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":44,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">\"auto width\"</span> <span class=\"hljs-attr\">autoWidth</span> /&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>使用<code>v-model</code>绑定输入的值，<code>disabled</code>来禁用组件</p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\n\n<div>\n    <Input v-model=\"value\" placeholder=\"please enter\" /> {{ self.get('value') }}\n    <br />\n    <Input disabled placeholder=\"disabled\" />\n</div>"},{"language":"styl","content":".k-input\n    margin 5px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":45,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;div&gt;\n    &lt;Input v-model=\"value\" placeholder=\"please enter\" /&gt; {{ self.get('value') }}\n    &lt;br /&gt;\n    &lt;Input disabled placeholder=\"disabled\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-input</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">5px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/blocks/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"追加内容","order":1},"catalogs":[],"contents":"<p>使用<code>append</code>，<code>prepend</code>，<code>suffix</code>，<code>prefix</code>扩展点，可以往组件追加内容</p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Input placeholder=\"please enter\">\n        <b:prepend>http://</b:prepend>\n        <b:append>.com</b:append>\n    </Input>\n    <Input placeholder=\"please enter\">\n        <b:append><Button icon type=\"none\"><i class=\"ion-ios-search\"></i></Button></b:append>\n    </Input>\n    <Input placeholder=\"please enter\">\n        <b:append><Button icon type=\"primary\"><i class=\"ion-ios-search\"></i></Button></b:append>\n    </Input>\n    <Input placeholder=\"please enter\">\n        <b:append><Button type=\"primary\">搜索</Button></b:append>\n    </Input>\n    <Input placeholder=\"please enter\">\n        <b:prefix><i class=\"ion-earth\"></i></b:prefix>\n        <b:suffix><i class=\"ion-ios-search\"></i></b:suffix>\n    </Input>\n    <Input placeholder=\"please enter\">\n        <b:prepend>http://</b:prepend>\n        <b:append>.com</b:append>\n        <b:prefix><i class=\"ion-earth\"></i></b:prefix>\n        <b:suffix><i class=\"ion-ios-search\"></i></b:suffix>\n    </Input>\n</div>"},{"language":"styl","content":".k-input\n    margin 5px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":46,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n&lt;div&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:prepend&gt;http://&lt;/b:prepend&gt;\n        &lt;b:append&gt;.com&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:append&gt;&lt;Button icon type=\"none\"&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/Button&gt;&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:append&gt;&lt;Button icon type=\"primary\"&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/Button&gt;&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:append&gt;&lt;Button type=\"primary\"&gt;搜索&lt;/Button&gt;&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:prefix&gt;&lt;i class=\"ion-earth\"&gt;&lt;/i&gt;&lt;/b:prefix&gt;\n        &lt;b:suffix&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/b:suffix&gt;\n    &lt;/Input&gt;\n    &lt;Input placeholder=\"please enter\"&gt;\n        &lt;b:prepend&gt;http://&lt;/b:prepend&gt;\n        &lt;b:append&gt;.com&lt;/b:append&gt;\n        &lt;b:prefix&gt;&lt;i class=\"ion-earth\"&gt;&lt;/i&gt;&lt;/b:prefix&gt;\n        &lt;b:suffix&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/b:suffix&gt;\n    &lt;/Input&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-input</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">5px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/clearable/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"可清除","order":4},"catalogs":[],"contents":"<p>指定<code>clearable</code>可以展示快速清除按钮</p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\n\n<div>\n    <Input clearable placeholder=\"please enter\" />\n    <br />\n    <Input clearable placeholder=\"please enter\">\n        <b:suffix><i class=\"ion-ios-search\"></i></b:suffix>\n    </Input>\n</div>"},{"language":"styl","content":".k-input\n    margin 5px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":47,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;div&gt;\n    &lt;Input clearable placeholder=\"please enter\" /&gt;\n    &lt;br /&gt;\n    &lt;Input clearable placeholder=\"please enter\"&gt;\n        &lt;b:suffix&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/b:suffix&gt;\n    &lt;/Input&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-input</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">5px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"尺寸","order":2},"catalogs":[],"contents":"<p>添加<code>size</code>属性，定义三种尺寸：<code>default</code>，<code>small</code>，<code>mini</code></p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Input value=\"default\" />\n    <br />\n    <Input value=\"small\" size=\"small\" />\n    <Input size=\"small\" placeholder=\"please enter\">\n        <b:prepend>http://</b:prepend>\n        <b:append>.com</b:append>\n    </Input>\n    <Input size=\"small\" placeholder=\"please enter\">\n        <b:append><Button size=\"small\" icon type=\"primary\"><i class=\"ion-ios-search\"></i></Button></b:append>\n    </Input>\n    <Input size=\"small\" placeholder=\"please enter\">\n        <b:append><Button type=\"primary\" size=\"small\">Search</Button></b:append>\n    </Input>\n\n    <Input value=\"mini\" size=\"mini\" />\n</div>"},{"language":"styl","content":".k-input\n    margin 5px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":48,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n&lt;div&gt;\n    &lt;Input value=\"default\" /&gt;\n    &lt;br /&gt;\n    &lt;Input value=\"small\" size=\"small\" /&gt;\n    &lt;Input size=\"small\" placeholder=\"please enter\"&gt;\n        &lt;b:prepend&gt;http://&lt;/b:prepend&gt;\n        &lt;b:append&gt;.com&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input size=\"small\" placeholder=\"please enter\"&gt;\n        &lt;b:append&gt;&lt;Button size=\"small\" icon type=\"primary\"&gt;&lt;i class=\"ion-ios-search\"&gt;&lt;/i&gt;&lt;/Button&gt;&lt;/b:append&gt;\n    &lt;/Input&gt;\n    &lt;Input size=\"small\" placeholder=\"please enter\"&gt;\n        &lt;b:append&gt;&lt;Button type=\"primary\" size=\"small\"&gt;Search&lt;/Button&gt;&lt;/b:append&gt;\n    &lt;/Input&gt;\n\n    &lt;Input value=\"mini\" size=\"mini\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-input</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">5px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/input/demos/textarea/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"textarea文本框","order":3},"catalogs":[],"contents":"<p>指定<code>type</code>为<code>textarea</code>渲染成文本框，同时可以用<code>rows</code>来指定展示的行数</p>\n","codes":[{"language":"vdt","content":"import Input from 'kpc/components/input';\n\n<div>\n    <Input type=\"textarea\" placeholder=\"please enter\" />\n    <br />\n    <Input type=\"textarea\" rows=\"5\" placeholder=\"please enter\" />\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":49,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Input <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/input'</span>;\n\n&lt;div&gt;\n    &lt;Input type=\"textarea\" placeholder=\"please enter\" /&gt;\n    &lt;br /&gt;\n    &lt;Input type=\"textarea\" rows=\"5\" placeholder=\"please enter\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/message/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>使用<code>Message</code>提供的静态方法，展示提示。包括：<code>info</code>, <code>error</code>, <code>warning</code>, <code>success</code>。提示默认会在5s后自动关闭</p>\n","codes":[{"language":"vdt","content":"import {ButtonGroup, Button} from 'kpc/components/button';\n\n<ButtonGroup>\n    <Button v-for={{ ['info', 'error', 'warning', 'success'] }}\n        ev-click={{ self.showMessage.bind(self, value) }}\n    >{{ value }}</Button>\n</ButtonGroup>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    showMessage(type) {\n        Message[type](type);\n    }\n}"}],"index":51,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> ['<span class=\"hljs-attr\">info</span>', '<span class=\"hljs-attr\">error</span>', '<span class=\"hljs-attr\">warning</span>', '<span class=\"hljs-attr\">success</span>'] }}\n        <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage.bind</span>(<span class=\"hljs-attr\">self</span>, <span class=\"hljs-attr\">value</span>) }}\n    &gt;</span>{{ value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showMessage(type) {\n        Message[type](type);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/message/demos/custom/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义展示内容","order":2},"catalogs":[],"contents":"<p>当需要自定义提示的内容时，我们可以将<code>Message</code>当做组件定义在模板中，而非调用它的静态方法。此时我们需要给<code>Message</code>指定唯一的<code>key</code>。</p>\n","codes":[{"language":"vdt","content":"import Message from 'kpc/components/message';\nimport {Button} from 'kpc/components/button';\nimport {Progress} from 'kpc/components/progress';\n\n<div>\n    <Button ev-click={{ () => self.set('show', true) }}>custom message</Button>\n    <Message v-model=\"show\" key=\"message\" \n        duration={{ 0 }} \n        type={{ self.get('percent') >= 100 ? 'success' : 'info' }}\n    >\n        <Progress style=\"width: 200px\" \n            percent={{ self.get('percent') }}\n            ev-click={{ self.add }}\n        />\n    </Message>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            percent: 10, \n            show: false\n        };\n    }\n\n    add() {\n        this.set('percent', this.get('percent') + 5);\n    }\n}"}],"index":52,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n<span class=\"hljs-keyword\">import</span> {Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n<span class=\"hljs-keyword\">import</span> {Progress} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> () =&gt;</span> self.set('show', true) }}&gt;custom message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Message</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"show\"</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">\"message\"</span> \n        <span class=\"hljs-attr\">duration</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">0</span> }} \n        <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">percent</span>') &gt;</span>= 100 ? 'success' : 'info' }}\n    &gt;\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Progress</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"width: 200px\"</span> \n            <span class=\"hljs-attr\">percent</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">percent</span>') }}\n            <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.add</span> }}\n        /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Message</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">percent</span>: <span class=\"hljs-number\">10</span>, \n            <span class=\"hljs-attr\">show</span>: <span class=\"hljs-literal\">false</span>\n        };\n    }\n\n    add() {\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'percent'</span>, <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'percent'</span>) + <span class=\"hljs-number\">5</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/message/demos/duration/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义时长","order":1},"catalogs":[],"contents":"<p>提示默认会在5s后关闭，我们可以指定<code>duration</code>来自定义时长（单位ms）。当指定为<code>0</code>时，提示不会自动关闭。</p>\n","codes":[{"language":"vdt","content":"import {ButtonGroup, Button} from 'kpc/components/button';\n\n<ButtonGroup>\n    <Button ev-click={{ self.showMessage1 }}>close after 10s</Button>\n    <Button ev-click={{ self.showMessage2 }}>stick message</Button>\n</ButtonGroup>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    showMessage1() {\n        Message.info('close after 10s', 10000);\n    }\n\n    showMessage2() {\n        Message.info('stick message', 0);\n    }\n}"}],"index":53,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage1</span> }}&gt;</span>close after 10s<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.showMessage2</span> }}&gt;</span>stick message<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    showMessage1() {\n        Message.info(<span class=\"hljs-string\">'close after 10s'</span>, <span class=\"hljs-number\">10000</span>);\n    }\n\n    showMessage2() {\n        Message.info(<span class=\"hljs-string\">'stick message'</span>, <span class=\"hljs-number\">0</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/pagination/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p><code>Pagination</code>的基本用法，通过<code>total</code>指定数据总条数，<code>limit</code>指定每页数据条数，<code>limits</code>数组定义可供选择的条数</p>\n","codes":[{"language":"vdt","content":"import Pagination from 'kpc/components/pagination';\n\n<div>\n    <Pagination total={{ 200 }} />\n    <Pagination total={{ 200 }} limit={{ 20 }} />\n    <Pagination total={{ 200 }} limit={{ 20 }} limits={{ [10, 20, 50, 100] }}/>\n</div>"},{"language":"styl","content":".k-pagination\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":55,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Pagination <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n\n&lt;div&gt;\n    &lt;Pagination total={{ 200 }} /&gt;\n    &lt;Pagination total={{ 200 }} limit={{ 20 }} /&gt;\n    &lt;Pagination total={{ 200 }} limit={{ 20 }} limits={{ [10, 20, 50, 100] }}/&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-pagination</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/pagination/demos/counts/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"改变翻页按钮数量","order":2},"catalogs":[],"contents":"<p>组件默认会展示7个翻页按钮（包括省略号...)，通过<code>counts</code>属性我们可以指定按钮个数。</p>\n<blockquote>\n<p>最好不要小于7个，否则影响体验。使用奇数可以使页码对称分布</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Pagination from 'kpc/components/pagination';\n\n<div>\n    <Pagination total={{ 200 }} counts=\"10\" />\n    <Pagination total={{ 200 }} counts=\"9\" />\n</div>"},{"language":"styl","content":".k-pagination\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":56,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Pagination <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n\n&lt;div&gt;\n    &lt;Pagination total={{ 200 }} counts=\"10\" /&gt;\n    &lt;Pagination total={{ 200 }} counts=\"9\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-pagination</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/pagination/demos/current/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"当前页码","order":4},"catalogs":[],"contents":"<p>通过<code>current</code>可以指定当前页码，当页码改变时，会触发默认事件<code>$change:current</code>和<code>$changed:current</code>，我们可以指定相应的回调函数。</p>\n","codes":[{"language":"vdt","content":"import Pagination from 'kpc/components/pagination';\n\n<div>\n    <Pagination total={{ 200 }} \n        current={{ self.get('current') }}\n        ev-$change:current={{ self._fetch }} \n    />\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nimport Message from 'kpc/components/message';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {current: 1}\n    };\n\n    _fetch(c, current) {\n        // fetch data\n        this.set('current', current);\n        Message.info(`current page: ${current}`);\n    }\n}"}],"index":57,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Pagination <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pagination</span> <span class=\"hljs-attr\">total</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">200</span> }} \n        <span class=\"hljs-attr\">current</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">current</span>') }}\n        <span class=\"hljs-attr\">ev-</span>$<span class=\"hljs-attr\">change:current</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self._fetch</span> }} \n    /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">import</span> Message <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/message'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-attr\">current</span>: <span class=\"hljs-number\">1</span>}\n    };\n\n    _fetch(c, current) {\n        <span class=\"hljs-comment\">// fetch data</span>\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'current'</span>, current);\n        Message.info(<span class=\"hljs-string\">`current page: <span class=\"hljs-subst\">${current}</span>`</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/pagination/demos/goto/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"展示快速跳转框","order":3},"catalogs":[],"contents":"<p>将<code>showGoto</code>设为<code>true</code>可以展示快速跳转输入框</p>\n","codes":[{"language":"vdt","content":"import Pagination from 'kpc/components/pagination';\n\n<div>\n    <Pagination total={{ 200 }} showGoto />\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":58,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Pagination <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pagination</span> <span class=\"hljs-attr\">total</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">200</span> }} <span class=\"hljs-attr\">showGoto</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/pagination/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"指定尺寸","order":1},"catalogs":[],"contents":"<p>通过<code>size</code>可以指定组件的尺寸：<code>default</code>, <code>small</code>, <code>mini</code></p>\n","codes":[{"language":"vdt","content":"import Pagination from 'kpc/components/pagination';\n\n<div>\n    <Pagination total={{ 200 }} />\n    <Pagination total={{ 200 }} size=\"small\" />\n    <Pagination total={{ 200 }} size=\"mini\" />\n</div>"},{"language":"styl","content":".k-pagination\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":59,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Pagination <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/pagination'</span>;\n\n&lt;div&gt;\n    &lt;Pagination total={{ 200 }} /&gt;\n    &lt;Pagination total={{ 200 }} size=\"small\" /&gt;\n    &lt;Pagination total={{ 200 }} size=\"mini\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-pagination</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/progress/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>通过<code>percent</code>指定当前进度条百分比</p>\n","codes":[{"language":"vdt","content":"import Progress from 'kpc/components/progress';\n\n<Progress percent=\"50\" />"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":61,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Progress <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Progress</span> <span class=\"hljs-attr\">percent</span>=<span class=\"hljs-string\">\"50\"</span> /&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/progress/demos/children/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义百分比内容","order":4},"catalogs":[],"contents":"<p>组件默认会展示当前百分比，我们可以给组件添加子元素展示任意内容</p>\n","codes":[{"language":"vdt","content":"import Progress from 'kpc/components/progress';\nimport {ButtonGroup, Button} from 'kpc/components/button';\n\n<div>\n    <Progress percent={{ self.get('percent') }} type=\"circle\">\n        <div style=\"font-size: 14px; line-height: 20px;\" v-if={{ self.get('percent') !== 100 }}>\n            正在上传<br />\n            {{ self.get('percent') }}%\n        </div>\n        <div style=\"font-size: 14px; line-height: 20px; color: #4db500;\" v-else>\n            上传完成\n        </div>\n    </Progress>\n    <ButtonGroup>\n        <Button size=\"mini\" icon ev-click={{ self.add }}>+</Button>\n        <Button size=\"mini\" icon ev-click={{ self.minus }}>-</Button>\n    </ButtonGroup>\n</div>"},{"language":"styl","content":".k-progress\n    display inline-block\n    vertical-align middle\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {percent: 40}\n    }\n\n    add() {\n        if (this.get('percent') >= 100) return;\n\n        this.set('percent', this.get('percent') + 10);\n    }\n\n    minus() {\n        if (this.get('percent') <= 0) return;\n\n        this.set('percent', this.get('percent') - 10);\n    }\n}"}],"index":62,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Progress <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n<span class=\"hljs-keyword\">import</span> {ButtonGroup, Button} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Progress</span> <span class=\"hljs-attr\">percent</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">percent</span>') }} <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"circle\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"font-size: 14px; line-height: 20px;\"</span> <span class=\"hljs-attr\">v-if</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">percent</span>') !== <span class=\"hljs-string\">100</span> }}&gt;</span>\n            正在上传<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n            {{ self.get('percent') }}%\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"font-size: 14px; line-height: 20px; color: #4db500;\"</span> <span class=\"hljs-attr\">v-else</span>&gt;</span>\n            上传完成\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Progress</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"mini\"</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.add</span> }}&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"mini\"</span> <span class=\"hljs-attr\">icon</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.minus</span> }}&gt;</span>-<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ButtonGroup</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-progress</span>\n    <span class=\"hljs-attribute\">display</span> inline-block\n    <span class=\"hljs-attribute\">vertical-align</span> middle\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-attr\">percent</span>: <span class=\"hljs-number\">40</span>}\n    }\n\n    add() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'percent'</span>) &gt;= <span class=\"hljs-number\">100</span>) <span class=\"hljs-keyword\">return</span>;\n\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'percent'</span>, <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'percent'</span>) + <span class=\"hljs-number\">10</span>);\n    }\n\n    minus() {\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'percent'</span>) &lt;= <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span>;\n\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'percent'</span>, <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'percent'</span>) - <span class=\"hljs-number\">10</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/progress/demos/circle/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"圆形进度","order":3},"catalogs":[],"contents":"<p>将<code>type</code>设为<code>circle</code>可以展示圆形进度</p>\n","codes":[{"language":"vdt","content":"import Progress from 'kpc/components/progress';\n\n<div>\n    <Progress type=\"circle\" percent=\"50\" />\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":63,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Progress <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Progress</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"circle\"</span> <span class=\"hljs-attr\">percent</span>=<span class=\"hljs-string\">\"50\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/progress/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"尺寸","order":2},"catalogs":[],"contents":"<p>通过<code>size</code>来指定尺寸：<code>default</code> <code>small</code> <code>mini</code></p>\n","codes":[{"language":"vdt","content":"import Progress from 'kpc/components/progress';\n\n<div>\n    <Progress percent=\"50\" />\n    <Progress percent=\"50\" size=\"small\" />\n    <Progress percent=\"50\" size=\"mini\" />\n</div>"},{"language":"styl","content":".k-progress\n    margin 10px 0"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":64,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Progress <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n\n&lt;div&gt;\n    &lt;Progress percent=\"50\" /&gt;\n    &lt;Progress percent=\"50\" size=\"small\" /&gt;\n    &lt;Progress percent=\"50\" size=\"mini\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-progress</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">0</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/progress/demos/status/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"状态","order":1},"catalogs":[],"contents":"<p>通过<code>status</code>来指定状态：<code>active</code> <code>normal</code> <code>error</code> <code>success</code></p>\n","codes":[{"language":"vdt","content":"import Progress from 'kpc/components/progress';\n\n<div>\n    <Progress percent=\"50\" />\n    <Progress percent=\"50\" status=\"normal\" />\n    <Progress percent=\"50\" status=\"error\" />\n    <Progress percent=\"50\" status=\"success\" />\n</div>"},{"language":"styl","content":".k-progress\n    margin 10px 0"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":65,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Progress <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/progress'</span>;\n\n&lt;div&gt;\n    &lt;Progress percent=\"50\" /&gt;\n    &lt;Progress percent=\"50\" status=\"normal\" /&gt;\n    &lt;Progress percent=\"50\" status=\"error\" /&gt;\n    &lt;Progress percent=\"50\" status=\"success\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-progress</span>\n    <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">0</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/radio/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p><code>Radio</code>的基本用法，及禁用状态。由于<code>trueValue</code>的默认值为<code>true</code>，所以可以直接传入<code>value=true</code>来指定选中状态。</p>\n<blockquote>\n<p>选中状态的判定条件是<code>value === trueValue</code>，对于值为对象的情况要注意。</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Radio from 'kpc/components/radio';\n\n<div>\n    <Radio>radio</Radio>\n    <Radio disabled>disabled radio</Radio>\n    <Radio value={{ true }} disabled>disabled checked radio</Radio>\n</div>"},{"language":"styl","content":".k-radio\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":67,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Radio <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/radio'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span>&gt;</span>radio<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>disabled radio<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">true</span> }} <span class=\"hljs-attr\">disabled</span>&gt;</span>disabled checked radio<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-radio</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/radio/demos/group/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"Radio组","order":1},"catalogs":[],"contents":"<p>和浏览器原生行为一样，给<code>Radio</code>指定相同的<code>name</code>，它们便组成了单选框组。</p>\n","codes":[{"language":"vdt","content":"import Radio from 'kpc/components/radio';\n\n<div>\n    <Radio name=\"language\" trueValue=\"Javascript\" v-model=\"language\">Javascript</Radio>\n    <Radio name=\"language\" trueValue=\"C++\" v-model=\"language\">C++</Radio>\n    <Radio name=\"language\" trueValue=\"PHP\" v-model=\"language\">PHP</Radio>\n    Your selected: {{ self.get('language') }}\n</div>"},{"language":"styl","content":".k-radio\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":68,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Radio <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/radio'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"language\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"Javascript\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"language\"</span>&gt;</span>Javascript<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"language\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"C++\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"language\"</span>&gt;</span>C++<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"language\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"PHP\"</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"language\"</span>&gt;</span>PHP<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    Your selected: {{ self.get('language') }}\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-radio</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/radio/demos/value/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"指定选中的值","order":2},"catalogs":[],"contents":"<p><code>Radio</code>默认选中的值为<code>true</code>，通过<code>trueValue</code>属性我们可以指定任意值。</p>\n<blockquote>\n<p>和<code>Checkbox</code>一样，判定选中状态时，当值为对象比较的是引用地址</p>\n</blockquote>\n","codes":[{"language":"vdt","content":"import Radio from 'kpc/components/radio';\n\n<div>\n    <Radio v-model=\"value1\">默认值：{{ JSON.stringify(self.get('value1')) }}</Radio>\n    <Radio v-model=\"value2\" trueValue=\"checked\">\n        指定选中时的取值为\"checked\": {{ JSON.stringify(self.get('value2')) }}\n    </Radio>\n    <Radio v-model=\"value3\" trueValue={{ self.get('checkedValue') }}>\n        指定选中时的取值为对象：{{ JSON.stringify(self.get('value3')) }}\n    </Radio>\n</div>"},{"language":"styl","content":".k-radio\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template\n    static template = template;\n\n    defaults() {\n        return {\n            checkedValue: {\n                test: 1\n            }\n        };\n    }\n}"}],"index":69,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Radio <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/radio'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value1\"</span>&gt;</span>默认值：{{ JSON.stringify(self.get('value1')) }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value2\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">\"checked\"</span>&gt;</span>\n        指定选中时的取值为\"checked\": {{ JSON.stringify(self.get('value2')) }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radio</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"value3\"</span> <span class=\"hljs-attr\">trueValue</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">checkedValue</span>') }}&gt;</span>\n        指定选中时的取值为对象：{{ JSON.stringify(self.get('value3')) }}\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Radio</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-radio</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">checkedValue</span>: {\n                <span class=\"hljs-attr\">test</span>: <span class=\"hljs-number\">1</span>\n            }\n        };\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p><code>Select</code>嵌套<code>Option</code>使用，用<code>v-model</code>进行双向数据绑定。(支持键盘选择)</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<div>\n    <Select v-model=\"day\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    You selected: {{ self.get('day') }}\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":71,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    You selected: {{ self.get('day') }}\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/clearable/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"可清空","order":2},"catalogs":[],"contents":"<p>指定<code>clearable</code>展示清空按钮</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<div>\n    <Select v-model=\"day\" clearable style=\"margin-right: 10px\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    <Select v-model=\"days\" multiple clearable>\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":72,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">clearable</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"days\"</span> <span class=\"hljs-attr\">multiple</span> <span class=\"hljs-attr\">clearable</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/custom/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义显示内容","order":5},"catalogs":[],"contents":"<p><code>Option</code>的子元素可以是任意dom结构，而非仅仅只是字符串。此时如果需要支持<code>filterable</code>，我们应该指定<code>label</code>，以便组件知道筛选的内容。</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\nconst data = [\n    {label: '星期一', value: 'Monday'},\n    {label: '星期二', value: 'Tuesday'},\n    {label: '星期三', value: 'Wednesday'},\n    {label: '星期四', value: 'Thursday'},\n    {label: '星期五', value: 'Friday'},\n    {label: '星期六', value: 'Saturday'},\n    {label: '星期天', value: 'Sunday'},\n];\n\n<Select v-model=\"day\" filterable>\n    <Option v-for={{ data }} value={{ value.value }} label={{ value.label }}>\n        <div>\n            <span>{{ value.label }}</span>\n            <span style=\"float: right; color: #ccc\">{{ value.value }}</span>\n        </div>\n    </Option>\n</Select>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":73,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期一'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Monday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期二'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Tuesday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期三'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Wednesday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期四'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Thursday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期五'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Friday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期六'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Saturday'</span>},\n    {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'星期天'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'Sunday'</span>},\n];\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">filterable</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">v-for</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">data</span> }} <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value.value</span> }} <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">value.label</span> }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>{{ value.label }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"float: right; color: #ccc\"</span>&gt;</span>{{ value.value }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/disabled/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"禁用状态","order":1},"catalogs":[],"contents":"<p>给<code>Select</code>添加<code>disabled</code>禁用整个选择框选择；给<code>Option</code>添加<code>disabled</code>禁用该项选择</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<div>\n    <Select v-model=\"day\" disabled style=\"margin-right: 10px\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    <Select v-model=\"day\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\" disabled>星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":74,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">disabled</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span> <span class=\"hljs-attr\">disabled</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/filterable/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"可筛选","order":4},"catalogs":[],"contents":"<p>指定<code>filterable</code>支持筛选，组件会同时对<code>label</code>和<code>value</code>进行筛选</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<div>\n    <Select v-model=\"day\" filterable style=\"margin-right: 10px\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    <Select v-model=\"days\" multiple filterable>\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":75,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">filterable</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">\"margin-right: 10px\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"days\"</span> <span class=\"hljs-attr\">multiple</span> <span class=\"hljs-attr\">filterable</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/group/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"分组","order":6},"catalogs":[],"contents":"<p>用<code>OptionGroup</code>嵌套<code>Option</code>可以实现分组功能</p>\n","codes":[{"language":"vdt","content":"import {Select, Option, OptionGroup} from 'kpc/components/select';\n\n<Select v-model=\"day\">\n    <OptionGroup label=\"工作日\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n    </OptionGroup>\n    <OptionGroup label=\"休息日\">\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </OptionGroup>\n</Select>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":76,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option, OptionGroup} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">OptionGroup</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"工作日\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">OptionGroup</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">OptionGroup</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"休息日\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">OptionGroup</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/multiple/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"多选","order":3},"catalogs":[],"contents":"<p>指定<code>multiple</code>支持多选</p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<Select v-model=\"day\" multiple>\n    <Option value=\"Monday\">星期一</Option>\n    <Option value=\"Tuesday\">星期二</Option>\n    <Option value=\"Wednesday\">星期三</Option>\n    <Option value=\"Thursday\">星期四</Option>\n    <Option value=\"Friday\">星期五</Option>\n    <Option value=\"Saturday\">星期六</Option>\n    <Option value=\"Sunday\">星期天</Option>\n</Select>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":77,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">multiple</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/select/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"尺寸","order":7},"catalogs":[],"contents":"<p><code>size</code>指定三种尺寸：<code>default</code> <code>small</code> <code>mini</code></p>\n","codes":[{"language":"vdt","content":"import {Select, Option} from 'kpc/components/select';\n\n<div>\n    <Select v-model=\"day\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    <Select v-model=\"day\" size=\"small\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n    <Select v-model=\"day\" size=\"mini\">\n        <Option value=\"Monday\">星期一</Option>\n        <Option value=\"Tuesday\">星期二</Option>\n        <Option value=\"Wednesday\">星期三</Option>\n        <Option value=\"Thursday\">星期四</Option>\n        <Option value=\"Friday\">星期五</Option>\n        <Option value=\"Saturday\">星期六</Option>\n        <Option value=\"Sunday\">星期天</Option>\n    </Select>\n</div>"},{"language":"styl","content":".k-select\n    margin-right 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":78,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Select, Option} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/select'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"small\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Select</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"day\"</span> <span class=\"hljs-attr\">size</span>=<span class=\"hljs-string\">\"mini\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Monday\"</span>&gt;</span>星期一<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Tuesday\"</span>&gt;</span>星期二<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Wednesday\"</span>&gt;</span>星期三<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Thursday\"</span>&gt;</span>星期四<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Friday\"</span>&gt;</span>星期五<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Saturday\"</span>&gt;</span>星期六<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Option</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"Sunday\"</span>&gt;</span>星期天<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Option</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Select</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-select</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/slider/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>用<code>min</code>和<code>max</code>指定取值范围，<code>v-model</code>进行双向数据绑定</p>\n","codes":[{"language":"vdt","content":"import Slider from 'kpc/components/slider';\n\n<div>\n    <Slider v-model=\"value1\" />\n    <Slider v-model=\"value2\" min={{ 50 }} max={{ 500 }} />\n</div>"},{"language":"styl","content":".k-slider\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":80,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n&lt;div&gt;\n    &lt;Slider v-model=\"value1\" /&gt;\n    &lt;Slider v-model=\"value2\" min={{ 50 }} max={{ 500 }} /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-slider</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/slider/demos/disabled/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"禁用组件","order":3},"catalogs":[],"contents":"<p>添加<code>disabled</code>禁用组件</p>\n","codes":[{"language":"vdt","content":"import Slider from 'kpc/components/slider';\n\n<div>\n    <Slider disabled value={{ 50 }} />\n    <Slider disabled isRange value={{ [55, 80] }} min={{ 50 }} max={{ 100 }} />\n</div>"},{"language":"styl","content":".k-slider\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":81,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n&lt;div&gt;\n    &lt;Slider disabled value={{ 50 }} /&gt;\n    &lt;Slider disabled isRange value={{ [55, 80] }} min={{ 50 }} max={{ 100 }} /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-slider</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/slider/demos/range/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"范围选择","order":3},"catalogs":[],"contents":"<p>指定<code>isRange</code>使组件支持范围选择，此时<code>v-model</code>绑定的数据为数组，并且不会展示<code>input</code>输入框。</p>\n","codes":[{"language":"vdt","content":"import Slider from 'kpc/components/slider';\n\n<Slider isRange v-model=\"values\" />"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            values: [50, 76],\n        }\n    }\n}"}],"index":82,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Slider</span> <span class=\"hljs-attr\">isRange</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"values\"</span> /&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">values</span>: [<span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">76</span>],\n        }\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/slider/demos/step/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"设置步长","order":1},"catalogs":[],"contents":"<p>通过<code>step</code>可以设置步长，默认步长为<code>1</code></p>\n","codes":[{"language":"vdt","content":"import Slider from 'kpc/components/slider';\n\n<div>\n    <Slider v-model=\"value1\" step={{ 5 }} />\n    <Slider v-model=\"value2\" min={{ 50 }} max={{ 500 }} step={{ 0.1 }} />\n</div>"},{"language":"styl","content":".k-slider\n    margin-bottom 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":83,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Slider <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/slider'</span>;\n\n&lt;div&gt;\n    &lt;Slider v-model=\"value1\" step={{ 5 }} /&gt;\n    &lt;Slider v-model=\"value2\" min={{ 50 }} max={{ 500 }} step={{ 0.1 }} /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-slider</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/spinner/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p>使用<code>v-model</code>进行双向数据绑定，<code>disabled</code>禁用组件</p>\n","codes":[{"language":"vdt","content":"import Spinner from 'kpc/components/spinner';\n\n<div>\n    <Spinner v-model=\"value\" />\n    <Spinner disabled />\n</div>"},{"language":"styl","content":".k-spinner\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":85,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n\n&lt;div&gt;\n    &lt;Spinner v-model=\"value\" /&gt;\n    &lt;Spinner disabled /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-spinner</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/spinner/demos/size/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"尺寸","order":2},"catalogs":[],"contents":"<p><code>size</code>属性定义3中尺寸：<code>default</code>, <code>small</code>, <code>mini</code></p>\n","codes":[{"language":"vdt","content":"import Spinner from 'kpc/components/spinner';\n\n<div>\n    <Spinner />\n    <Spinner size=\"small\" />\n    <Spinner size=\"mini\" />\n</div>"},{"language":"styl","content":".k-spinner\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":86,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n\n&lt;div&gt;\n    &lt;Spinner /&gt;\n    &lt;Spinner size=\"small\" /&gt;\n    &lt;Spinner size=\"mini\" /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-spinner</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/spinner/demos/step/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"最大/小值及步长","order":1},"catalogs":[],"contents":"<p><code>max</code>和<code>min</code>可指定取值范围，<code>step</code>指定步长</p>\n","codes":[{"language":"vdt","content":"import Spinner from 'kpc/components/spinner';\n\n<div>\n    <Spinner v-model=\"value1\" max={{ 10 }} min={{ 0 }} step={{ 1.2 }} />\n    <Spinner v-model=\"value2\" max={{ 10 }} min={{ -10 }} step={{ 0.1 }} />\n</div>"},{"language":"styl","content":".k-spinner\n    margin-right 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":87,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Spinner <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/spinner'</span>;\n\n&lt;div&gt;\n    &lt;Spinner v-model=\"value1\" max={{ 10 }} min={{ 0 }} step={{ 1.2 }} /&gt;\n    &lt;Spinner v-model=\"value2\" max={{ 10 }} min={{ -10 }} step={{ 0.1 }} /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-spinner</span>\n    <span class=\"hljs-attribute\">margin-right</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/steps/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基础用法","order":0},"catalogs":[],"contents":"<p><code>Steps</code>嵌套<code>Step</code>即可实现步骤条，用<code>v-model</code>双向绑定当前指向哪一步，索引从<code>0</code>开始</p>\n","codes":[{"language":"vdt","content":"import {Steps, Step} from 'kpc/components/steps';\nimport Button from 'kpc/components/button';\n\n<div>\n    <Steps v-model=\"index\">\n        <Step title=\"选择配置\">请选择主机的配置信息</Step>\n        <Step title=\"选择弹性IP\">请选择主机弹性IP的配置信息</Step>\n        <Step title=\"设置VPC\" />\n    </Steps>\n    <Button type=\"primary\" ev-click={{ self.next }}\n        disabled={{ self.get('index') === 2 }}\n    >Next Step</Button>\n</div>"},{"language":"styl","content":".k-btn\n    margin-top 20px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            index: 0\n        }\n    }\n\n    next() {\n        this.set('index', this.get('index') + 1);\n    }\n}"}],"index":89,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Steps, Step} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/steps'</span>;\n<span class=\"hljs-keyword\">import</span> Button <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/button'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Steps</span> <span class=\"hljs-attr\">v-model</span>=<span class=\"hljs-string\">\"index\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"选择配置\"</span>&gt;</span>请选择主机的配置信息<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Step</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"选择弹性IP\"</span>&gt;</span>请选择主机弹性IP的配置信息<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Step</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"设置VPC\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Steps</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"primary\"</span> <span class=\"hljs-attr\">ev-click</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.next</span> }}\n        <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">index</span>') === <span class=\"hljs-string\">2</span> }}\n    &gt;</span>Next Step<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-btn</span>\n    <span class=\"hljs-attribute\">margin-top</span> <span class=\"hljs-number\">20px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">index</span>: <span class=\"hljs-number\">0</span>\n        }\n    }\n\n    next() {\n        <span class=\"hljs-keyword\">this</span>.set(<span class=\"hljs-string\">'index'</span>, <span class=\"hljs-keyword\">this</span>.get(<span class=\"hljs-string\">'index'</span>) + <span class=\"hljs-number\">1</span>);\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/steps/demos/error/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"错误状态","order":0},"catalogs":[],"contents":"<p>指定<code>Steps</code>的<code>status</code>属性为<code>error</code>，即可将步骤条置为错误状态</p>\n","codes":[{"language":"vdt","content":"import {Steps, Step} from 'kpc/components/steps';\n\n<Steps value=\"1\" status=\"error\">\n    <Step title=\"选择配置\">请选择主机的配置信息</Step>\n    <Step title=\"选择弹性IP\">请选择主机弹性IP的配置信息</Step>\n    <Step title=\"设置VPC\" />\n</Steps>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":90,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> {Steps, Step} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/steps'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Steps</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">status</span>=<span class=\"hljs-string\">\"error\"</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"选择配置\"</span>&gt;</span>请选择主机的配置信息<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Step</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"选择弹性IP\"</span>&gt;</span>请选择主机弹性IP的配置信息<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Step</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Step</span> <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"设置VPC\"</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Steps</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>上面是一个简单的Table</p>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar scheme = {a: '表头1', b: '表头2'};\nvar data = [{a: '第一行', b: '哈哈2'}, {a: '第二行', b: '哈哈2'}];\n\n<div>\n    <Table scheme={{scheme}} data={{data}}/>\n</div>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":92,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> scheme = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'表头1'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'表头2'</span>};\n<span class=\"hljs-keyword\">var</span> data = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'第一行'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'哈哈2'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'第二行'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'哈哈2'</span>}];\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">scheme</span>=<span class=\"hljs-string\">{{scheme}}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{{data}}/</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/checkType/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"选择框的类型","order":0},"catalogs":[],"contents":"<p>可根据<code>checkType</code>设置选择框的类型：<code>checkbox</code>多选框(默认)/<code>radio</code>单选框/<code>none</code>无选框</p>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar scheme = {a: '表头'};\nvar data1 = [{a: '多选框'}];\nvar data2 = [{a: '单选框'}];\nvar data3 = [{a: '无选框'}];\n\n<div class='no-data-template'>\n    <Table scheme={{scheme}} data={{data1}} />\n    <Table scheme={{scheme}} data={{data2}} checkType='radio'/>\n    <Table scheme={{scheme}} data={{data3}} checkType='none'/>\n</div>"},{"language":"styl","content":".no-data-template\n   display: flex\n   .k-table-wrapper\n       margin-left: 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":94,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> scheme = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'表头'</span>};\n<span class=\"hljs-keyword\">var</span> data1 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'多选框'</span>}];\n<span class=\"hljs-keyword\">var</span> data2 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'单选框'</span>}];\n<span class=\"hljs-keyword\">var</span> data3 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'无选框'</span>}];\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{scheme}} data={{data1}} /&gt;\n    &lt;Table scheme={{scheme}} data={{data2}} checkType='radio'/&gt;\n    &lt;Table scheme={{scheme}} data={{data3}} checkType='none'/&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n   <span class=\"hljs-attribute\">display</span>: flex\n   <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n       <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/checkedKey_s/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"行选中","order":0},"catalogs":[],"contents":"<ul>\n<li><code>rowKey</code>：设置行的<code>key</code>值（默认：行的<code>index</code>）</li>\n<li><code>checkedKey</code>：设置/获取表格被选中的行信息（针对<code>radio</code>）</li>\n<li><code>checkedKeys</code>：设置/获取表格被选中的行信息（针对<code>checkbox</code>）</li>\n</ul>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar data1 = [{a: '选中'}, {a: '不选中'}];\nvar data2 = [{a: '选中'}];\n\n<div class='no-data-template'>\n    <Table scheme={{ {a: 'radio'} }} data={{data1}} checkedKey={{1}}/>\n    <Table scheme={{ {a: 'checkbox'} }} data={{data2}} />\n</div>"},{"language":"styl","content":".no-data-template\n   display: flex\n   .k-table-wrapper\n       margin-left: 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":93,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> data1 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'选中'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'不选中'</span>}];\n<span class=\"hljs-keyword\">var</span> data2 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'选中'</span>}];\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ {a: 'radio'} }} data={{data1}} checkedKey={{1}}/&gt;\n    &lt;Table scheme={{ {a: 'checkbox'} }} data={{data2}} /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n   <span class=\"hljs-attribute\">display</span>: flex\n   <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n       <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/fixHeader/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"表头固定","order":0},"catalogs":[],"contents":"<p>可根据<code>fixHeader</code>设置表头固定：<code>false</code>(默认)</p>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar data1 = [{a: 'false(默认)'}];\nvar data2 = [{a: '表头固定但是没有滚动条，展示不出效果'}];\nvar data3 = [{a: '表头固定啦'}, {a: '下拉'}, {a: 'yeah!'}];\n\n<div class='no-data-template'>\n    <Table scheme={{ {a: 'false'} }} data={{data1}} />\n    <Table scheme={{ {a: 'true'} }} data={{data2}} fixHeader={{true}} />\n    <Table scheme={{ {a: '100px' } }} data={{data3}} fixHeader='100' />\n</div>"},{"language":"styl","content":".no-data-template\n   display: flex\n   .k-table-wrapper\n       margin-left: 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":95,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> data1 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'false(默认)'</span>}];\n<span class=\"hljs-keyword\">var</span> data2 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'表头固定但是没有滚动条，展示不出效果'</span>}];\n<span class=\"hljs-keyword\">var</span> data3 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'表头固定啦'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'下拉'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'yeah!'</span>}];\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ {a: 'false'} }} data={{data1}} /&gt;\n    &lt;Table scheme={{ {a: 'true'} }} data={{data2}} fixHeader={{true}} /&gt;\n    &lt;Table scheme={{ {a: '100px' } }} data={{data3}} fixHeader='100' /&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n   <span class=\"hljs-attribute\">display</span>: flex\n   <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n       <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/noDataTemplate/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义无内容时的展示信息","order":0},"catalogs":[],"contents":"<p>当data为<code>[]</code>时, 可设置<code>noDataTemplate</code>来展示你想展示的信息（默认为： /(ㄒoㄒ)/~~ 没有找到亲要的数据哦~）</p>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar scheme = {a: '表头1', b: '表头2'};\nvar data = [];\nvar tip = '这里没有数据(自定义版本)';\n<div class='no-data-template'>\n    <Table scheme={{scheme}} data={{data}} />\n    <Table scheme={{scheme}} data={{data}} noDataTemplate={{tip}}/>\n</div>"},{"language":"styl","content":".no-data-template\n   display: flex\n   .k-table-wrapper\n       margin-left: 10px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":96,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> scheme = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'表头1'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'表头2'</span>};\n<span class=\"hljs-keyword\">var</span> data = [];\n<span class=\"hljs-keyword\">var</span> tip = <span class=\"hljs-string\">'这里没有数据(自定义版本)'</span>;\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{scheme}} data={{data}} /&gt;\n    &lt;Table scheme={{scheme}} data={{data}} noDataTemplate={{tip}}/&gt;\n&lt;/div&gt;</code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n   <span class=\"hljs-attribute\">display</span>: flex\n   <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n       <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/table/demos/scheme/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"定义表头信息","order":0},"catalogs":[],"contents":"<p><code>scheme</code>对象<code>{key: value}</code>说明:</p>\n<ul>\n<li><code>key-{String}</code>: 根据每一行的<code>item</code>，获取<code>key</code>属性；若<code>key</code>为一个连续获取的字符（即：<code>item.c.c1</code>）会逐级获取，若没获取到，则为<code>undefined</code>。</li>\n<li><code>key-{Object}</code>: <code>key</code>只作为这个表头的<code>ID</code>，实际获取的值为<code>{Object}</code>内<code>template</code>的返回值。<code>{Object}</code>内的<code>title</code>为要展示的表头信息，<code>template</code>方法返回这列要展示的数据（参数接收：每一行的<code>item</code>）。</li>\n<li>PS：<code>template</code>可以返回一个具体的值，也可以返回一个虚拟DOM。</li>\n</ul>\n","codes":[{"language":"vdt","content":"import Table from 'kpc/components/table';\nvar data = [{a: '虚拟DOM', b: '获取到了item.b', c: {c1: 'item.c.c1'}, e: '值形式'}];\nvar scheme = {\n    a: {\n        title: 'a只是个id',\n        template: function(item) {\n           return <a>{{item.a}}</a>\n        }\n    },\n    e: {\n        title: 'e也只是个id',\n        template: function(item) {\n           return item.e;\n        }\n    },\n    b: 'key-{String}形式',\n    'c.c1': 'key为一个连续获取的字符串',\n    'd.d1': '没有这个key'\n};\n\n\n<div class='no-data-template'>\n    <Table scheme={{scheme}} data={{data}} />\n</div>"},{"language":"styl","content":".no-data-template\n   display: flex\n   .k-table-wrapper\n       margin-left: 10px\n       .k-fixed\n           padding: 0"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"}],"index":97,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n<span class=\"hljs-keyword\">var</span> data = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'虚拟DOM'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'获取到了item.b'</span>, <span class=\"hljs-attr\">c</span>: {<span class=\"hljs-attr\">c1</span>: <span class=\"hljs-string\">'item.c.c1'</span>}, <span class=\"hljs-attr\">e</span>: <span class=\"hljs-string\">'值形式'</span>}];\n<span class=\"hljs-keyword\">var</span> scheme = {\n    <span class=\"hljs-attr\">a</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'a只是个id'</span>,\n        <span class=\"hljs-attr\">template</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">item</span>) </span>{\n           <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span>&gt;</span>{{item.a}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span></span>\n        }\n    },\n    <span class=\"hljs-attr\">e</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'e也只是个id'</span>,\n        <span class=\"hljs-attr\">template</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">item</span>) </span>{\n           <span class=\"hljs-keyword\">return</span> item.e;\n        }\n    },\n    <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'key-{String}形式'</span>,\n    <span class=\"hljs-string\">'c.c1'</span>: <span class=\"hljs-string\">'key为一个连续获取的字符串'</span>,\n    <span class=\"hljs-string\">'d.d1'</span>: <span class=\"hljs-string\">'没有这个key'</span>\n};\n\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">'no-data-template'</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Table</span> <span class=\"hljs-attr\">scheme</span>=<span class=\"hljs-string\">{{scheme}}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{{data}}</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n   <span class=\"hljs-attribute\">display</span>: flex\n   <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n       <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span>\n       <span class=\"hljs-selector-class\">.k-fixed</span>\n           <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/transfer/demos/basic/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"基本用法","order":0},"catalogs":[],"contents":"<p>穿梭框基本用法，支持Shift进行多选</p>\n","codes":[{"language":"vdt","content":"import Transfer from 'kpc/components/transfer';\n\n<Transfer data={{ self.get('data') }}/>"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            data: [\n                {label: '主机名0'},\n                {label: '主机名1'},\n                {label: '主机名2'},\n                {label: '主机名3', disabled: true},\n                {label: '主机名4'},\n            ]\n        }\n    }\n}"}],"index":99,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Transfer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/transfer'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Transfer</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">data</span>') }}/&gt;</span></span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: [\n                {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'主机名0'</span>},\n                {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'主机名1'</span>},\n                {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'主机名2'</span>},\n                {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'主机名3'</span>, <span class=\"hljs-attr\">disabled</span>: <span class=\"hljs-literal\">true</span>},\n                {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'主机名4'</span>},\n            ]\n        }\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/components/transfer/demos/label/index.json":
/***/ (function(module, exports) {

module.exports = {"setting":{"title":"自定义渲染列表","order":1},"catalogs":[],"contents":"<p>通过<code>label</code>属性，可以自定义列表渲染逻辑。此时如果你需要启动列表过滤功能<code>filterable</code>，需要通过<code>filter</code>属性，指定自定义过滤函数。</p>\n","codes":[{"language":"vdt","content":"import Transfer from 'kpc/components/transfer';\n\n<Transfer data={{ self.get('data') }} \n    label={{ (data, index, type) => {\n        return <div>\n            <div>{{ data.name }}</div>\n            <p>{{ data.desc }} | {{ data.ip }}</p>\n        </div>\n    } }}\n    filter={{ (data, keywords) => {\n        return data.name.includes(keywords) || \n            data.desc.includes(keywords) ||\n            data.ip.includes(keywords);\n    } }}\n    filterable\n/>"},{"language":"styl","content":".k-item\n    p\n        margin 0\n        font-size 12px"},{"language":"js","content":"import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n\n    defaults() {\n        return {\n            data: [\n                {name: '主机名0', desc: '前端服务器0', ip: '192.168.1.0'},\n                {name: '主机名1', desc: '前端服务器1', ip: '192.168.1.1'},\n                {name: '主机名2', desc: '前端服务器2', ip: '192.168.1.2'},\n                {name: '主机名3', desc: '前端服务器3', ip: '192.168.1.3', disabled: true},\n                {name: '主机名4', desc: '前端服务器4', ip: '192.168.1.4'},\n            ]\n        }\n    }\n}"}],"index":100,"highlighted":[{"language":"vdt","content":"<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Transfer <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/transfer'</span>;\n\n<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Transfer</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">self.get</span>('<span class=\"hljs-attr\">data</span>') }} \n    <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{{</span> (<span class=\"hljs-attr\">data</span>, <span class=\"hljs-attr\">index</span>, <span class=\"hljs-attr\">type</span>) =&gt;</span> {\n        return <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>{{ data.name }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>{{ data.desc }} | {{ data.ip }}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    } }}\n    filter={{ (data, keywords) =&gt; {\n        return data.name.includes(keywords) || \n            data.desc.includes(keywords) ||\n            data.ip.includes(keywords);\n    } }}\n    filterable\n/&gt;</span></code></pre>"},{"language":"styl","content":"<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-item</span>\n    <span class=\"hljs-selector-tag\">p</span>\n        <span class=\"hljs-attribute\">margin</span> <span class=\"hljs-number\">0</span>\n        <span class=\"hljs-attribute\">font-size</span> <span class=\"hljs-number\">12px</span></code></pre>"},{"language":"js","content":"<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: [\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机名0'</span>, <span class=\"hljs-attr\">desc</span>: <span class=\"hljs-string\">'前端服务器0'</span>, <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'192.168.1.0'</span>},\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机名1'</span>, <span class=\"hljs-attr\">desc</span>: <span class=\"hljs-string\">'前端服务器1'</span>, <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'192.168.1.1'</span>},\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机名2'</span>, <span class=\"hljs-attr\">desc</span>: <span class=\"hljs-string\">'前端服务器2'</span>, <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'192.168.1.2'</span>},\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机名3'</span>, <span class=\"hljs-attr\">desc</span>: <span class=\"hljs-string\">'前端服务器3'</span>, <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'192.168.1.3'</span>, <span class=\"hljs-attr\">disabled</span>: <span class=\"hljs-literal\">true</span>},\n                {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机名4'</span>, <span class=\"hljs-attr\">desc</span>: <span class=\"hljs-string\">'前端服务器4'</span>, <span class=\"hljs-attr\">ip</span>: <span class=\"hljs-string\">'192.168.1.4'</span>},\n            ]\n        }\n    }\n}</code></pre>"}]}

/***/ }),

/***/ "./site/src/components/article/index.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _dec, _desc, _value, _class, _init, _class2, _temp;

var _intact = __webpack_require__("./node_modules/intact-vue/src/index.js");

var _intact2 = _interopRequireDefault(_intact);

var _index = __webpack_require__("./site/src/components/article/index.vdt");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
    var desc = {};
    Object['ke' + 'ys'](descriptor).forEach(function (key) {
        desc[key] = descriptor[key];
    });
    desc.enumerable = !!desc.enumerable;
    desc.configurable = !!desc.configurable;

    if ('value' in desc || desc.initializer) {
        desc.writable = true;
    }

    desc = decorators.slice().reverse().reduce(function (desc, decorator) {
        return decorator(target, property, desc) || desc;
    }, desc);

    if (context && desc.initializer !== void 0) {
        desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
        desc.initializer = undefined;
    }

    if (desc.initializer === void 0) {
        Object['define' + 'Property'](target, property, desc);
        desc = null;
    }

    return desc;
}

var _default = (_dec = _intact2.default.template(), (_class = (_temp = _class2 = function (_Intact) {
    _inherits(_default, _Intact);

    function _default() {
        _classCallCheck(this, _default);

        return _possibleConstructorReturn(this, (_default.__proto__ || Object.getPrototypeOf(_default)).apply(this, arguments));
    }

    return _default;
}(_intact2.default), _class2.template = _index2.default, _temp), (_applyDecoratedDescriptor(_class, 'template', [_dec], (_init = Object.getOwnPropertyDescriptor(_class, 'template'), _init = _init ? _init.value : undefined, {
    enumerable: true,
    configurable: true,
    writable: true,
    initializer: function initializer() {
        return _init;
    }
}), _class)), _class));

exports.default = _default;
module.exports = exports['default'];

/***/ }),

/***/ "./site/src/components/article/index.vdt":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
            value: true
});

exports.default = function (obj, _Vdt, blocks, $callee) {

            _Vdt || (_Vdt = Vdt);
            obj || (obj = {});
            blocks || (blocks = {});
            var h = _Vdt.miss.h,
                hc = _Vdt.miss.hc,
                hu = _Vdt.miss.hu,
                widgets = this && this.widgets || {},
                _blocks = {},
                __blocks = {},
                __u = _Vdt.utils,
                extend = __u.extend,
                _e = __u.error,
                _className = __u.className,
                __o = __u.Options,
                _getModel = __o.getModel,
                _setModel = __o.setModel,
                _setCheckboxModel = __u.setCheckboxModel,
                _detectCheckboxChecked = __u.detectCheckboxChecked,
                _setSelectModel = __u.setSelectModel,
                self = this.data,
                scope = obj,
                Animate = self && self.Animate,
                parent = ($callee || {})._super;

            return h('div', null, [function () {
                        try {
                                    return [self.get('demos').length][0];
                        } catch (e) {
                                    _e(e);
                        }
            }.call(this) ? h('div', null, [h('h1', null, '示例'), '\n        ', function () {
                        var _this = this;

                        try {
                                    return [self.get('demos').map(function (Demo) {
                                                return h('div', null, [h('div', null, h(Demo.default, { 'children': null, '_context': _this }), 'example-opera'), h('div', null, [h('div', null, function () {
                                                            try {
                                                                        return [Demo.data.setting.title][0];
                                                            } catch (e) {
                                                                        _e(e);
                                                            }
                                                }.call(_this), 'title'), h('div', { 'innerHTML': function () {
                                                                        try {
                                                                                    return [Demo.data.contents][0];
                                                                        } catch (e) {
                                                                                    _e(e);
                                                                        }
                                                            }.call(_this) }, null, 'desc')], 'example-desc'), h('div', null, [h(_tabs.Tabs, { 'children': _Vdt.utils.map(function () {
                                                                        try {
                                                                                    return [Demo.data.highlighted][0];
                                                                        } catch (e) {
                                                                                    _e(e);
                                                                        }
                                                            }.call(_this), function (value, key) {
                                                                        return h(_tabs.Tab, { 'value': function () {
                                                                                                try {
                                                                                                            return [value.file ? value.file : 'index.' + value.language][0];
                                                                                                } catch (e) {
                                                                                                            _e(e);
                                                                                                }
                                                                                    }.call(this), 'children': ['\n                            ', function () {
                                                                                                try {
                                                                                                            return [value.file ? value.file : 'index.' + value.language][0];
                                                                                                } catch (e) {
                                                                                                            _e(e);
                                                                                                }
                                                                                    }.call(this), '\n                        '], '_context': this });
                                                            }, _this), '_context': _this, value: _getModel(self, function () {
                                                                        try {
                                                                                    return ['file' + Demo.data.index][0];
                                                                        } catch (e) {
                                                                                    _e(e);
                                                                        }
                                                            }.call(_this)), 'ev-$change:value': function ev$changeValue(__c, __n) {
                                                                        _setModel(self, function () {
                                                                                    try {
                                                                                                return ['file' + Demo.data.index][0];
                                                                                    } catch (e) {
                                                                                                _e(e);
                                                                                    }
                                                                        }.call(this), __n);
                                                            } }), h('div', { 'innerHTML': function () {
                                                                        try {
                                                                                    return [(Demo.data.highlighted.find(function (item) {
                                                                                                var file = item.file ? item.file : 'index.' + item.language;
                                                                                                return file === self.get('file' + Demo.data.index);
                                                                                    }) || {}).content][0];
                                                                        } catch (e) {
                                                                                    _e(e);
                                                                        }
                                                            }.call(_this) }, null, 'code')], 'example-code')], _className(function () {
                                                            try {
                                                                        return ['example index-' + Demo.data.index][0];
                                                            } catch (e) {
                                                                        _e(e);
                                                            }
                                                }.call(_this)));
                                    })][0];
                        } catch (e) {
                                    _e(e);
                        }
            }.call(this), '\n    '], null, 'demos') : undefined, h('div', { 'innerHTML': function () {
                                    try {
                                                return [self.get('contents')][0];
                                    } catch (e) {
                                                _e(e);
                                    }
                        }.call(this) }, null, 'api', 'contents')], 'contents');
};

var _tabs = __webpack_require__("./components/tabs/index.js");

module.exports = exports['default'];

/***/ })

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2JyZWFkY3J1bWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LnN0eWw/YmY2MyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2JyZWFkY3J1bWIvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9pdGVtLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9pdGVtLnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2NoZWNrYm94L2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvY2hlY2tib3gvaW5kZXguc3R5bD8wOWI0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvY2hlY2tib3gvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXguc3R5bD8yY2QzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9kaWFsb2cvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9kaWFsb2cvaW5kZXguc3R5bD8wNjg5Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZGlhbG9nL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Ryb3Bkb3duL2Ryb3Bkb3duLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZHJvcGRvd24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9kcm9wZG93bi9pbmRleC5zdHlsPzA3YmYiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9kcm9wZG93bi9pdGVtLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZHJvcGRvd24vaXRlbS52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9kcm9wZG93bi9tZW51LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZHJvcGRvd24vbWVudS52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9lZGl0YWJsZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2VkaXRhYmxlL2luZGV4LnN0eWw/NTIzYiIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2VkaXRhYmxlL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Zvcm0vZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Zvcm0vZm9ybS52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9mb3JtL2Zvcm1JdGVtLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZm9ybS9mb3JtSXRlbS52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9mb3JtL2Zvcm1JdGVtV3JhcHBlci5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9mb3JtL2luZGV4LnN0eWw/NjFjOCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2Zvcm0vbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2dyaWQvY29sLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZ3JpZC9jb2wudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZ3JpZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2dyaWQvaW5kZXguc3R5bD82YjllIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZ3JpZC9yb3cuanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9ncmlkL3Jvdy52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9ncmlkL3V0aWxzLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvaW5wdXQvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9pbnB1dC9pbmRleC5zdHlsPzIzZTMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9pbnB1dC9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9tZXNzYWdlL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvbWVzc2FnZS9pbmRleC5zdHlsPzFmYzMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9tZXNzYWdlL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZS52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9tb3ZlV3JhcHBlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL21vdmVXcmFwcGVyL3Bvc2l0aW9uLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BhZ2luYXRpb24vaW5kZXguc3R5bD80NGMzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9wcm9ncmVzcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Byb2dyZXNzL2luZGV4LnN0eWw/ZmU4MCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Byb2dyZXNzL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3JhZGlvL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcmFkaW8vaW5kZXguc3R5bD80YTZjIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcmFkaW8vaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2Nyb2xsU2VsZWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2Nyb2xsU2VsZWN0L2luZGV4LnN0eWw/NWFmMiIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3Njcm9sbFNlbGVjdC9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zZWxlY3QvZ3JvdXAuanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zZWxlY3QvZ3JvdXAudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2VsZWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2VsZWN0L2luZGV4LnN0eWw/M2MwMCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3NlbGVjdC9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zZWxlY3Qvb3B0aW9uLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LnN0eWw/Y2YyOSIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3NsaWRlci9pbmRleC52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zcGlubmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5zdHlsPzQyNGQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zcGlubmVyL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3N0ZXBzL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc3RlcHMvaW5kZXguc3R5bD9kNmRlIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc3RlcHMvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc3RlcHMvc3RlcC5qcyIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3N0ZXBzL3N0ZXAudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFibGUvY29sdW1uLmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFibGUvY29sdW1uLnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3RhYmxlL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFibGUvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFibGUvcm93LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFibGUvcm93LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3RhYnMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy90YWJzL2luZGV4LnN0eWw/YTIxNiIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3RhYnMvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFicy90YWIuanMiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy90YWJzL3RhYi52ZHQiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy90b29sdGlwL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdG9vbHRpcC9pbmRleC5zdHlsPzYzN2MiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy90b29sdGlwL2luZGV4LnZkdCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3RyYW5zZmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdHJhbnNmZXIvaW5kZXguc3R5bD80YTZhIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdHJhbnNmZXIvaW5kZXgudmR0Iiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvY2hlY2tib3gvaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2RpYWxvZy9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvZHJvcGRvd24vaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL2VkaXRhYmxlL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9mb3JtL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9ncmlkL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9pbnB1dC9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvbWVzc2FnZS9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvcHJvZ3Jlc3MvaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3JhZGlvL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zY3JvbGxTZWxlY3QvaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3NlbGVjdC9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zcGlubmVyL2luZGV4LnN0eWwiLCJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zdGVwcy9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdGFicy9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdG9vbHRpcC9pbmRleC5zdHlsIiwid2VicGFjazovLy8uL2NvbXBvbmVudHMvdHJhbnNmZXIvaW5kZXguc3R5bCIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9icmVhZGNydW1iL2RlbW9zL3NlcGFyYXRvci9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2Rpc2FibGVkL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2J1dHRvbi9kZW1vcy9ncm91cC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvaWNvbi9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvbG9hZGluZy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3Mvc2l6ZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvdGFnTmFtZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy9ncm91cC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy92YWx1ZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9kYXRlcGlja2VyL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2RhdGVwaWNrZXIvZGVtb3MvY2xlYXJhYmxlL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2RhdGVwaWNrZXIvZGVtb3MvZGF0ZXRpbWUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9kaXNhYmxlZERhdGUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9tYXhNaW4vaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9tdWx0aXBsZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9kaWFsb2cvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZGlhbG9nL2RlbW9zL2Jsb2NrL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9ldmVudHMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZGlhbG9nL2RlbW9zL2V4dGVuZHMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZHJvcGRvd24vZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZHJvcGRvd24vZGVtb3MvZGlzYWJsZWQvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZHJvcGRvd24vZGVtb3MvbmVzdGVkL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2Ryb3Bkb3duL2RlbW9zL3Bvc2l0aW9uL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2Ryb3Bkb3duL2RlbW9zL3RyaWdnZXIvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZWRpdGFibGUvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZWRpdGFibGUvZGVtb3MvdmFsaWRhdGUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZm9ybS9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9mb3JtL2RlbW9zL2N1c3RvbS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9mb3JtL2RlbW9zL2xhYmVsL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2Zvcm0vZGVtb3MvdmFyaWFibGUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvZ3JpZC9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9ncmlkL2RlbW9zL2d1dHRlci9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy9hdXRvd2lkdGgvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYmxvY2tzL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2lucHV0L2RlbW9zL2NsZWFyYWJsZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy9zaXplL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL2lucHV0L2RlbW9zL3RleHRhcmVhL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL21lc3NhZ2UvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvbWVzc2FnZS9kZW1vcy9jdXN0b20vaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvbWVzc2FnZS9kZW1vcy9kdXJhdGlvbi9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3BhZ2luYXRpb24vZGVtb3MvY291bnRzL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3BhZ2luYXRpb24vZGVtb3MvY3VycmVudC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL2dvdG8vaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9kZW1vcy9zaXplL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2NoaWxkcmVuL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2NpcmNsZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9wcm9ncmVzcy9kZW1vcy9zaXplL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL3N0YXR1cy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9yYWRpby9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9yYWRpby9kZW1vcy9ncm91cC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9yYWRpby9kZW1vcy92YWx1ZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL2NsZWFyYWJsZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvY3VzdG9tL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9kaXNhYmxlZC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZmlsdGVyYWJsZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZ3JvdXAvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL211bHRpcGxlL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9zaXplL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zbGlkZXIvZGVtb3MvZGlzYWJsZWQvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvc2xpZGVyL2RlbW9zL3JhbmdlL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9zdGVwL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NwaW5uZXIvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvc3Bpbm5lci9kZW1vcy9zaXplL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3NwaW5uZXIvZGVtb3Mvc3RlcC9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zdGVwcy9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy9zdGVwcy9kZW1vcy9lcnJvci9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9iYXNpYy9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9jaGVja1R5cGUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3MvY2hlY2tlZEtleV9zL2luZGV4Lmpzb24iLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9jb21wb25lbnRzL3RhYmxlL2RlbW9zL2ZpeEhlYWRlci9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9ub0RhdGFUZW1wbGF0ZS9pbmRleC5qc29uIiwid2VicGFjazovLy8uL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9zY2hlbWUvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvdHJhbnNmZXIvZGVtb3MvYmFzaWMvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL2NvbXBvbmVudHMvdHJhbnNmZXIvZGVtb3MvbGFiZWwvaW5kZXguanNvbiIsIndlYnBhY2s6Ly8vLi9zaXRlL3NyYy9jb21wb25lbnRzL2FydGljbGUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vc2l0ZS9zcmMvY29tcG9uZW50cy9hcnRpY2xlL2luZGV4LnZkdCJdLCJuYW1lcyI6WyJCcmVhZGNydW1iIiwidGVtcGxhdGUiLCJzZXBhcmF0b3IiLCJ1bmRlZmluZWQiLCJCcmVhZGNydW1iSXRlbSIsIm9iaiIsIl9WZHQiLCJibG9ja3MiLCIkY2FsbGVlIiwiVmR0IiwiaCIsIm1pc3MiLCJoYyIsImh1Iiwid2lkZ2V0cyIsIl9ibG9ja3MiLCJfX2Jsb2NrcyIsIl9fdSIsInV0aWxzIiwiZXh0ZW5kIiwiX2UiLCJlcnJvciIsIl9jbGFzc05hbWUiLCJjbGFzc05hbWUiLCJfX28iLCJPcHRpb25zIiwiX2dldE1vZGVsIiwiZ2V0TW9kZWwiLCJfc2V0TW9kZWwiLCJzZXRNb2RlbCIsIl9zZXRDaGVja2JveE1vZGVsIiwic2V0Q2hlY2tib3hNb2RlbCIsIl9kZXRlY3RDaGVja2JveENoZWNrZWQiLCJkZXRlY3RDaGVja2JveENoZWNrZWQiLCJfc2V0U2VsZWN0TW9kZWwiLCJzZXRTZWxlY3RNb2RlbCIsInNlbGYiLCJkYXRhIiwic2NvcGUiLCJBbmltYXRlIiwicGFyZW50IiwiX3N1cGVyIiwiZ2V0IiwiY2hpbGRyZW4iLCJzdHlsZSIsImNsYXNzTmFtZU9iaiIsIl9jaGlsZHJlbiIsIkFycmF5IiwiaXNBcnJheSIsImUiLCJjYWxsIiwibWFwIiwidk5vZGUiLCJpbmRleCIsInRhZyIsInByb3BzIiwibGVuZ3RoIiwidG8iLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJvbkNsaWNrIiwiQ2hlY2tib3giLCJkaXNhYmxlZCIsInZhbHVlIiwidHJ1ZVZhbHVlIiwiZmFsc2VWYWx1ZSIsIm1vZGVsIiwiaXNDaGVja2VkIiwic2xpY2UiLCJpbmRleE9mIiwic3BsaWNlIiwic2V0IiwicHJvcFR5cGVzIiwiQm9vbGVhbiIsInJlZiIsImtleSIsInJlc3QiLCJjaGVja2VkIiwiX19lIiwiZ2V0Tm93RGF0ZSIsIm5vdyIsIkRhdGUiLCJzZXRIb3VycyIsInNldE1pbnV0ZXMiLCJzZXRTZWNvbmRzIiwiRGF0ZXBpY2tlciIsImNsZWFyYWJsZSIsIm1heERhdGUiLCJtaW5EYXRlIiwicGxhY2Vob2xkZXIiLCJkaXNhYmxlZERhdGUiLCJkYXRlIiwibXVsdGlwbGUiLCJzaXplIiwidHlwZSIsImhvdXJzIiwibWludXRlcyIsInNlY29uZHMiLCJkaXNhYmxlZEhvdXJzIiwiZGlzYWJsZWRNaW51dGVzIiwiZGlzYWJsZWRTZWNvbmRzIiwiX3Nob3dEYXRlIiwiX25vdyIsIl9pc1Nob3dZZWFyUGlja2VyIiwiX2lzU2VsZWN0VGltZSIsImdldERhdGVTdHJpbmciLCJyZWZzIiwiY2FsZW5kYXIiLCJoaWRlIiwiX3Jhd0V2ZW50IiwiX2Ryb3Bkb3duIiwidmFsdWVzIiwicHVzaCIsIl9kYXRlIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJqb2luIiwiX3RpbWUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiYSIsImIiLCJhWWVhciIsImJZZWFyIiwiYU1vbnRoIiwiYk1vbnRoIiwiYURheSIsImJEYXkiLCJpc0xUIiwic3RvcFByb3BhZ2F0aW9uIiwic2V0UmVsYXRpdmVNb250aCIsInNldFJlbGF0aXZlWWVhciIsIm1vbnRoIiwiZ2V0U2hvd0RhdGUiLCJzZXRNb250aCIsInllYXIiLCJzZXRGdWxsWWVhciIsImMiLCJzZXRZZWFyIiwidiIsInZhbHVlRGF0ZSIsIm5hbWUiLCJzaG93RGF0ZSIsIm15IiwiYXQiLCJvbkhpZGUiLCJvbkJlZm9yZVNob3ciLCJvbkNsZWFyIiwic3VmZml4IiwiY29udGVudCIsInByZXZZZWFyIiwicHJldk1vbnRoIiwic2hvd1llYXJQaWNrZXIiLCJuZXh0WWVhciIsIm5leHRNb250aCIsInJldCIsInN0YXJ0Iiwic2V0RGF0ZSIsInN0YXJ0V2Vla2RheSIsImdldERheSIsImkiLCJfbW9udGgiLCJpc0dUIiwic2VsZWN0IiwiYmluZCIsImZpbmQiLCJpc0VxdWFsIiwicmVzdWx0Iiwib25DaGFuZ2VZZWFyIiwibGFiZWwiLCJvbkNoYW5nZU1vbnRoIiwiY2FuY2VsIiwib25DaGFuZ2VUaW1lIiwiYXBwZW5kIiwiRGlhbG9nIiwidGl0bGUiLCJsb2FkaW5nIiwiZGlzYWJsZWRPayIsIm9rVGV4dCIsImNhbmNlbFRleHQiLCJfZHJhZ2dpbmciLCJvbiIsImlzU2hvdyIsIl9jZW50ZXIiLCJwYXJlbnRWTm9kZSIsIl91c2VBc0NvbXBvbmVudCIsImxhc3RWTm9kZSIsIm5leHRWTm9kZSIsIl9fZGlhbG9nIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2VzY0Nsb3NlIiwiY2xvc2UiLCJ0cmlnZ2VyIiwicmVuZGVyZWQiLCJzaG93IiwiaW5pdCIsIm1vdW50IiwiaW5pdGVkIiwia2V5Q29kZSIsImRlc3Ryb3llZCIsInZkdCIsIl8kZGVzdHJveSIsIm1vdW50ZWQiLCJkaWFsb2ciLCJ3aGljaCIsIl94Iiwib2Zmc2V0TGVmdCIsImNsaWVudFgiLCJfeSIsIm9mZnNldFRvcCIsImNsaWVudFkiLCJfd2lkdGgiLCJvZmZzZXRXaWR0aCIsIl9oZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCJfbW92ZSIsIl9kcmFnRW5kIiwiYm9keSIsImxlZnQiLCJNYXRoIiwibWluIiwibWF4Iiwic2Nyb2xsV2lkdGgiLCJ0b3AiLCJzY3JvbGxIZWlnaHQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZWxlbWVudCIsIl9sZWF2ZUVuZCIsIl9kcmFnU3RhcnQiLCJoZWFkZXIiLCJmb290ZXIiLCJvayIsIiRlbGVtZW50IiwiZG9tIiwiRHJvcGRvd24iLCJfc2F2ZU9yaWdpbmFsRXZlbnRzIiwib3JpZ2luUHJvcHMiLCJfaGFzU2F2ZWQiLCJfZXZDbGljayIsIl9ldk1vdXNlRW50ZXIiLCJfZXZNb3VzZUxlYXZlIiwic2lsZW50IiwiZHJvcGRvd24iLCJmbiIsImlzRm9jdXMiLCJtZW51IiwiZm9jdXNJdGVtQnlJbmRleCIsImltbWVkaWF0ZWx5IiwiV3JhcHBlciIsImluVnVlIiwicG9zaXRpb24iLCJWdWVXcmFwcGVyIiwiX1dyYXBwZXIiLCJmdW5jdGlvbmFsV3JhcHBlciIsIkRyb3Bkb3duTWVudSIsIkRyb3Bkb3duSXRlbSIsImhpZGVPblNlbGVjdCIsIl9pc0ZvY3VzIiwiYW5jZXN0b3IiLCJfZmluZEFuY2VzdG9yRHJvcGRvd25NZW51IiwiaXRlbXMiLCJmb2N1c0l0ZW0iLCJfaXNTdWJNZW51IiwiZWxSZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwicEVsIiwicEVsUmVjdCIsImJvdHRvbU92ZXJmbG93RGlzdGFuY2UiLCJib3R0b20iLCJ0b3BPdmVyZmxvd0Rpc3RhbmNlIiwic2Nyb2xsVG9wIiwiaXNGaXJzdCIsIl9vbkNsaWNrIiwiX29uTW91c2VFbnRlciIsIl9vbk1vdXNlTGVhdmUiLCJzdWJEcm9wZG93bnMiLCJmb2N1c0luZGV4IiwibG9ja2VkIiwiX2FkZERvY3VtZW50RXZlbnRzIiwiX3JlbW92ZURvY3VtZW50RXZlbnRzIiwiX2ZpbmRQYXJlbnREcm9wZG93bk1lbnUiLCJjbGVhclRpbWVvdXQiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJvZiIsIl9vbkRvY3VtZW50Q2xpY2siLCJfb25LZXlkb3duIiwidGFyZ2V0IiwiY29udGFpbnMiLCJfaXNDbGlja1N1Yk1lbnUiLCJfZm9jdXNOZXh0SXRlbSIsIl9mb2N1c1ByZXZJdGVtIiwiX3Nob3dTdWJNZW51IiwiX2hpZGVTdWJNZW51IiwiX3NlbGVjdEl0ZW0iLCJwcmV2ZW50RGVmYXVsdCIsImRpcmVjdGlvbiIsIm9sZEluZGV4IiwiZml4SW5kZXgiLCJ1bkZvY3VzIiwiZm9jdXMiLCJzaG93TWVudUFuZEZvY3VzIiwiaGlkZU1lbnUiLCJpdGVtIiwic3ViTWVudXMiLCJzdWJNZW51IiwiZXZlbnRzIiwiRWRpdGFibGUiLCJlZGl0aW5nIiwicmVxdWlyZWQiLCJ2YWxpZGF0ZSIsInRpcCIsInRyaW0iLCJpbnZhbGlkIiwiaW5pdFZhbHVlIiwiaW5wdXQiLCJfc2V0VmFsdWUiLCJfb25CbHVyIiwidmFsaWQiLCJSZWdFeHAiLCJ0ZXN0IiwiU3RyaW5nIiwiTnVtYmVyIiwiX2VkaXQiLCJGb3JtIiwicnVsZXMiLCJmb3JFYWNoIiwiUHJvbWlzZSIsImFsbCIsInRoZW4iLCJldmVyeSIsInJlc2V0IiwibWV0aG9kcyIsImlzVmFsaWQiLCJtZXNzYWdlcyIsImNsYXNzTmFtZXMiLCJhZGRNZXRob2QiLCJzdWJtaXQiLCJGb3JtSXRlbSIsImlzRGlydHkiLCJtZXNzYWdlIiwiZXJyb3JDbGFzc05hbWUiLCJodG1sRm9yIiwiaGlkZUxhYmVsIiwidmFsaWRhdGVJZkRpcnR5IiwiZm9ybSIsIkVycm9yIiwiZm9ybVJ1bGVzIiwic2VsZlJ1bGVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmYXVsdE1lc3NhZ2VzIiwiY3VzdG9tTWVzc2FnZXMiLCJnZXRSdWxlcyIsImRlZmF1bHRDbGFzc05hbWVzIiwiY3VzdG9tQ2xhc3NOYW1lcyIsIl9jYW5jZWwiLCJwcm9taXNlcyIsImtleXMiLCJydWxlIiwiY29uc29sZSIsIndhcm4iLCJwIiwicHJvbWlzZSIsImdldE1lc3NhZ2UiLCJnZXRDbGFzc05hbWUiLCJlcnIiLCJjYW5jZWxsZWQiLCJjb25jYXQiLCIkbmV4dFRpY2siLCJfZGlydHkiLCJfY29udGV4dCIsImRlY2ltYWxQbGFjZXMiLCJudW0iLCJtYXRjaCIsImRpZ2l0cyIsImVtYWlsIiwidXJsIiwidG9TdHJpbmciLCJkYXRlSVNPIiwibnVtYmVyIiwibWluTGVuZ3RoIiwicGFyYW0iLCJtYXhMZW5ndGgiLCJyYW5nZUxlbmd0aCIsInJhbmdlIiwic3RlcCIsImRlY2ltYWxzIiwidG9JbnQiLCJyb3VuZCIsInBvdyIsImVxdWFsVG8iLCJlcXVhbFZhbHVlIiwiZXF1YWxJdGVtIiwiZ2V0SXRlbSIsIl9oYXNCaW5kRXF1YWxUb0NhbGxiYWNrIiwiX2VxdWFsVG9DYWxsYmFjayIsIm9mZiIsImNvdW50IiwibWV0aG9kIiwiQ29sIiwic3BhbiIsIm9mZnNldCIsImd1dHRlciIsImd1dHRlclN0eWxlIiwicmVxdWlyZSIsImhhc0d1dHRlciIsIlJvdyIsInByb3AiLCJtYXJnaW4iLCJzaWduIiwiSW5wdXQiLCJkZWZhdWx0VmFsdWUiLCJyZWFkb25seSIsInJvd3MiLCJzcGVsbGNoZWNrIiwiYXV0b1dpZHRoIiwiZmx1aWQiLCJ3aWR0aCIsIl9hZGp1c3RXaWR0aCIsImZha2UiLCJwcmVwZW5kIiwicHJlZml4IiwicmVkdWNlIiwibWVtbyIsIl9wcm94eUV2ZW50Iiwid3JhcHBlckV2ZW50cyIsIl9vbklucHV0IiwiY2xlYXIiLCJpZCIsIk1lc3NhZ2UiLCJkdXJhdGlvbiIsImNsb3NhYmxlIiwiX2lzSW5zdGFuY2UiLCJhcmdzIiwicGFyZW50RG9tIiwiY3JlYXRlQ29tbWVudCIsIk1lc3NhZ2VBbmltYXRlIiwibm90aWNlIiwiZGVsZXRlIiwiTWVzc2FnZXMiLCJfbW91bnQiLCJfaXNWdWUiLCJpbmZvIiwic3VjY2VzcyIsIndhcm5pbmciLCJ1cGRhdGUiLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJNb3ZlV3JhcHBlciIsImF1dG9EZXN0cm95IiwiY29udGFpbmVyIiwiVHlwZXMiLCJDb21wb25lbnRDbGFzc09ySW5zdGFuY2UiLCJyZW1vdmUiLCJfZGVzdHJveSIsInF1ZXJ5U2VsZWN0b3IiLCJhcHBlbmRDaGlsZCIsImFicyIsInJIb3Jpem9udGFsIiwiclZlcnRpY2FsIiwick9mZnNldCIsInJQb3NpdGlvbiIsInJQZXJjZW50IiwiZWxlbSIsIm9wdGlvbnMiLCJnZXREaW1lbnNpb25zIiwidGFyZ2V0V2lkdGgiLCJ0YXJnZXRIZWlnaHQiLCJoZWlnaHQiLCJ0YXJnZXRPZmZzZXQiLCJiYXNlUG9zaXRpb24iLCJjb2xsaXNpb24iLCJzcGxpdCIsIm9mZnNldHMiLCJwb3MiLCJob3Jpem9udGFsT2Zmc2V0IiwiZXhlYyIsInZlcnRpY2FsT2Zmc2V0IiwiYXRPZmZzZXQiLCJnZXRPZmZzZXRzIiwiZWxlbVdpZHRoIiwiZWxlbUhlaWdodCIsIm15T2Zmc2V0IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImVsZW1Qb3NpdGlvbiIsInVzaW5nIiwicmlnaHQiLCJmZWVkYmFjayIsImhvcml6b250YWwiLCJ2ZXJ0aWNhbCIsImltcG9ydGFudCIsIm5vZGVUeXBlIiwiZCIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsInNjcm9sbExlZnQiLCJwYWdlWSIsInBhZ2VYIiwicmVjdCIsIm93bmVyRG9jdW1lbnQiLCJkZWZhdWx0VmlldyIsInBhcnNlRmxvYXQiLCJQYWdpbmF0aW9uIiwidG90YWwiLCJjdXJyZW50IiwibGltaXQiLCJjb3VudHMiLCJzaG93VG90YWwiLCJsaW1pdHMiLCJzaG93R290byIsImNoYW5nZVBhZ2UiLCJwYWdlIiwidG90YWxQYWdlcyIsImNlaWwiLCJwYXJzZUludCIsInBhZ2luYXRpb25CdXR0b24iLCJwYWdpbmF0aW9uRG90IiwiY2FsbGJhY2siLCJtaW5Db3VudCIsIm1heENvdW50IiwicHJldlBhZ2UiLCJuZXh0UGFnZSIsInByZXYiLCJmYXN0TmV4dCIsImZhc3RQcmV2IiwibWlkQ291bnQiLCJtaWQiLCJmbG9vciIsIm5leHQiLCJfX2MiLCJfX24iLCJfZ290byIsImZpeFBlcmNlbnQiLCJwZXJjZW50IiwiUHJvZ3Jlc3MiLCJpc091dGVyVGV4dCIsImlzSW5uZXJUZXh0Iiwic3RhdHVzIiwic3Ryb2tlV2lkdGgiLCJfaW5pdFN0YXR1cyIsInIiLCJjaXJjdW1mZXJlbmNlIiwiUEkiLCJSYWRpbyIsIlNjcm9sbFNlbGVjdCIsIl9saXN0IiwiX3RyYW5zbGF0ZSIsIl9tYXJnaW5Ub3AiLCJfc2V0TGlzdCIsImxvY2siLCJvbldoZWVsIiwiX29uV2hlZWwiLCJ0b3RhbEhlaWdodCIsIndyYXBwZXIiLCJfZGVsdGFZIiwiaGFsZiIsIml0ZW1IZWlnaHQiLCJfaW5pdFkiLCJfaXRlbUhlaWdodCIsImRlbHRhWSIsIm9mZnNldEluZGV4IiwiX3NldEJ5UmVsYXRpdmVJbmRleCIsImlzU2V0VHJhbnNsYXRlIiwiZmluZEluZGV4IiwibCIsInRyYW5zZm9ybSIsIm1hcmdpblRvcCIsIl9zZWxlY3QiLCJPcHRpb25Hcm91cCIsIlNlbGVjdCIsImZpbHRlcmFibGUiLCJrZXl3b3JkcyIsIl9zaG93IiwiYXN5bmMiLCJfZm9jdXNJbnB1dCIsIl9yZXNldFNlYXJjaCIsIm1lbnVFbGVtZW50IiwibWVudVdpZHRoIiwiT3B0aW9uIiwiaGFzVmFsdWUiLCJpc0dyb3VwIiwibGFiZWxzIiwiaGFuZGxlUHJvcHMiLCJhY3RpdmUiLCJ0bXAiLCJ0b0xvd2VyQ2FzZSIsInRleHQiLCJfb25TZWxlY3QiLCJPcHRpb25zVk5vZGVzIiwiTWVudSIsIl9wb3NpdGlvbiIsIl9vbkNoYW5nZVNob3ciLCJfb25TZWFyY2giLCJfc2VsZWN0SW5wdXQiLCJfZGVsZXRlIiwiX29uRm9jdXMiLCJfb25DbGVhciIsIlNsaWRlciIsImlzUmFuZ2UiLCJ1bml0IiwiaXNTaG93RW5kIiwiaXNTaG93SW5wdXQiLCJfc2xpZGVyVmFsdWUiLCJfaW5wdXRWYWx1ZSIsIl9pc0RyYWdnaW5nIiwiX2lzRmlyc3QiLCJfaXNTZWNvbmQiLCJfc2V0Rml4ZWRWYWx1ZSIsInZhbCIsImZpeGVkVmFsdWUiLCJfZ2V0Rml4ZWRWYWx1ZSIsImZpeCIsImlzTmFOIiwidG9GaXhlZCIsImN1cnJlbnRQb3NpdGlvbiIsIm5ld1ZhbHVlIiwiX2dldFNsaWRpbmdWYWx1ZSIsImxlZnRCdG5Qb3NpdGlvbiIsIiRzbGlkZXJGaXJzdEJ0biIsInJpZ2h0QnRuUG9zaXRpb24iLCIkc2xpZGVyU2Vjb25kQnRuIiwidmFsdWVBcnIiLCIkc2xpZGVyIiwic2xpZGVyV2lkdGgiLCJpbmRleEZsYWciLCJfbWluIiwiX21heCIsIl9fb25SYW5nZVNsaWRpbmciLCJfb25SYW5nZVNsaWRpbmciLCJfX29uUmFuZ2VTbGlkZUVuZCIsIl9vblJhbmdlU2xpZGVFbmQiLCJ0ZW1wVmFsdWUiLCJfY2xpY2tXcmFwcGVyIiwiX29uRHJhZyIsIl9zdG9wUHJvcGFnYXRpb24iLCJudW1iZXJSZWciLCJTcGlubmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJORUdBVElWRV9JTkZJTklUWSIsIl9kaXNhYmxlSW5jcmVhc2UiLCJfZGlzYWJsZURlY3JlYXNlIiwiX2RlY3JlYXNlIiwiX2NoYW5nZVZhbHVlIiwiX2luY3JlYXNlIiwiU3RlcHMiLCJTdGVwIiwic3RlcEluZGV4Iiwic3RlcHMiLCJmaWx0ZXIiLCJzZWxlY3RlZCIsImRvbmUiLCJUYWJsZUNvbHVtbiIsInNvcnRhYmxlIiwiZ3JvdXBzIiwiJHBhcmVudCIsInNvcnQiLCJyZXNpemFibGUiLCJvbkRyYWdTdGFydCIsInNjcm9sbEJhcldpZHRoIiwiTUlOX1dJRFRIIiwicHJvdG90eXBlIiwiVGFibGUiLCJzY2hlbWUiLCJjaGVja1R5cGUiLCJyb3dLZXkiLCJyb3dDbGFzc05hbWUiLCJjaGVja2VkS2V5cyIsImNoZWNrZWRLZXkiLCJyb3dDaGVja2FibGUiLCJyb3dFeHBhbmRhYmxlIiwibm9EYXRhVGVtcGxhdGUiLCJkaXNhYmxlUm93IiwiZXhwYW5kIiwiZXhwYW5kZWRLZXlzIiwiZml4SGVhZGVyIiwiX3BhZGRpbmciLCJfZGlzYWJsZWRBbW91bnQiLCJvbGRWYWx1ZSIsIl9jYWxjSGVhZGVyUGFkZGluZyIsIl91cGRhdGVEaXNhYmxlZEFtb3VudCIsImdldFNjcm9sbGJhcldpZHRoIiwiZGF0YUxlbmd0aCIsImRpc2FibGVkQW1vdW50IiwiYW1vdW50IiwiX2NoZWNrVW5jaGVja1JvdyIsIl9leHBhbmRTaHJpbmtSb3ciLCJjaGVja2VkS2V5c01hcCIsInRhYmxlSGVpZ2h0IiwidGFibGUiLCJjb250YWluZXJIZWlnaHQiLCJzY3JvbGwiLCJoZWFkZXJIZWlnaHQiLCJjaGVja0FsbCIsInVuY2hlY2tBbGwiLCJ0YWdOYW1lIiwiaXNDaGVjayIsImlzVG9nZ2xlIiwiaXNFeHBhbmQiLCJfcmVzaXppbmciLCJfY29udGFpbmVyV2lkdGgiLCJjdXJyZW50VGgiLCJwYXJlbnROb2RlIiwicHJldlRoIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsIl9jdXJyZW50VGhzIiwiX3ByZXZUaHMiLCJfdGFibGVzIiwidGhzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJmaXhUaHMiLCJkZWxYIiwicHJldldpZHRoIiwidGFibGVXaWR0aCIsIm91dGVyIiwiY3JlYXRlRWxlbWVudCIsInZpc2liaWxpdHkiLCJtc092ZXJmbG93U3R5bGUiLCJ3aWR0aE5vU2Nyb2xsIiwib3ZlcmZsb3ciLCJpbm5lciIsIndpZHRoV2l0aFNjcm9sbCIsInJlbW92ZUNoaWxkIiwiY29sU3BhbiIsImV4cGFuZGFibGUiLCJfc2NoZW1lIiwidGhlYWRDcmVhdG9yIiwiaXNDaGVja0FsbCIsIl90b2dnbGVDaGVja0FsbCIsImlzT2JqZWN0IiwiX3NvcnQiLCJkZWZhdWx0IiwidGhlYWQiLCJ0Ym9keSIsInRyIiwiX2NsaWNrUm93Iiwic2hyaW5rUm93IiwidGQiLCJwYWRkaW5nUmlnaHQiLCJtYXhIZWlnaHQiLCJUYWJsZVJvdyIsIlRhYnMiLCJUYWIiLCJfY2hhbmdlVGFiIiwiX3ZhbHVlIiwiX3BhcmVudCIsIlRvb2x0aXAiLCJUb29sdGlwQ29udGVudCIsImNhbkhvdmVyIiwic2hvd0Fycm93IiwicG9zaXRvbiIsInRyYW5zaXRpb24iLCJfZmVlZGJhY2siLCJfYWRkRG9jdW1lbnRDbGljayIsIl9yZW1vdmVEb2N1bWVudENsaWNrIiwiY29udGVudFZOb2RlIiwiVHJhbnNmZXIiLCJsZWZ0Q2hlY2tlZCIsInJpZ2h0Q2hlY2tlZCIsImluY2x1ZGVzIiwibGVmdFRpdGxlIiwicmlnaHRUaXRsZSIsIl9vbktleXVwIiwic2hpZnRLZXkiLCJzdGFydEluZGV4IiwiY2hlY2tlZFZhbHVlcyIsIl92YWx1ZXMiLCJjbGljayIsIlBhbmVsIiwiX29uQ2xpY2tMYWJlbCIsIl9vbkNoZWNrYm94Q2hhbmdlIiwiX3JlbW92ZSIsIl9hZGQiLCJEZW1vIiwic2V0dGluZyIsImNvbnRlbnRzIiwiaGlnaGxpZ2h0ZWQiLCJmaWxlIiwibGFuZ3VhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUVxQkEsVSxXQUNoQixpQkFBT0MsUUFBUCxFOzs7Ozs7Ozs7OzttQ0FHVTtBQUNQLG1CQUFPO0FBQ0hDLDJCQUFXQztBQURSLGFBQVA7QUFHSDs7Ozs2QkFOTUYsUTs7Ozs7Ozs7a0JBRlVELFU7UUFXYkEsVSxHQUFBQSxVO1FBQVlJLGM7Ozs7Ozs7QUNoQnBCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMsQzs7Ozs7Ozs7Ozs7Ozs7OztrQkN4QmUsVUFBU0MsR0FBVCxFQUFjQyxJQUFkLEVBQW9CQyxNQUFwQixFQUE0QkMsT0FBNUIs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LElBQXRFLENBQTJFLElBQTNFLENBQWQsRUFBVCxFQUEwRyxJQUExRyxFQUFnSCxLQUFoSCxFQUF1SCxVQUF2SCxDQVBoRSxDQUFmLEVBT29OLFVBUHBOLENBQVA7QUFRQyxDOztBQXRCRCIsImZpbGUiOiJzdGF0aWMvY2h1bmsvNDMwMDczNDc5MjI4ZWNhNTc1OGQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuaW1wb3J0IEJyZWFkY3J1bWJJdGVtIGZyb20gJy4vaXRlbSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJyZWFkY3J1bWIgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzZXBhcmF0b3I6IHVuZGVmaW5lZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbmV4cG9ydCB7QnJlYWRjcnVtYiwgQnJlYWRjcnVtYkl0ZW19O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiaW1wb3J0IEJyZWFkY3J1bWJJdGVtIGZyb20gJy4vaXRlbSc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuY29uc3Qge2NoaWxkcmVuLCBzZXBhcmF0b3IsIGNsYXNzTmFtZSwgc3R5bGV9ID0gc2VsZi5nZXQoKTtcblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLWJyZWFkY3J1bWInOiB0cnVlLFxuICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG59O1xuXG5jb25zdCBfY2hpbGRyZW4gPSBjaGlsZHJlbiA/IChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkgOiBjaGlsZHJlbjtcblxucmV0dXJuIGgoJ2RpdicsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3R5bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFsnXFxuICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtfX3UubWFwKF9jaGlsZHJlbiwgKHZOb2RlLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAodk5vZGUudGFnID09PSBCcmVhZGNydW1iSXRlbSkge1xuICAgICAgICAgICAgdk5vZGUucHJvcHMgPSB7Li4udk5vZGUucHJvcHN9O1xuICAgICAgICAgICAgaWYgKHNlcGFyYXRvciAhPSBudWxsICYmIHZOb2RlLnByb3BzLnNlcGFyYXRvciA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdk5vZGUucHJvcHMuc2VwYXJhdG9yID0gc2VwYXJhdG9yO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID09PSBfY2hpbGRyZW4ubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIHZOb2RlLnByb3BzLnNlcGFyYXRvciA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZOb2RlO1xuICAgIH0pIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICcgXFxuJ10sIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZU9iaiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2JyZWFkY3J1bWIvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaXRlbS52ZHQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCcmVhZGNydW1iSXRlbSBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzZXBhcmF0b3I6ICc+JyxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQ2xpY2soKSB7XG4gICAgICAgIGNvbnN0IHRvID0gdGhpcy5nZXQoJ3RvJyk7XG4gICAgICAgIGlmICh0bykge1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSB0bztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9pdGVtLmpzIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5jb25zdCB7dG8sIHNlcGFyYXRvciwgY2hpbGRyZW59ID0gc2VsZi5nZXQoKTtcblxucmV0dXJuIGgoJ2RpdicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdG8gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2EnLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25DbGljayBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoaWxkcmVuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLWl0ZW0tbGluaycpIDogaCgnc3BhbicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay1pdGVtLWxpbmsnKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlcGFyYXRvciAhPSBudWxsIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdzcGFuJywgeydpbm5lckhUTUwnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VwYXJhdG9yIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCAnay1zZXBhcmF0b3InKSA6IHVuZGVmaW5lZF0sICdrLWl0ZW0nKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9pdGVtLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5cbmNvbnN0IHtpc0FycmF5fSA9IEludGFjdC5WZHQudXRpbHM7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENoZWNrYm94IGV4dGVuZHMgSW50YWN0IHtcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgICB0cnVlVmFsdWU6IHRydWUsXG4gICAgICAgICAgICBmYWxzZVZhbHVlOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICB9XG5cbiAgICAvLyBzZXQgdmFsdWUgdG8gZmFsc2VWYWx1ZSB3aGVuIGRlc3Ryb3lcbiAgICBfZGVzdHJveSgpIHtcbiAgICAgICAgLy8gd2UgbXVzdCB1c2UgX2NvbnRleHQgdG8gZ2V0IHZhbHVlLCBiZWNhdXNlIGl0IG1heWJlIGhhcyBjaGFuZ2VkXG4gICAgICAgIGNvbnN0IG1vZGVsID0gdGhpcy5nZXQoJ3YtbW9kZWwnKTtcbiAgICAgICAgaWYgKCFtb2RlbCkgcmV0dXJuO1xuXG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMuZ2V0KCdfY29udGV4dCcpLmRhdGEuZ2V0KG1vZGVsKTtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuO1xuICAgICAgICBjb25zdCB0cnVlVmFsdWUgPSB0aGlzLmdldCgndHJ1ZVZhbHVlJyk7XG4gICAgICAgIGlmICh0aGlzLmlzQ2hlY2tlZCgpKSB7XG4gICAgICAgICAgICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdmFsdWUuaW5kZXhPZih0cnVlVmFsdWUpO1xuICAgICAgICAgICAgICAgIHZhbHVlLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgdmFsdWUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB0aGlzLmdldCgnZmFsc2VWYWx1ZScpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlzQ2hlY2tlZCgpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldCgndmFsdWUnKTtcbiAgICAgICAgY29uc3QgdHJ1ZVZhbHVlID0gdGhpcy5nZXQoJ3RydWVWYWx1ZScpO1xuICAgICAgICByZXR1cm4gaXNBcnJheSh2YWx1ZSkgPyBcbiAgICAgICAgICAgIHZhbHVlLmluZGV4T2YodHJ1ZVZhbHVlKSA+IC0xIDogXG4gICAgICAgICAgICB2YWx1ZSA9PT0gdHJ1ZVZhbHVlO1xuICAgIH1cbn1cblxuZXhwb3J0IHtDaGVja2JveH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2NoZWNrYm94L2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9jaGVja2JveC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvY2hlY2tib3gvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IHtcbiAgICBjbGFzc05hbWUsIGRpc2FibGVkLCBmYWxzZVZhbHVlLCBcbiAgICBjaGlsZHJlbiwgdmFsdWUsIHRydWVWYWx1ZSwgc3R5bGUsXG4gICAgcmVmLCBrZXksIC4uLnJlc3Rcbn0gPSBzZWxmLmdldCgpO1xuXG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1jaGVja2JveCc6IHRydWUsXG4gICAgJ2stZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICAnay1jaGVja2VkJzogc2VsZi5pc0NoZWNrZWQoKSxcbiAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lLFxufTtcblxucmV0dXJuIGgoJ2xhYmVsJywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2goJ3NwYW4nLCBudWxsLCBoKCdpbnB1dCcsIHsndHlwZSc6ICdjaGVja2JveCcsICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkaXNhYmxlZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZVZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIC4uLmZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyZXN0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGNoZWNrZWQ6IF9kZXRlY3RDaGVja2JveENoZWNrZWQoc2VsZiwgJ3ZhbHVlJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVWYWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2V2LWNoYW5nZSc6IGZ1bmN0aW9uKF9fZSkgeyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc2V0Q2hlY2tib3hNb2RlbChzZWxmLCAndmFsdWUnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZVZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmYWxzZVZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIF9fZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fSksICdrLXdyYXBwZXInKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoaWxkcmVuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdzcGFuJywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoaWxkcmVuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLXRleHQnKSA6IHVuZGVmaW5lZF0sIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZU9iaiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2NoZWNrYm94L2luZGV4LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5pbXBvcnQge3N0clBhZCwgcmFuZ2V9IGZyb20gJy4uL3V0aWxzJztcblxuZnVuY3Rpb24gZ2V0Tm93RGF0ZSgpIHtcbiAgICAvLyBvbmx5IGRhdGUgd2l0aG91dCB0aW1lXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBub3cuc2V0SG91cnMoMCk7XG4gICAgbm93LnNldE1pbnV0ZXMoMCk7XG4gICAgbm93LnNldFNlY29uZHMoMCk7XG4gICAgXG4gICAgcmV0dXJuIG5vdztcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGF0ZXBpY2tlciBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBjbGVhcmFibGU6IEJvb2xlYW4sXG4gICAgICAgIGRpc2FibGVkOiBCb29sZWFuLFxuICAgICAgICBtdWx0aXBsZTogQm9vbGVhbixcbiAgICB9O1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLCBcbiAgICAgICAgICAgIGNsZWFyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICBtYXhEYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtaW5EYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBwbGFjZWhvbGRlcjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgZGlzYWJsZWREYXRlKGRhdGUpIHsgcmV0dXJuIGZhbHNlOyB9LFxuICAgICAgICAgICAgbXVsdGlwbGU6IGZhbHNlLFxuICAgICAgICAgICAgc2l6ZTogJ2RlZmF1bHQnLFxuICAgICAgICAgICAgdHlwZTogJ2RhdGUnLCAvLyBkYXRlIHwgZGF0ZXRpbWVcbiAgICAgICAgICAgIGhvdXJzOiByYW5nZSgwLCAyMyksXG4gICAgICAgICAgICBtaW51dGVzOiByYW5nZSgwLCA1OSksXG4gICAgICAgICAgICBzZWNvbmRzOiByYW5nZSgwLCA1OSksXG4gICAgICAgICAgICBkaXNhYmxlZEhvdXJzOiBmYWxzZSxcbiAgICAgICAgICAgIGRpc2FibGVkTWludXRlczogZmFsc2UsXG4gICAgICAgICAgICBkaXNhYmxlZFNlY29uZHM6IGZhbHNlLFxuXG4gICAgICAgICAgICBfc2hvd0RhdGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIF9ub3c6IGdldE5vd0RhdGUoKSxcbiAgICAgICAgICAgIF9pc1Nob3dZZWFyUGlja2VyOiBmYWxzZSxcbiAgICAgICAgICAgIF9pc1NlbGVjdFRpbWU6IGZhbHNlLFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2VsZWN0KHZhbHVlLCBlKSB7XG4gICAgICAgIHZhbHVlID0gdGhpcy5nZXREYXRlU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0KCd0eXBlJyk7XG4gICAgICAgIGlmICghdGhpcy5nZXQoJ211bHRpcGxlJykpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIHZhbHVlKTtcbiAgICAgICAgICAgIGlmICh0eXBlICE9PSAnZGF0ZXRpbWUnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWZzLmNhbGVuZGFyLmhpZGUoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZS5fcmF3RXZlbnQuX2Ryb3Bkb3duID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgnX2lzU2VsZWN0VGltZScsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGV0IHZhbHVlcyA9IHRoaXMuZ2V0KCd2YWx1ZScpO1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXMgPSBbXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzID0gdmFsdWVzLnNsaWNlKDApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSB2YWx1ZXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgICAgICAgICBpZiAofmluZGV4KSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXREYXRlU3RyaW5nKGRhdGUpIHtcbiAgICAgICAgY29uc3QgX2RhdGUgPSBbXG4gICAgICAgICAgICBkYXRlLmdldEZ1bGxZZWFyKCksXG4gICAgICAgICAgICBzdHJQYWQoZGF0ZS5nZXRNb250aCgpICsgMSwgMiksXG4gICAgICAgICAgICBzdHJQYWQoZGF0ZS5nZXREYXRlKCksIDIpXG4gICAgICAgIF0uam9pbignLScpO1xuICAgICAgICBpZiAodGhpcy5nZXQoJ3R5cGUnKSAhPT0gJ2RhdGV0aW1lJykge1xuICAgICAgICAgICAgcmV0dXJuIF9kYXRlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IF90aW1lID0gW1xuICAgICAgICAgICAgc3RyUGFkKGRhdGUuZ2V0SG91cnMoKSwgMiksXG4gICAgICAgICAgICBzdHJQYWQoZGF0ZS5nZXRNaW51dGVzKCksIDIpLFxuICAgICAgICAgICAgc3RyUGFkKGRhdGUuZ2V0U2Vjb25kcygpLCAyKVxuICAgICAgICBdLmpvaW4oJzonKTtcbiAgICAgICAgcmV0dXJuIGAke19kYXRlfSAke190aW1lfWA7XG4gICAgfVxuXG4gICAgaXNFcXVhbChhLCBiKSB7XG4gICAgICAgIGlmIChhICYmIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBhLmdldEZ1bGxZZWFyKCkgPT09IGIuZ2V0RnVsbFllYXIoKSAmJlxuICAgICAgICAgICAgICAgIGEuZ2V0TW9udGgoKSA9PT0gYi5nZXRNb250aCgpICYmXG4gICAgICAgICAgICAgICAgYS5nZXREYXRlKCkgPT09IGIuZ2V0RGF0ZSgpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlzTFQoYSwgYikge1xuICAgICAgICBpZiAoYSAmJiBiKSB7XG4gICAgICAgICAgICBjb25zdCBhWWVhciA9IGEuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgIGNvbnN0IGJZZWFyID0gYi5nZXRGdWxsWWVhcigpO1xuICAgICAgICAgICAgaWYgKGFZZWFyIDwgYlllYXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYVllYXIgPiBiWWVhcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgYU1vbnRoID0gYS5nZXRNb250aCgpO1xuICAgICAgICAgICAgY29uc3QgYk1vbnRoID0gYi5nZXRNb250aCgpO1xuICAgICAgICAgICAgaWYgKGFNb250aCA8IGJNb250aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChhTW9udGggPiBiTW9udGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGFEYXkgPSBhLmdldERhdGUoKTtcbiAgICAgICAgICAgIGNvbnN0IGJEYXkgPSBiLmdldERhdGUoKTtcbiAgICAgICAgICAgIGlmIChhRGF5IDwgYkRheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChhRGF5ID4gYkRheSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpc0dUKGEsIGIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNMVChiLCBhKTsgICAgICAgIFxuICAgIH1cblxuICAgIG9uQ2xlYXIoZSkge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB1bmRlZmluZWQpO1xuICAgIH1cblxuICAgIHByZXZNb250aCgpIHtcbiAgICAgICAgdGhpcy5zZXRSZWxhdGl2ZU1vbnRoKC0xKTtcbiAgICB9XG5cbiAgICBuZXh0TW9udGgoKSB7XG4gICAgICAgIHRoaXMuc2V0UmVsYXRpdmVNb250aCgxKTtcbiAgICB9XG5cbiAgICBwcmV2WWVhcigpIHtcbiAgICAgICAgdGhpcy5zZXRSZWxhdGl2ZVllYXIoLTEpO1xuICAgIH1cblxuICAgIG5leHRZZWFyKCkge1xuICAgICAgICB0aGlzLnNldFJlbGF0aXZlWWVhcigxKTtcbiAgICB9XG5cbiAgICBzZXRSZWxhdGl2ZU1vbnRoKG1vbnRoKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSB0aGlzLmdldFNob3dEYXRlKCk7XG4gICAgICAgIGRhdGUuc2V0TW9udGgoZGF0ZS5nZXRNb250aCgpICsgbW9udGgpO1xuICAgICAgICB0aGlzLnNldCgnX3Nob3dEYXRlJywgZGF0ZSk7XG4gICAgfVxuXG4gICAgc2V0UmVsYXRpdmVZZWFyKHllYXIpIHtcbiAgICAgICAgY29uc3QgZGF0ZSA9IHRoaXMuZ2V0U2hvd0RhdGUoKTtcbiAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkYXRlLmdldEZ1bGxZZWFyKCkgKyB5ZWFyKTtcbiAgICAgICAgdGhpcy5zZXQoJ19zaG93RGF0ZScsIGRhdGUpO1xuICAgIH1cblxuICAgIHNldE1vbnRoKG1vbnRoKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSB0aGlzLmdldFNob3dEYXRlKCk7XG4gICAgICAgIGRhdGUuc2V0TW9udGgobW9udGgpO1xuICAgICAgICB0aGlzLnNldCgnX3Nob3dEYXRlJywgZGF0ZSk7XG4gICAgfVxuXG4gICAgc2V0WWVhcih5ZWFyKSB7XG4gICAgICAgIGNvbnN0IGRhdGUgPSB0aGlzLmdldFNob3dEYXRlKCk7XG4gICAgICAgIGRhdGUuc2V0RnVsbFllYXIoeWVhcik7XG4gICAgICAgIHRoaXMuc2V0KCdfc2hvd0RhdGUnLCBkYXRlKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZVllYXIoYywgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXRZZWFyKHZhbHVlKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZU1vbnRoKGMsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuc2V0TW9udGgodmFsdWUpO1xuICAgIH1cblxuICAgIGdldFNob3dEYXRlKCkge1xuICAgICAgICBjb25zdCB7X3Nob3dEYXRlLCB2YWx1ZSwgX25vdywgbXVsdGlwbGV9ID0gdGhpcy5nZXQoKTtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gbXVsdGlwbGUgPyB2YWx1ZSB8fCBbXSA6IFt2YWx1ZV07XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShfc2hvd0RhdGUgfHwgdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXSB8fCBfbm93KTtcbiAgICB9XG5cbiAgICBvbkhpZGUoKSB7XG4gICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgICdfc2hvd0RhdGUnOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAnX2lzU2hvd1llYXJQaWNrZXInOiBmYWxzZSxcbiAgICAgICAgICAgICdfaXNTZWxlY3RUaW1lJzogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uQmVmb3JlU2hvdygpIHtcbiAgICAgICAgdGhpcy5zZXQoJ19ub3cnLCBnZXROb3dEYXRlKCkpO1xuICAgIH1cblxuICAgIHNob3dZZWFyUGlja2VyKCkge1xuICAgICAgICB0aGlzLnNldCgnX2lzU2hvd1llYXJQaWNrZXInLCAhdGhpcy5nZXQoJ19pc1Nob3dZZWFyUGlja2VyJykpO1xuICAgIH1cblxuICAgIG9uQ2hhbmdlVGltZSh0eXBlLCBjLCB2KSB7XG4gICAgICAgIGNvbnN0IHt2YWx1ZSwgX25vd30gPSB0aGlzLmdldCgpO1xuICAgICAgICBjb25zdCB2YWx1ZURhdGUgPSBuZXcgRGF0ZSh2YWx1ZSB8fCBfbm93KTtcbiAgICAgICAgdmFsdWVEYXRlWydzZXQnICsgdHlwZV0odik7XG4gICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIHRoaXMuZ2V0RGF0ZVN0cmluZyh2YWx1ZURhdGUpKTtcbiAgICB9XG5cbiAgICBjb25maXJtKCkge1xuICAgICAgICB0aGlzLnJlZnMuY2FsZW5kYXIuaGlkZSgpO1xuICAgIH1cblxuICAgIGNhbmNlbChlKSB7XG4gICAgICAgIGUuX3Jhd0V2ZW50Ll9kcm9wZG93biA9IHRydWU7XG4gICAgICAgIHRoaXMuc2V0KCdfaXNTZWxlY3RUaW1lJywgZmFsc2UpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtEYXRlcGlja2VyfTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImltcG9ydCBJbnB1dCBmcm9tICcuLi9pbnB1dCc7aW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO2ltcG9ydCBUb29sdGlwIGZyb20gJy4uL3Rvb2x0aXAnO2ltcG9ydCBTY3JvbGxTZWxlY3QgZnJvbSAnLi4vc2Nyb2xsU2VsZWN0JztpbXBvcnQge1JvdywgQ29sfSBmcm9tICcuLi9ncmlkJztpbXBvcnQge3JhbmdlLCBzdHJQYWR9IGZyb20gJy4uL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcblxuXG5cblxuXG5cblxuY29uc3Qge1xuICAgIHZhbHVlLCBjbGVhcmFibGUsIGNsYXNzTmFtZSwgc3R5bGUsXG4gICAgbmFtZSwgX3Nob3dEYXRlLCBfbm93LCBtYXhEYXRlLCBtaW5EYXRlLFxuICAgIHBsYWNlaG9sZGVyLCBkaXNhYmxlZCwgZGlzYWJsZWREYXRlLFxuICAgIG11bHRpcGxlLCBzaXplLCBfaXNTaG93WWVhclBpY2tlcixcbiAgICBfaXNTZWxlY3RUaW1lLCB0eXBlLCBob3VycywgbWludXRlcywgc2Vjb25kcyxcbiAgICBkaXNhYmxlZEhvdXJzLCBkaXNhYmxlZE1pbnV0ZXMsIGRpc2FibGVkU2Vjb25kcyxcbn0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBjbGFzc05hbWVPYmogPSB7XG4gICAgJ2stZGF0ZXBpY2tlcic6IHRydWUsXG4gICAgJ2stZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lLFxufVxuXG5jb25zdCB2YWx1ZXMgPSBtdWx0aXBsZSA/IHZhbHVlIHx8IFtdIDogW3ZhbHVlXTtcblxuY29uc3QgdmFsdWVEYXRlID0gbmV3IERhdGUodmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXSB8fCBfbm93KTtcbmNvbnN0IHNob3dEYXRlID0gbmV3IERhdGUoX3Nob3dEYXRlIHx8IHZhbHVlRGF0ZSk7XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBoKFRvb2x0aXAsIHsnY2xhc3NOYW1lJzogJ2stZGF0ZXBpY2tlci1jb250ZW50JywgJ3Bvc2l0aW9uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tteTogJ2xlZnQgdG9wJywgYXQ6ICdsZWZ0IGJvdHRvbSd9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd0cmlnZ2VyJzogJ2NsaWNrJywgJ3Nob3dBcnJvdyc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmYWxzZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndHJhbnNpdGlvbic6ICdkcm9wZG93bicsICdldi1oaWRlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25IaWRlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1iZWZvcmVTaG93JzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25CZWZvcmVTaG93IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkaXNhYmxlZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKElucHV0LCB7J3BsYWNlaG9sZGVyJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BsYWNlaG9sZGVyID09IG51bGwgPyBcbiAgICAgICAgICAgICAgICAodHlwZSA9PT0gJ2RhdGV0aW1lJyA/ICfor7fpgInmi6nml6XmnJ/lkozml7bpl7QnIDogJ+ivt+mAieaLqeaXpeacnycpIDpcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlciBcbiAgICAgICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdyZWFkb25seSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ZhbHVlcy5qb2luKCcsICcpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjbGVhcmFibGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xlYXJhYmxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jbGVhcic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLm9uQ2xlYXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ25hbWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbmFtZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3NpemUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2l6ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzLCAnX2Jsb2Nrcyc6IGZ1bmN0aW9uKGJsb2Nrcykge1xuICAgIHZhciBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0gZXh0ZW5kKHt9LCBibG9ja3MpO1xuICAgIHJldHVybiAoX2Jsb2Nrcy5zdWZmaXggPSBmdW5jdGlvbihwYXJlbnQpIHtyZXR1cm4gaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLWNhbGVuZGFyLW91dGxpbmUnKTt9KSAmJiAoX19ibG9ja3Muc3VmZml4ID0gZnVuY3Rpb24ocGFyZW50KSB7XG52YXIgc2VsZiA9IHRoaXM7XG5yZXR1cm4gYmxvY2tzLnN1ZmZpeCA/IGJsb2Nrcy5zdWZmaXguY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLnN1ZmZpeC5jYWxsKHNlbGYsIHBhcmVudCk7XG59KSA6IF9ibG9ja3Muc3VmZml4LmNhbGwodGhpcywgcGFyZW50KTtcbn0pICYmIF9fYmxvY2tzO1xufS5jYWxsKHRoaXMsIHt9KX0pLCAnX2NvbnRleHQnOiB0aGlzLCAnX2Jsb2Nrcyc6IGZ1bmN0aW9uKGJsb2Nrcykge1xuICAgIHZhciBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0gZXh0ZW5kKHt9LCBibG9ja3MpO1xuICAgIHJldHVybiAoX2Jsb2Nrcy5jb250ZW50ID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshX2lzU2VsZWN0VGltZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgW2goJ2RpdicsIG51bGwsIFtoKEJ1dHRvbiwgeydpY29uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndHlwZSc6ICdub25lJywgJ3NpemUnOiAnc21hbGwnLCAnY2xhc3NOYW1lJzogJ2stcHJldicsICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLnByZXZZZWFyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IFtoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWFycm93LWxlZnQnKSwgaCgnaScsIG51bGwsIG51bGwsICdrLWljb24gaW9uLWlvcy1hcnJvdy1sZWZ0JyldLCAnX2NvbnRleHQnOiB0aGlzfSksIGgoQnV0dG9uLCB7J2ljb24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd0eXBlJzogJ25vbmUnLCAnc2l6ZSc6ICdzbWFsbCcsICdjbGFzc05hbWUnOiAnay1wcmV2JywgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYucHJldk1vbnRoIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IGgoJ2knLCBudWxsLCBudWxsLCAnay1pY29uIGlvbi1pb3MtYXJyb3ctbGVmdCcpLCAnX2NvbnRleHQnOiB0aGlzfSksIGgoJ3NwYW4nLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuc2hvd1llYXJQaWNrZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93RGF0ZS5nZXRGdWxsWWVhcigpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICflubQnXSwgJ2stdGV4dCcpLCBoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93RGF0ZS5nZXRNb250aCgpICsgMSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAn5pyIJ10sICdrLXRleHQnKV0sICdrLXRleHQtd3JhcHBlcicpLCBoKEJ1dHRvbiwgeydpY29uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndHlwZSc6ICdub25lJywgJ3NpemUnOiAnc21hbGwnLCAnY2xhc3NOYW1lJzogJ2stbmV4dCcsICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLm5leHRZZWFyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IFtoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWFycm93LXJpZ2h0JyksIGgoJ2knLCBudWxsLCBudWxsLCAnay1pY29uIGlvbi1pb3MtYXJyb3ctcmlnaHQnKV0sICdfY29udGV4dCc6IHRoaXN9KSwgaChCdXR0b24sIHsnaWNvbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3R5cGUnOiAnbm9uZScsICdzaXplJzogJ3NtYWxsJywgJ2NsYXNzTmFtZSc6ICdrLW5leHQnLCAnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5uZXh0TW9udGggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogaCgnaScsIG51bGwsIG51bGwsICdrLWljb24gaW9uLWlvcy1hcnJvdy1yaWdodCcpLCAnX2NvbnRleHQnOiB0aGlzfSldLCAnay1tb250aCBjLWNsZWFyZml4JyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshX2lzU2hvd1llYXJQaWNrZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIF9WZHQudXRpbHMubWFwKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtbJ+aXpScsICfkuIAnLCAn5LqMJywgJ+S4iScsICflm5snLCAn5LqUJywgJ+WFrSddIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbnJldHVybiBoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2std2Vla2RheScpO1xufSwgdGhpcyksICdrLXdlZWtkYXlzJykgOiB1bmRlZmluZWQsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshX2lzU2hvd1llYXJQaWNrZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFsnXFxuICAgICAgICAgICAgICAgICAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmV0ID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKHNob3dEYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoID0gc3RhcnQuZ2V0TW9udGgoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0LnNldERhdGUoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGFydFdlZWtkYXkgPSBzdGFydC5nZXREYXkoKTsgXG4gICAgICAgICAgICAgICAgICAgICAgICBzdGFydC5zZXREYXRlKDEgLSBzdGFydFdlZWtkYXkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDQyOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBfZGF0ZSA9IHN0YXJ0LmdldERhdGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBfbW9udGggPSBzdGFydC5nZXRNb250aCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRpc2FibGVkID0gc2VsZi5pc0dUKHN0YXJ0LCBuZXcgRGF0ZShtYXhEYXRlKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pc0xUKHN0YXJ0LCBuZXcgRGF0ZShtaW5EYXRlKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWREYXRlLmNhbGwoc2VsZiwgc2VsZi5nZXREYXRlU3RyaW5nKHN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGgoJ2RpdicsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbIWRpc2FibGVkICYmIHNlbGYuc2VsZWN0LmJpbmQoc2VsZiwgbmV3IERhdGUoc3RhcnQpKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW19kYXRlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImstZGF5XCI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJrLW91dFwiOiBfbW9udGggIT09IG1vbnRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiay1hY3RpdmVcIjogdmFsdWVzLmZpbmQodmFsdWUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VsZi5pc0VxdWFsKG5ldyBEYXRlKHZhbHVlKSwgc3RhcnQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiay10b2RheVwiOiBzZWxmLmlzRXF1YWwoX25vdywgc3RhcnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiay1kaXNhYmxlZFwiOiBkaXNhYmxlZCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhcnQuc2V0RGF0ZShzdGFydC5nZXREYXRlKCkgKyAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA2OyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbcmV0LnNsaWNlKDcgKiBpLCA3ICogKGkgKyAxKSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiAgICAgICAgICAgICAgICAnXSwgJ2stY2FsZW5kYXInKSA6IHVuZGVmaW5lZCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW19pc1Nob3dZZWFyUGlja2VyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKFJvdywgeydjbGFzc05hbWUnOiAnay15ZWFyLXBpY2tlcicsICdjaGlsZHJlbic6IFtoKENvbCwgeydzcGFuJzogJzEyJywgJ2NoaWxkcmVuJzogaChTY3JvbGxTZWxlY3QsIHsnZGF0YSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFsodmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJhbmdlKHZhbHVlIC0gNSwgdmFsdWUgKyA1KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd2YWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93RGF0ZS5nZXRGdWxsWWVhcigpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi0kY2hhbmdlOnZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25DaGFuZ2VZZWFyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9KSwgJ19jb250ZXh0JzogdGhpc30pLCBoKENvbCwgeydzcGFuJzogJzEyJywgJ2NoaWxkcmVuJzogaChTY3JvbGxTZWxlY3QsIHsnZGF0YSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyYW5nZSgwLCAxMSkubWFwKGkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge2xhYmVsOiBgJHtpICsgMX3mnIhgLCB2YWx1ZTogaX07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3Nob3dEYXRlLmdldE1vbnRoKCkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5vbkNoYW5nZU1vbnRoIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9KSwgJ19jb250ZXh0JzogdGhpc30pXSwgJ19jb250ZXh0JzogdGhpc30pIDogdW5kZWZpbmVkXSkgOiBoKCdkaXYnLCBudWxsLCBbaCgnZGl2JywgbnVsbCwgWydcXG4gICAgICAgICAgICAgICAgICAgICcsIGhjKCc8QnV0dG9uIHR5cGU9XFxcIm5vbmVcXFwiIHNpemU9XFxcInNtYWxsXFxcIiBjbGFzcz1cXFwiay1wcmV2XFxcIlxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2LWNsaWNrPXt7IHNlbGYuY2FuY2VsLmJpbmQoc2VsZikgfX1cXG4gICAgICAgICAgICAgICAgICAgID7lj5bmtog8L0J1dHRvbj4nKSwgaCgnc3BhbicsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5jYW5jZWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93RGF0ZS5nZXRGdWxsWWVhcigpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICflubQnXSwgJ2stdGV4dCcpLCBoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93RGF0ZS5nZXRNb250aCgpICsgMSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAn5pyIJ10sICdrLXRleHQnKV0sICdrLXRleHQtd3JhcHBlcicpLCAnXFxuICAgICAgICAgICAgICAgICAgICAnLCBoYygnPEJ1dHRvbiB0eXBlPVxcXCJub25lXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgY2xhc3M9XFxcImstbmV4dFxcXCJcXG4gICAgICAgICAgICAgICAgICAgICAgICBldi1jbGljaz17eyBzZWxmLmNvbmZpcm0uYmluZChzZWxmKSB9fVxcbiAgICAgICAgICAgICAgICAgICAgPuehruiupDwvQnV0dG9uPicpXSwgJ2stbW9udGggYy1jbGVhcmZpeCcpLCBoKFJvdywgeydjaGlsZHJlbic6IFtoKENvbCwgeydzcGFuJzogJzgnLCAnY2hpbGRyZW4nOiBoKFNjcm9sbFNlbGVjdCwgeydkYXRhJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2hvdXJzLm1hcCh2ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtsYWJlbDogc3RyUGFkKHYsIDIpLCB2YWx1ZTogdn07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ZhbHVlRGF0ZS5nZXRIb3VycygpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi0kY2hhbmdlOnZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25DaGFuZ2VUaW1lLmJpbmQoc2VsZiwgJ0hvdXJzJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkSG91cnMgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpcywgJ19ibG9ja3MnOiBmdW5jdGlvbihibG9ja3MpIHtcbiAgICB2YXIgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IGV4dGVuZCh7fSwgYmxvY2tzKTtcbiAgICByZXR1cm4gKF9ibG9ja3MuYXBwZW5kID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuICc6Jzt9KSAmJiAoX19ibG9ja3MuYXBwZW5kID0gZnVuY3Rpb24ocGFyZW50KSB7XG52YXIgc2VsZiA9IHRoaXM7XG5yZXR1cm4gYmxvY2tzLmFwcGVuZCA/IGJsb2Nrcy5hcHBlbmQuY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLmFwcGVuZC5jYWxsKHNlbGYsIHBhcmVudCk7XG59KSA6IF9ibG9ja3MuYXBwZW5kLmNhbGwodGhpcywgcGFyZW50KTtcbn0pICYmIF9fYmxvY2tzO1xufS5jYWxsKHRoaXMsIHt9KX0pLCAnX2NvbnRleHQnOiB0aGlzfSksIGgoQ29sLCB7J3NwYW4nOiAnOCcsICdjaGlsZHJlbic6IGgoU2Nyb2xsU2VsZWN0LCB7J2RhdGEnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbWludXRlcy5tYXAodiA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7bGFiZWw6IHN0clBhZCh2LCAyKSwgdmFsdWU6IHZ9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd2YWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZURhdGUuZ2V0TWludXRlcygpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi0kY2hhbmdlOnZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYub25DaGFuZ2VUaW1lLmJpbmQoc2VsZiwgJ01pbnV0ZXMnKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWRNaW51dGVzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXMsICdfYmxvY2tzJzogZnVuY3Rpb24oYmxvY2tzKSB7XG4gICAgdmFyIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSBleHRlbmQoe30sIGJsb2Nrcyk7XG4gICAgcmV0dXJuIChfYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiAnOic7fSkgJiYgKF9fYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5hcHBlbmQgPyBibG9ja3MuYXBwZW5kLmNhbGwodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gX2Jsb2Nrcy5hcHBlbmQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmFwcGVuZC5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcztcbn0uY2FsbCh0aGlzLCB7fSl9KSwgJ19jb250ZXh0JzogdGhpc30pLCBoKENvbCwgeydzcGFuJzogJzgnLCAnY2hpbGRyZW4nOiBoKFNjcm9sbFNlbGVjdCwgeydkYXRhJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlY29uZHMubWFwKHYgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge2xhYmVsOiBzdHJQYWQodiwgMiksIHZhbHVlOiB2fTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWVEYXRlLmdldFNlY29uZHMoKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtJGNoYW5nZTp2YWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLm9uQ2hhbmdlVGltZS5iaW5kKHNlbGYsICdTZWNvbmRzJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkU2Vjb25kcyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzfSksICdfY29udGV4dCc6IHRoaXN9KV0sICdfY29udGV4dCc6IHRoaXN9KV0sICdrLXRpbWUtcGlja2VyJywgJ3RpbWUnKTt9KSAmJiAoX19ibG9ja3MuY29udGVudCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5jb250ZW50ID8gYmxvY2tzLmNvbnRlbnQuY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLmNvbnRlbnQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmNvbnRlbnQuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3M7XG59LmNhbGwodGhpcywge30pfSwgbnVsbCwgbnVsbCwgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ2NhbGVuZGFyJ10gPSBpfSksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZU9iaiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcbmltcG9ydCBwb3NpdGlvbiBmcm9tICcuLi9tb3ZlV3JhcHBlci9wb3NpdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERpYWxvZyBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICB2YWx1ZTogQm9vbGVhbixcbiAgICAgICAgbG9hZGluZzogQm9vbGVhbixcbiAgICB9O1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0aXRsZTogJ+aPkOekuicsXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgICBzaXplOiAnZGVmYXVsdCcsIC8vIGRlZmF1bHQgfCBzbWFsbFxuICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICBkaXNhYmxlZE9rOiBmYWxzZSxcbiAgICAgICAgICAgIG9rVGV4dDogJ+ehruiupCcsXG4gICAgICAgICAgICBjYW5jZWxUZXh0OiAn5Y+W5raIJyxcblxuICAgICAgICAgICAgX2RyYWdnaW5nOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICB0aGlzLm9uKCckY2hhbmdlZDp2YWx1ZScsIChjLCBpc1Nob3cpID0+IHtcbiAgICAgICAgICAgIGlmIChpc1Nob3cpIHRoaXMuX2NlbnRlcigpO1xuICAgICAgICB9KTsgXG4gICAgfVxuXG4gICAgX2NyZWF0ZSgpIHtcbiAgICAgICAgLy8gdXNlIGFzIGNvbXBvbmVudFxuICAgICAgICBpZiAodGhpcy5wYXJlbnRWTm9kZSkge1xuICAgICAgICAgICAgdGhpcy5fdXNlQXNDb21wb25lbnQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX21vdW50KGxhc3RWTm9kZSwgbmV4dFZOb2RlKSB7XG4gICAgICAgIC8vIGZvciBkZWJ1Z1xuICAgICAgICB3aW5kb3cuX19kaWFsb2cgPSB0aGlzO1xuXG4gICAgICAgIHRoaXMuX2NlbnRlcigpO1xuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9lc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgc2hvd0xvYWRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0KCdsb2FkaW5nJywgdHJ1ZSk7XG4gICAgfVxuXG4gICAgaGlkZUxvYWRpbmcoKSB7XG4gICAgICAgIHRoaXMuc2V0KCdsb2FkaW5nJywgZmFsc2UpO1xuICAgIH1cblxuICAgIGRpc2FibGVPaygpIHtcbiAgICAgICAgdGhpcy5zZXQoJ2Rpc2FibGVkT2snLCB0cnVlKTtcbiAgICB9XG5cbiAgICBlbmFibGVPaygpIHtcbiAgICAgICAgdGhpcy5zZXQoJ2Rpc2FibGVkT2snLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIGZhbHNlKTtcbiAgICB9XG5cbiAgICBjYW5jZWwoKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKCdjYW5jZWwnLCB0aGlzKTtcbiAgICB9XG5cbiAgICBvaygpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB0aGlzLnRyaWdnZXIoJ29rJywgdGhpcyk7XG4gICAgfVxuXG4gICAgc2hvdygpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCd2YWx1ZScpKSByZXR1cm47XG4gICAgICAgIC8vIHVzZSBhcyBjb21wb25lbnRcbiAgICAgICAgaWYgKHRoaXMuX3VzZUFzQ29tcG9uZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zZXQoJ3ZhbHVlJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdXNlIGFzIGluc3RhbmNlXG4gICAgICAgIGlmICh0aGlzLnJlbmRlcmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNob3cgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbml0KCk7IFxuICAgICAgICAgICAgICAgIHRoaXMubW91bnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLmluaXRlZCkge1xuICAgICAgICAgICAgICAgIHNob3coKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vbignJGluaXRlZCcsIHNob3cpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2VzY0Nsb3NlKGUpIHtcbiAgICAgICAgLy8gRXNjXG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDI3KSB0aGlzLmNsb3NlKCk7XG4gICAgfVxuXG4gICAgX2xlYXZlRW5kKCkge1xuICAgICAgICAvLyB1c2UgYXMgaW5zdGFuY2Ugb3IgdXNlIGFzIGNvbXBvbmVudCBidXQgaXQgaGFzIGJlIGRlc3Ryb3llZFxuICAgICAgICAvLyB0aGVuIHJlbW92ZSB0aGUgZWxlbWVudFxuICAgICAgICBpZiAoIXRoaXMuX3VzZUFzQ29tcG9uZW50IHx8IHRoaXMuX3VzZUFzQ29tcG9uZW50ICYmIHRoaXMuZGVzdHJveWVkKSB7XG4gICAgICAgICAgICB0aGlzLnZkdC52Tm9kZS5jaGlsZHJlbi5fJGRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9jZW50ZXIoKSB7XG4gICAgICAgIGlmICghdGhpcy5tb3VudGVkIHx8ICF0aGlzLmdldCgndmFsdWUnKSkgcmV0dXJuO1xuICAgICAgICAvLyBtb3ZlIHRvIGNlbnRlclxuICAgICAgICBwb3NpdGlvbih0aGlzLmRpYWxvZyk7XG4gICAgfVxuXG4gICAgX2RyYWdTdGFydChlKSB7XG4gICAgICAgIC8vIGxlZnQga2V5XG4gICAgICAgIGlmIChlLndoaWNoICE9PSAxKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5zZXQoJ19kcmFnZ2luZycsIHRydWUpO1xuICAgICAgICBjb25zdCBkaWFsb2cgPSB0aGlzLmRpYWxvZztcbiAgICAgICAgdGhpcy5feCA9IGRpYWxvZy5vZmZzZXRMZWZ0IC0gZS5jbGllbnRYO1xuICAgICAgICB0aGlzLl95ID0gZGlhbG9nLm9mZnNldFRvcCAtIGUuY2xpZW50WTtcbiAgICAgICAgdGhpcy5fd2lkdGggPSBkaWFsb2cub2Zmc2V0V2lkdGg7XG4gICAgICAgIHRoaXMuX2hlaWdodCA9IGRpYWxvZy5vZmZzZXRIZWlnaHQ7XG5cbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5fbW92ZSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9kcmFnRW5kKTtcbiAgICB9XG5cbiAgICBfbW92ZShlKSB7XG4gICAgICAgIC8vIFRPRE87IGRyYWcgb3V0IG9mIHNjcmVlblxuICAgICAgICBpZiAodGhpcy5nZXQoJ19kcmFnZ2luZycpKSB7XG4gICAgICAgICAgICBjb25zdCBzdHlsZSA9IHRoaXMuZGlhbG9nLnN0eWxlO1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gICAgICAgICAgICBjb25zdCBsZWZ0ID0gTWF0aC5taW4oXG4gICAgICAgICAgICAgICAgTWF0aC5tYXgodGhpcy5feCArIGUuY2xpZW50WCwgMCksXG4gICAgICAgICAgICAgICAgTWF0aC5tYXgoYm9keS5zY3JvbGxXaWR0aCAtIHRoaXMuX3dpZHRoLCAwKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGNvbnN0IHRvcCA9IE1hdGgubWluKFxuICAgICAgICAgICAgICAgIE1hdGgubWF4KHRoaXMuX3kgKyBlLmNsaWVudFksIDApLFxuICAgICAgICAgICAgICAgIE1hdGgubWF4KGJvZHkuc2Nyb2xsSGVpZ2h0IC0gdGhpcy5faGVpZ2h0LCAwKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHN0eWxlLmxlZnQgPSBgJHtsZWZ0fXB4YDtcbiAgICAgICAgICAgIHN0eWxlLnRvcCA9IGAke3RvcH1weGA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZHJhZ0VuZCgpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdfZHJhZ2dpbmcnKSkge1xuICAgICAgICAgICAgdGhpcy5zZXQoJ19kcmFnZ2luZycsIGZhbHNlKTtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuX21vdmUpO1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2RyYWdFbmQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2Rlc3Ryb3koLi4uYXJncykge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fZXNjQ2xvc2UpO1xuICAgICAgICBpZiAodGhpcy5nZXQoJ3ZhbHVlJykpIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudmR0LnZOb2RlLmNoaWxkcmVuLl8kZGVzdHJveSguLi5hcmdzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9kcmFnRW5kKCk7XG4gICAgfVxufVxuXG5leHBvcnQge0RpYWxvZ307XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2RpYWxvZy9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvZGlhbG9nL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9kaWFsb2cvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7aW1wb3J0IE1vdmVXcmFwcGVyIGZyb20gJy4uL21vdmVXcmFwcGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcblxuXG5cbnJldHVybiBoKE1vdmVXcmFwcGVyLCB7J2F1dG9EZXN0cm95JzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2ZhbHNlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IGgoJ2RpdicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ3ZhbHVlJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQW5pbWF0ZSwgeydjbGFzc05hbWUnOiAnay1vdmVybGF5JywgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpc30pIDogdW5kZWZpbmVkLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ3ZhbHVlJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQW5pbWF0ZSwgeydjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgXCJrLWRpYWxvZ1wiOiB0cnVlLCBcbiAgICAgICAgICAgICAgICAnay1kcmFnZ2luZyc6IHNlbGYuZ2V0KCdfZHJhZ2dpbmcnKSxcbiAgICAgICAgICAgICAgICBcImstc21hbGxcIjogc2VsZi5nZXQoJ3NpemUnKSA9PT0gJ3NtYWxsJyxcbiAgICAgICAgICAgICAgICBbc2VsZi5nZXQoJ2NsYXNzTmFtZScpXTogc2VsZi5nZXQoJ2NsYXNzTmFtZScpLFxuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ3JlZic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpID0+IHNlbGYuZGlhbG9nID0gaSA/IGkuZWxlbWVudCA6IG51bGwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWE6bGVhdmVFbmQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fbGVhdmVFbmQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogW2goJ2RpdicsIHsnZXYtbW91c2Vkb3duJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2RyYWdTdGFydCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgWyhfYmxvY2tzLmhlYWRlciA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBoKCdzcGFuJywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCd0aXRsZScpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLXRpdGxlJyk7fSkgJiYgKF9fYmxvY2tzLmhlYWRlciA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5oZWFkZXIgPyBibG9ja3MuaGVhZGVyLmNhbGwodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gX2Jsb2Nrcy5oZWFkZXIuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmhlYWRlci5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcy5oZWFkZXIuY2FsbCh0aGlzKSwgaChCdXR0b24sIHsndHlwZSc6ICdub25lJywgJ2ljb24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd0aXRsZSc6ICflhbPpl60nLCAnY2xhc3NOYW1lJzogJ2stY2xvc2UnLCAnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5jbG9zZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWNsb3NlLWVtcHR5JyksICdfY29udGV4dCc6IHRoaXN9KV0sICdrLWhlYWRlcicpLCBoKCdkaXYnLCBudWxsLCAoX2Jsb2Nrcy5ib2R5ID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmdldCgnY2hpbGRyZW4nKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpO30pICYmIChfX2Jsb2Nrcy5ib2R5ID0gZnVuY3Rpb24ocGFyZW50KSB7XG52YXIgc2VsZiA9IHRoaXM7XG5yZXR1cm4gYmxvY2tzLmJvZHkgPyBibG9ja3MuYm9keS5jYWxsKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIF9ibG9ja3MuYm9keS5jYWxsKHNlbGYsIHBhcmVudCk7XG59KSA6IF9ibG9ja3MuYm9keS5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcy5ib2R5LmNhbGwodGhpcyksICdrLWJvZHknKSwgaCgnZGl2JywgbnVsbCwgKF9ibG9ja3MuZm9vdGVyID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuIFtoKEJ1dHRvbiwgeydldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmNhbmNlbCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ2NhbmNlbFRleHQnKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnX2NvbnRleHQnOiB0aGlzfSksIGgoQnV0dG9uLCB7J3R5cGUnOiAncHJpbWFyeScsICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLm9rIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdsb2FkaW5nJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdsb2FkaW5nJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdkaXNhYmxlZE9rJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdva1RleHQnKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnX2NvbnRleHQnOiB0aGlzfSldO30pICYmIChfX2Jsb2Nrcy5mb290ZXIgPSBmdW5jdGlvbihwYXJlbnQpIHtcbnZhciBzZWxmID0gdGhpcztcbnJldHVybiBibG9ja3MuZm9vdGVyID8gYmxvY2tzLmZvb3Rlci5jYWxsKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIF9ibG9ja3MuZm9vdGVyLmNhbGwoc2VsZiwgcGFyZW50KTtcbn0pIDogX2Jsb2Nrcy5mb290ZXIuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3MuZm9vdGVyLmNhbGwodGhpcyksICdrLWZvb3RlcicpXSwgJ19jb250ZXh0JzogdGhpc30pIDogdW5kZWZpbmVkXSwgJ2stZGlhbG9nLXdyYXBwZXInLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZG9tID0+IHNlbGYuJGVsZW1lbnQgPSBkb20gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSksICdfY29udGV4dCc6IHRoaXN9KVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZGlhbG9nL2luZGV4LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB7aXNUZXh0Vk5vZGUsIGZpbmRQYXJlbnRDb21wb25lbnR9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBEcm9wZG93bk1lbnUgZnJvbSAnLi9tZW51JztcblxuY29uc3QgaCA9IEludGFjdC5WZHQubWlzcy5oO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEcm9wZG93biBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIGRhdGEuZ2V0KCdjaGlsZHJlbicpO1xuICAgIH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJyxcbiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICB0aGlzLl9zYXZlT3JpZ2luYWxFdmVudHMoKTtcbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTpjaGlsZHJlbicsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3NhdmVPcmlnaW5hbEV2ZW50cygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfc2F2ZU9yaWdpbmFsRXZlbnRzKCkge1xuICAgICAgICBsZXQge2NoaWxkcmVuLCB0cmlnZ2VyLCBjbGFzc05hbWUsIC4uLnJlc3R9ID0gdGhpcy5nZXQoKTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IGNoaWxkcmVuWzBdO1xuICAgICAgICB9IFxuICAgICAgICBpZiAoaXNUZXh0Vk5vZGUoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgICBjaGlsZHJlbiA9IGgoJ3NwYW4nLCByZXN0LCBjaGlsZHJlbiwgY2xhc3NOYW1lKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNhdmUgdGhlIG9yaWdpbmFsIGV2ZW50XG4gICAgICAgIGNvbnN0IG9yaWdpblByb3BzID0gY2hpbGRyZW4ucHJvcHM7XG4gICAgICAgIGlmICghY2hpbGRyZW4uX2hhc1NhdmVkKSB7XG4gICAgICAgICAgICBjaGlsZHJlbi5fZXZDbGljayA9IG9yaWdpblByb3BzWydldi1jbGljayddO1xuICAgICAgICAgICAgY2hpbGRyZW4uX2V2TW91c2VFbnRlciA9IG9yaWdpblByb3BzWydldi1tb3VzZWVudGVyJ107XG4gICAgICAgICAgICBjaGlsZHJlbi5fZXZNb3VzZUxlYXZlID0gb3JpZ2luUHJvcHNbJ2V2LW1vdXNlbGVhdmUnXTtcbiAgICAgICAgICAgIGNoaWxkcmVuLl9oYXNTYXZlZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvcHMgPSB7fTtcbiAgICAgICAgLy8gaWYgKHRyaWdnZXIgPT09ICdjbGljaycpIHtcbiAgICAgICAgICAgIHByb3BzWydldi1jbGljayddID0gdGhpcy5zaG93LmJpbmQodGhpcywgY2hpbGRyZW4uX2V2Q2xpY2spO1xuICAgICAgICAvLyB9IGVsc2Uge1xuICAgICAgICBpZiAodHJpZ2dlciA9PT0gJ2hvdmVyJykge1xuICAgICAgICAgICAgcHJvcHNbJ2V2LW1vdXNlZW50ZXInXSA9IHRoaXMuc2hvdy5iaW5kKHRoaXMsIGNoaWxkcmVuLl9ldk1vdXNlRW50ZXIpO1xuICAgICAgICAgICAgcHJvcHNbJ2V2LW1vdXNlbGVhdmUnXSA9IHRoaXMuaGlkZS5iaW5kKHRoaXMsIGNoaWxkcmVuLl9ldk1vdXNlTGVhdmUpO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkcmVuLnByb3BzID0gey4uLmNoaWxkcmVuLnByb3BzLCAuLi5wcm9wc307XG4gICAgICAgIHRoaXMuc2V0KCdjaGlsZHJlbicsIGNoaWxkcmVuLCB7c2lsZW50OiB0cnVlfSk7XG4gICAgfVxuXG4gICAgX21vdW50KCkge1xuICAgICAgICB0aGlzLmdldCgnbWVudScpLmNoaWxkcmVuLmRyb3Bkb3duID0gdGhpcztcbiAgICB9XG5cbiAgICBzaG93KGZuLCBlLCBpc0ZvY3VzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZm4gPT09ICdmdW5jdGlvbicpIGZuKGUpO1xuXG4gICAgICAgIGlmICh0aGlzLmdldCgnZGlzYWJsZWQnKSkgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IG1lbnUgPSB0aGlzLmdldCgnbWVudScpLmNoaWxkcmVuO1xuICAgICAgICBtZW51LnNob3coKTtcblxuICAgICAgICBpZiAoaXNGb2N1cykge1xuICAgICAgICAgICAgbWVudS5mb2N1c0l0ZW1CeUluZGV4KDApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaGlkZShmbiwgZSwgaW1tZWRpYXRlbHkpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJykgZm4oZSk7XG5cbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdkaXNhYmxlZCcpKSByZXR1cm47XG5cbiAgICAgICAgY29uc3QgbWVudSA9IHRoaXMuZ2V0KCdtZW51JykuY2hpbGRyZW47XG4gICAgICAgIG1lbnUuaGlkZShpbW1lZGlhdGVseSk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9kcm9wZG93bi9kcm9wZG93bi5qcyIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCBEcm9wZG93biBmcm9tICcuL2Ryb3Bkb3duJztcbmltcG9ydCBEcm9wZG93bk1lbnUgZnJvbSAnLi9tZW51JztcbmltcG9ydCBEcm9wZG93bkl0ZW0gZnJvbSAnLi9pdGVtJztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuY29uc3QgaCA9IEludGFjdC5WZHQubWlzcy5oO1xuXG5mdW5jdGlvbiBXcmFwcGVyKHByb3BzLCBpblZ1ZSkge1xuICAgIGxldCB7XG4gICAgICAgIGNoaWxkcmVuLCBwb3NpdGlvbiwga2V5LFxuICAgICAgICByZWYsIC4uLnJlc3RcbiAgICB9ID0gcHJvcHM7XG5cbiAgICBjb25zdCBlbGVtZW50ID0gY2hpbGRyZW5bMF07XG4gICAgY29uc3QgbWVudSA9IGNoaWxkcmVuWzFdO1xuXG4gICAgbWVudS5wcm9wcyA9IHtcbiAgICAgICAgcG9zaXRpb24sIFxuICAgICAgICBrZXk6IGtleSA9PSBudWxsID8ga2V5IDogYCR7a2V5fS5tZW51YCxcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgLi4ubWVudS5wcm9wcyxcbiAgICB9O1xuXG4gICAgcmV0dXJuICFpblZ1ZSA/IFxuICAgICAgICBbXG4gICAgICAgICAgICBoKERyb3Bkb3duLCB7XG4gICAgICAgICAgICAgICAga2V5OiBrZXkgPT0gbnVsbCA/IGtleSA6IGAke2tleX0udHJpZ2dlcmAsXG4gICAgICAgICAgICAgICAgcmVmOiByZWYsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IGVsZW1lbnQsIFxuICAgICAgICAgICAgICAgIG1lbnU6IG1lbnUsXG4gICAgICAgICAgICAgICAgLi4ucmVzdFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBtZW51XG4gICAgICAgIF0gOlxuICAgICAgICBoKFZ1ZVdyYXBwZXIsIHtcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgaChEcm9wZG93biwge1xuICAgICAgICAgICAgICAgICAgICBrZXk6IGtleSA9PSBudWxsID8ga2V5IDogYCR7a2V5fS50cmlnZ2VyYCxcbiAgICAgICAgICAgICAgICAgICAgcmVmOiByZWYsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbZWxlbWVudF0sIFxuICAgICAgICAgICAgICAgICAgICBtZW51OiBtZW51LFxuICAgICAgICAgICAgICAgICAgICAuLi5yZXN0XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgbWVudVxuICAgICAgICAgICAgXVxuICAgICAgICB9KTtcbn1cblxuLy8gVnVlIG9ubHkgc3VwcG9ydCByZXR1cm4gb25lIGVsZW1lbnQgZnJvbSBmdW5jdGlvbmFsIGNvbXBvbmVudCxcbi8vIHNvIHdlIHdyYXAgdGhlbS4gVGhpcyB3aWxsIGxlYWQgdG8gZGFtYWdlIHRoZSBkb20gc3RydWN0aW9uLFxuLy8gYmVjYXVzZSB3ZSBtdXN0IHdyYXAgdGhlbSB3aXRoIGEgZGl2XG5jbGFzcyBWdWVXcmFwcGVyIGV4dGVuZHMgSW50YWN0IHtcbiAgICB0ZW1wbGF0ZShkYXRhKSB7XG4gICAgICAgIHJldHVybiBoKCdkaXYnLCBudWxsLCBkYXRhLmdldCgnY2hpbGRyZW4nKSwgJ2stZHJvcGRvd24nKTtcbiAgICB9XG59XG5cbmNvbnN0IF9XcmFwcGVyID0gSW50YWN0LmZ1bmN0aW9uYWxXcmFwcGVyID9cbiAgICBJbnRhY3QuZnVuY3Rpb25hbFdyYXBwZXIoV3JhcHBlcikgOiBXcmFwcGVyO1xuXG5leHBvcnQgZGVmYXVsdCBfV3JhcHBlcjtcblxuZXhwb3J0IHtfV3JhcHBlciBhcyBEcm9wZG93biwgRHJvcGRvd25NZW51LCBEcm9wZG93bkl0ZW19O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9kcm9wZG93bi9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvZHJvcGRvd24vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9jb21wb25lbnRzL2Ryb3Bkb3duL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaXRlbS52ZHQnO1xuaW1wb3J0IERyb3Bkb3duIGZyb20gJy4vZHJvcGRvd24nO1xuaW1wb3J0IERyb3Bkb3duTWVudSBmcm9tICcuL21lbnUnO1xuaW1wb3J0IHtmaW5kUGFyZW50Q29tcG9uZW50fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERyb3Bkb3duSXRlbSBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICAgICAgaGlkZU9uU2VsZWN0OiBCb29sZWFuLFxuICAgIH07XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGhpZGVPblNlbGVjdDogdHJ1ZSxcblxuICAgICAgICAgICAgX2lzRm9jdXM6IGZhbHNlLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICAvLyBpZiBzZWxlY3RlZCBoaWRlIGFsbCBkcm9wZG93biBtZW51XG4gICAgICAgIHRoaXMub24oJ3NlbGVjdCcsICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldCgnaGlkZU9uU2VsZWN0JykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBhbmNlc3RvciA9IHRoaXMuX2ZpbmRBbmNlc3RvckRyb3Bkb3duTWVudSgpO1xuICAgICAgICAgICAgICAgIGFuY2VzdG9yLmhpZGUodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9tb3VudCgpIHtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5wYXJlbnQgPSB0aGlzLl9maW5kQW5jZXN0b3JEcm9wZG93bk1lbnUodHJ1ZSk7XG4gICAgICAgIHBhcmVudC5pdGVtcy5wdXNoKHRoaXMpO1xuICAgIH1cblxuICAgIF9vbkNsaWNrKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdkaXNhYmxlZCcpKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy50cmlnZ2VyKCdjbGljaycsIGUpO1xuXG4gICAgICAgIC8vIGlzIG5vdCBhIHN1YiBkcm9wZG93biB0cmlnZ2VyXG4gICAgICAgIGlmICh0aGlzLnBhcmVudFZOb2RlLnRhZyAhPT0gRHJvcGRvd24pIHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignc2VsZWN0JywgdGhpcywgZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfb25Nb3VzZUVudGVyKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdkaXNhYmxlZCcpKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy50cmlnZ2VyKCdtb3VzZWVudGVyJywgZSk7XG5cbiAgICAgICAgdGhpcy5wYXJlbnQuZm9jdXNJdGVtKHRoaXMpO1xuICAgIH1cblxuICAgIF9vbk1vdXNlTGVhdmUoZSkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2Rpc2FibGVkJykpIHJldHVybjtcblxuICAgICAgICB0aGlzLnRyaWdnZXIoJ21vdXNlbGVhdmUnLCBlKTtcbiAgICB9XG5cbiAgICBzZWxlY3QoKSB7XG4gICAgICAgIC8vIGlzIG5vdCBhIHN1YiBkcm9wZG93biB0cmlnZ2VyXG4gICAgICAgIGNvbnN0IGRyb3Bkb3duID0gdGhpcy5faXNTdWJNZW51KCk7XG4gICAgICAgIGlmICghZHJvcGRvd24pIHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignc2VsZWN0JywgdGhpcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkcm9wZG93bi5zaG93KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb2N1cygpIHtcbiAgICAgICAgdGhpcy5zZXQoJ19pc0ZvY3VzJywgdHJ1ZSk7XG5cbiAgICAgICAgY29uc3QgZWxSZWN0ID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBjb25zdCBwRWwgPSB0aGlzLnBhcmVudC5yZWZzLm1lbnUuZWxlbWVudDtcbiAgICAgICAgY29uc3QgcEVsUmVjdCA9IHBFbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc3QgYm90dG9tT3ZlcmZsb3dEaXN0YW5jZSA9IGVsUmVjdC5ib3R0b20gLSBwRWxSZWN0LmJvdHRvbTtcbiAgICAgICAgY29uc3QgdG9wT3ZlcmZsb3dEaXN0YW5jZSA9IGVsUmVjdC50b3AgLSBwRWxSZWN0LnRvcDtcbiAgICAgICAgXG4gICAgICAgIGlmIChib3R0b21PdmVyZmxvd0Rpc3RhbmNlID4gMCkge1xuICAgICAgICAgICAgcEVsLnNjcm9sbFRvcCArPSBib3R0b21PdmVyZmxvd0Rpc3RhbmNlO1xuICAgICAgICB9IGVsc2UgaWYgKHRvcE92ZXJmbG93RGlzdGFuY2UgPCAwKSB7XG4gICAgICAgICAgICBwRWwuc2Nyb2xsVG9wICs9IHRvcE92ZXJmbG93RGlzdGFuY2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1bkZvY3VzKCkge1xuICAgICAgICB0aGlzLnNldCgnX2lzRm9jdXMnLCBmYWxzZSk7XG5cbiAgICAgICAgY29uc3QgZHJvcGRvd24gPSB0aGlzLl9pc1N1Yk1lbnUoKTtcbiAgICAgICAgaWYgKGRyb3Bkb3duKSB7XG4gICAgICAgICAgICBkcm9wZG93bi5oaWRlKG51bGwsIG51bGwsIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvd01lbnVBbmRGb2N1cygpIHtcbiAgICAgICAgY29uc3QgZHJvcGRvd24gPSB0aGlzLl9pc1N1Yk1lbnUoKTtcbiAgICAgICAgaWYgKGRyb3Bkb3duKSB7XG4gICAgICAgICAgICBkcm9wZG93bi5zaG93KG51bGwsIG51bGwsIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaGlkZU1lbnUoKSB7XG4gICAgICAgIGNvbnN0IGRyb3Bkb3duID0gdGhpcy5faXNTdWJNZW51KCk7XG4gICAgICAgIGlmIChkcm9wZG93bikge1xuICAgICAgICAgICAgZHJvcGRvd24uaGlkZShudWxsLCBudWxsLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9pc1N1Yk1lbnUoKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudFZOb2RlLnRhZyA9PT0gRHJvcGRvd24pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnBhcmVudFZOb2RlLmNoaWxkcmVuO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2ZpbmRBbmNlc3RvckRyb3Bkb3duTWVudShpc0ZpcnN0KSB7XG4gICAgICAgIHJldHVybiBmaW5kUGFyZW50Q29tcG9uZW50KERyb3Bkb3duTWVudSwgdGhpcywgaXNGaXJzdCk7XG4gICAgfVxuXG4gICAgX2Rlc3Ryb3koKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5wYXJlbnQuaXRlbXM7XG4gICAgICAgIGl0ZW1zLnNwbGljZShpdGVtcy5pbmRleE9mKHRoaXMpLCAxKTtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2Ryb3Bkb3duL2l0ZW0uanMiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbi8qIGltcG9ydCB7cHJveHlFdmVudH0gZnJvbSAnLi4vdXRpbHMnOyAqL1xuXG5jb25zdCB7Y2hpbGRyZW4sIGRpc2FibGVkLCBjbGFzc05hbWUsIF9pc0ZvY3VzfSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1pdGVtJzogdHJ1ZSxcbiAgICAnay1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG4gICAgJ2staG92ZXInOiBfaXNGb2N1cyxcbn1cblxucmV0dXJuIGgoJ2RpdicsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fb25DbGljayBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtbW91c2VlbnRlcic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vbk1vdXNlRW50ZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LW1vdXNlbGVhdmUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fb25Nb3VzZUxlYXZlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZHJvcGRvd24vaXRlbS52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9tZW51LnZkdCc7XG5pbXBvcnQgcG9zaXRpb24gZnJvbSAnLi4vbW92ZVdyYXBwZXIvcG9zaXRpb24nO1xuaW1wb3J0IHtmaW5kUGFyZW50Q29tcG9uZW50fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERyb3Bkb3duTWVudSBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJyxcbiAgICAgICAgICAgIHBvc2l0aW9uOiB7fSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdWJEcm9wZG93bnMgPSBbXTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLmZvY3VzSW5kZXggPSAtMTtcbiAgICAgICAgdGhpcy5sb2NrZWQgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLm9uKCckY2hhbmdlZDpzaG93JywgKGMsIHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZvY3VzSW5kZXggPSAtMTtcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGREb2N1bWVudEV2ZW50cygpO1xuICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb24oKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlRG9jdW1lbnRFdmVudHMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gdGhpcy5fb25Eb2N1bWVudENsaWNrID0gdGhpcy5fb25Eb2N1bWVudENsaWNrLmJpbmQodGhpcyk7XG4gICAgICAgIC8vIHRoaXMuX29uS2V5ZG93biA9IHRoaXMuX29uS2V5ZG93bi5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIF9tb3VudCgpIHtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5fZmluZFBhcmVudERyb3Bkb3duTWVudSgpO1xuICAgICAgICBpZiAocGFyZW50KSBwYXJlbnQuc3ViRHJvcGRvd25zLnB1c2godGhpcyk7XG5cbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdzaG93JykpIHtcbiAgICAgICAgICAgIHRoaXMuX2FkZERvY3VtZW50RXZlbnRzKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZmluZFBhcmVudERyb3Bkb3duTWVudSgpIHtcbiAgICAgICAgcmV0dXJuIGZpbmRQYXJlbnRDb21wb25lbnQoRHJvcGRvd25NZW51LCB0aGlzLCB0cnVlKTtcbiAgICB9XG5cbiAgICBzaG93KCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgIHRoaXMuc2V0KCdzaG93JywgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuX2ZpbmRQYXJlbnREcm9wZG93bk1lbnUoKTtcbiAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgcGFyZW50LnNob3coKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhpZGUoaW1tZWRpYXRlbHkpIHtcbiAgICAgICAgaWYgKCFpbW1lZGlhdGVseSkge1xuICAgICAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0KCdzaG93JywgZmFsc2UpO1xuICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2V0KCdzaG93JywgZmFsc2UpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdG9nZ2xlKCkge1xuICAgICAgICB0aGlzLnNldCgnc2hvdycsICF0aGlzLmdldCgnc2hvdycpKTtcbiAgICB9XG5cbiAgICBwb3NpdGlvbigpIHtcbiAgICAgICAgcG9zaXRpb24odGhpcy5yZWZzLm1lbnUuZWxlbWVudCwge1xuICAgICAgICAgICAgbXk6ICdjZW50ZXIgdG9wKzUnLCBcbiAgICAgICAgICAgIGF0OiAnY2VudGVyIGJvdHRvbScsIFxuICAgICAgICAgICAgb2Y6IHRoaXMuZHJvcGRvd24uZWxlbWVudCxcbiAgICAgICAgICAgIC4uLnRoaXMuZ2V0KCdwb3NpdGlvbicpXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9hZGREb2N1bWVudEV2ZW50cygpIHtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5fZmluZFBhcmVudERyb3Bkb3duTWVudSgpO1xuICAgICAgICBpZiAoIXBhcmVudCkge1xuICAgICAgICAgICAgLy8gaWYgKHRoaXMuZ2V0KCd0cmlnZ2VyJykgPT09ICdjbGljaycpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uRG9jdW1lbnRDbGljayk7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJlbnQubG9ja2VkID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleWRvd24pO1xuICAgIH1cblxuICAgIF9yZW1vdmVEb2N1bWVudEV2ZW50cygpIHtcbiAgICAgICAgY29uc3QgcGFyZW50ID0gdGhpcy5fZmluZFBhcmVudERyb3Bkb3duTWVudSgpO1xuICAgICAgICBpZiAoIXBhcmVudCkge1xuICAgICAgICAgICAgLy8gaWYgKHRoaXMuZ2V0KCd0cmlnZ2VyJykgPT09ICdjbGljaycpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uRG9jdW1lbnRDbGljayk7XG4gICAgICAgICAgICAvLyB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJlbnQubG9ja2VkID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlkb3duKTtcbiAgICB9XG5cbiAgICBfb25Eb2N1bWVudENsaWNrKGUpIHtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgICAgIGNvbnN0IG1lbnUgPSB0aGlzLnJlZnMubWVudS5lbGVtZW50O1xuXG4gICAgICAgIC8vIGlzIGEgZHJvcGRvd24gbWVudVxuICAgICAgICBpZiAobWVudSA9PT0gdGFyZ2V0IHx8IG1lbnUuY29udGFpbnModGFyZ2V0KSkgcmV0dXJuO1xuICAgICAgICAvLyBpcyBjbGljayBvbiBzdWIgbWVudVxuICAgICAgICBpZiAodGhpcy5faXNDbGlja1N1Yk1lbnUodGFyZ2V0LCB0aGlzLnN1YkRyb3Bkb3ducykpIHJldHVybjtcbiAgICAgICAgLy8gY3VzdG9tIGZsYWcgdG8gaW5kaWNhdGUgdGhhdCB0aGUgZXZlbnQgZG9lcyBub3QgbGVhZCB0byBjbG9zZSBtZW51XG4gICAgICAgIGlmIChlLl9kcm9wZG93bikgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuaGlkZSh0cnVlKTtcbiAgICB9XG5cbiAgICBfb25LZXlkb3duKGUpIHtcbiAgICAgICAgaWYgKHRoaXMubG9ja2VkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoIChlLmtleUNvZGUpIHtcbiAgICAgICAgICAgIC8vIGRvd25cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgICAgdGhpcy5fZm9jdXNOZXh0SXRlbShlKTsgXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAvLyB1cFxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgICB0aGlzLl9mb2N1c1ByZXZJdGVtKGUpOyBcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIC8vIHJpZ2h0XG4gICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgIHRoaXMuX3Nob3dTdWJNZW51KGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgLy8gbGVmdFxuICAgICAgICAgICAgY2FzZSAzNzpcbiAgICAgICAgICAgICAgICB0aGlzLl9oaWRlU3ViTWVudShlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIC8vIGVudGVyXG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgIHRoaXMuX3NlbGVjdEl0ZW0oZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZm9jdXNOZXh0SXRlbShlKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuX2ZpbmRQYXJlbnREcm9wZG93bk1lbnUoKTtcbiAgICAgICAgaWYgKHBhcmVudCAmJiB0aGlzLmZvY3VzSW5kZXggPCAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmZvY3VzSXRlbUJ5SW5kZXgodGhpcy5mb2N1c0luZGV4ICsgMSwgJ2Rvd24nKTtcbiAgICB9XG5cbiAgICBfZm9jdXNQcmV2SXRlbShlKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuX2ZpbmRQYXJlbnREcm9wZG93bk1lbnUoKTtcbiAgICAgICAgaWYgKHBhcmVudCAmJiB0aGlzLmZvY3VzSW5kZXggPCAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLmZvY3VzSXRlbUJ5SW5kZXgodGhpcy5mb2N1c0luZGV4IC0gMSwgJ3VwJyk7XG4gICAgfVxuXG4gICAgZm9jdXNJdGVtQnlJbmRleChpbmRleCwgZGlyZWN0aW9uID0gJ2Rvd24nKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5pdGVtcztcbiAgICAgICAgY29uc3QgbWF4ID0gaXRlbXMubGVuZ3RoIC0gMTtcbiAgICAgICAgY29uc3Qgb2xkSW5kZXggPSB0aGlzLmZvY3VzSW5kZXg7XG5cbiAgICAgICAgZnVuY3Rpb24gZml4SW5kZXgoaW5kZXgpIHtcbiAgICAgICAgICAgIGlmIChpbmRleCA+IG1heCkge1xuICAgICAgICAgICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5kZXggPCAwKSB7XG4gICAgICAgICAgICAgICAgaW5kZXggPSBtYXg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgIH1cblxuICAgICAgICBpbmRleCA9IGZpeEluZGV4KGluZGV4KTtcblxuICAgICAgICBsZXQgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDw9IG1heCAmJiBpdGVtc1tpbmRleF0gJiYgaXRlbXNbaW5kZXhdLmdldCgnZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgaW5kZXggPSBmaXhJbmRleChkaXJlY3Rpb24gPT09ICdkb3duJyA/IGluZGV4ICsgMSA6IGluZGV4IC0gMSk7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhbGwgaXRlbXMgYXJlIGRpc2FibGVkXG4gICAgICAgIGlmIChpID4gbWF4KSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5mb2N1c0luZGV4ID0gaW5kZXg7XG5cbiAgICAgICAgaWYgKG9sZEluZGV4ID4gLTEgJiYgaXRlbXNbb2xkSW5kZXhdKSB7XG4gICAgICAgICAgICBpdGVtc1tvbGRJbmRleF0udW5Gb2N1cygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaXRlbXNbaW5kZXhdLmZvY3VzKCk7XG4gICAgfVxuXG4gICAgX3NlbGVjdEl0ZW0oZSkge1xuICAgICAgICB0aGlzLl9zaG93U3ViTWVudShlKTtcbiAgICAgICAgaWYgKHRoaXMuZm9jdXNJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLml0ZW1zW3RoaXMuZm9jdXNJbmRleF0uc2VsZWN0KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfc2hvd1N1Yk1lbnUoZSkge1xuICAgICAgICBjb25zdCBwYXJlbnQgPSB0aGlzLl9maW5kUGFyZW50RHJvcGRvd25NZW51KCk7XG4gICAgICAgIGlmICghcGFyZW50ICYmIHRoaXMuZm9jdXNJbmRleCA8IDApIHJldHVybjtcblxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGlmIChwYXJlbnQgJiYgdGhpcy5mb2N1c0luZGV4IDwgMCkge1xuICAgICAgICAgICAgdGhpcy5mb2N1c0l0ZW1CeUluZGV4KDApO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZm9jdXNJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICB0aGlzLml0ZW1zW3RoaXMuZm9jdXNJbmRleF0uc2hvd01lbnVBbmRGb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2hpZGVTdWJNZW51KGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZm9jdXNJbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLml0ZW1zW3RoaXMuZm9jdXNJbmRleF0uaGlkZU1lbnUoKTtcblxuICAgICAgICAgICAgY29uc3QgcGFyZW50ID0gZmluZFBhcmVudENvbXBvbmVudChEcm9wZG93bk1lbnUsIHRoaXMsIHRydWUpO1xuICAgICAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuZHJvcGRvd24uaGlkZShudWxsLCBudWxsLCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZvY3VzSXRlbShpdGVtKSB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pdGVtcy5pbmRleE9mKGl0ZW0pO1xuICAgICAgICB0aGlzLmZvY3VzSXRlbUJ5SW5kZXgoaW5kZXgpO1xuICAgIH1cblxuICAgIF9pc0NsaWNrU3ViTWVudSh0YXJnZXQsIHN1Yk1lbnVzKSB7XG4gICAgICAgIGxldCByZXQgPSBmYWxzZTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdWJNZW51cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qgc3ViTWVudSA9IHN1Yk1lbnVzW2ldLnJlZnMubWVudTtcbiAgICAgICAgICAgIGlmIChzdWJNZW51KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldCA9PT0gc3ViTWVudS5lbGVtZW50IHx8IHN1Yk1lbnUuZWxlbWVudC5jb250YWlucyh0YXJnZXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldCA9IHRoaXMuX2lzQ2xpY2tTdWJNZW51KHRhcmdldCwgc3ViTWVudXNbaV0uc3ViRHJvcGRvd25zKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJldCkgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfVxuXG4gICAgX2Rlc3Ryb3koKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudCA9IHRoaXMuX2ZpbmRQYXJlbnREcm9wZG93bk1lbnUoKTtcbiAgICAgICAgaWYgKHBhcmVudCkge1xuICAgICAgICAgICAgY29uc3Qgc3ViRHJvcGRvd25zID0gcGFyZW50LnN1YkRyb3Bkb3ducztcbiAgICAgICAgICAgIHN1YkRyb3Bkb3ducy5zcGxpY2Uoc3ViRHJvcGRvd25zLmluZGV4T2YodGhpcyksIDEpO1xuICAgICAgICB9IFxuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgIHRoaXMuX3JlbW92ZURvY3VtZW50RXZlbnRzKCk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9kcm9wZG93bi9tZW51LmpzIiwiaW1wb3J0IE1vdmVXcmFwcGVyIGZyb20gJy4uL21vdmVXcmFwcGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcblxuXG5jb25zdCB7Y2hpbGRyZW4sIHNob3csIHRyaWdnZXIsIGNsYXNzTmFtZX0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBldmVudHMgPSB7fTtcbi8vIG5vIG1hdHRlciB3aGF0IHRoZSB0cmlnZ2VyIGlzLCB3ZSBzaG91bGQgc2hvdyBtZW51IHdoZW4gZW50ZXIgaXQuXG4vLyBmb3IgdGhlIGNhc2U6IGhvdmVyIHRyaWdnZXIgbmVzdHMgY2xpY2sgdHJpZ2dlclxuZXZlbnRzWydldi1tb3VzZWVudGVyJ10gPSBzZWxmLnNob3c7XG5pZiAodHJpZ2dlciA9PT0gJ2hvdmVyJykge1xuICAgIGV2ZW50c1snZXYtbW91c2VsZWF2ZSddID0gc2VsZi5oaWRlLmJpbmQoc2VsZiwgZmFsc2UpO1xufVxuXG5yZXR1cm4gaChNb3ZlV3JhcHBlciwgeydfcGFyZW50JzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3Nob3cgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQW5pbWF0ZSwgeydjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XCJrLWRyb3Bkb3duLW1lbnVcIjogdHJ1ZSwgW2NsYXNzTmFtZV06IGNsYXNzTmFtZX0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSksICdhOnRyYW5zaXRpb24nOiAnZHJvcGRvd24nLCAuLi5mdW5jdGlvbigpIHt0cnkge3JldHVybiBbZXZlbnRzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdhOmRlbGF5RGVzdHJveSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmYWxzZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ19jb250ZXh0JzogdGhpc30sIG51bGwsIG51bGwsIG51bGwsIGZ1bmN0aW9uKGkpIHt3aWRnZXRzWydtZW51J10gPSBpfSkgOiB1bmRlZmluZWQsICdfY29udGV4dCc6IHRoaXN9LCBudWxsLCBudWxsLCBudWxsLCBmdW5jdGlvbihpKSB7d2lkZ2V0c1snd3JhcHBlciddID0gaX0pXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9kcm9wZG93bi9tZW51LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5pbXBvcnQge3NlbGVjdElucHV0fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVkaXRhYmxlIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgICAgIHZhbGlkYXRlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsIFxuICAgICAgICAgICAgdGlwOiAn57yW6L6RJyxcbiAgICAgICAgICAgIHRyaW06IHRydWUsXG4gICAgICAgICAgICBpbnZhbGlkOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBlZGl0aW5nOiBCb29sZWFuLFxuICAgICAgICByZXF1aXJlZDogQm9vbGVhbixcbiAgICAgICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgICAgIHRpcDogW1N0cmluZywgTnVtYmVyXSxcbiAgICAgICAgdHJpbTogQm9vbGVhbixcbiAgICAgICAgaW52YWxpZDogQm9vbGVhbixcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5pbml0VmFsdWUgPSB0aGlzLmdldCgndmFsdWUnKTtcbiAgICB9XG5cbiAgICBfZWRpdCgpIHtcbiAgICAgICAgdGhpcy5zZXQoJ2VkaXRpbmcnLCB0cnVlKTtcbiAgICAgICAgY29uc3QgaW5wdXQgPSB0aGlzLnJlZnMuaW5wdXQ7XG4gICAgICAgIHNlbGVjdElucHV0KGlucHV0KTtcbiAgICB9XG5cbiAgICBfb25CbHVyKGUpIHtcbiAgICAgICAgdGhpcy5fc2V0VmFsdWUoZS50YXJnZXQudmFsdWUpO1xuICAgIH1cblxuICAgIF9vbktleWRvd24oZSkge1xuICAgICAgICBzd2l0Y2ggKGUua2V5Q29kZSkge1xuICAgICAgICAgICAgY2FzZSAyNzogLy8gZXNjIFxuICAgICAgICAgICAgICAgIHRoaXMuc2V0KCdlZGl0aW5nJywgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAxMzogLy8gZW50ZXJcbiAgICAgICAgICAgICAgICB0aGlzLl9vbkJsdXIoZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfc2V0VmFsdWUodmFsdWUpIHtcbiAgICAgICAgY29uc3Qge3ZhbGlkYXRlLCByZXF1aXJlZCwgdHJpbX0gPSB0aGlzLmdldCgpO1xuXG4gICAgICAgIGlmICh0cmltKSB2YWx1ZSA9IHZhbHVlLnRyaW0oKTtcbiAgICAgICAgXG4gICAgICAgIGxldCB2YWxpZCA9IHRydWU7XG5cbiAgICAgICAgaWYgKHJlcXVpcmVkICYmICF2YWx1ZSkge1xuICAgICAgICAgICAgdmFsaWQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmICh2YWxpZGF0ZSAmJiB2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWxpZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHZhbGlkID0gdmFsaWRhdGUuY2FsbCh0aGlzLCB2YWx1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHZhbGlkYXRlIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgICAgICAgICAgdmFsaWQgPSB2YWxpZGF0ZS50ZXN0KHZhbHVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbGlkYXRlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHZhbGlkID0gbmV3IFJlZ0V4cCh2YWxpZGF0ZSkudGVzdCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB2YWx1ZSwge3NpbGVudDogdHJ1ZX0pO1xuICAgICAgICAgICAgdGhpcy5zZXQoJ2ludmFsaWQnLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnRyaWdnZXIoJ2Vycm9yJywgdGhpcywgdmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXQoe1xuICAgICAgICAgICAgaW52YWxpZDogZmFsc2UsXG4gICAgICAgICAgICBlZGl0aW5nOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy5zZXQoe1xuICAgICAgICAgICAgJ3ZhbHVlJzogdGhpcy5pbml0VmFsdWUsXG4gICAgICAgICAgICAnZWRpdGluZyc6IGZhbHNlLFxuICAgICAgICAgICAgJ2ludmFsaWQnOiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5leHBvcnQge0VkaXRhYmxlfTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZWRpdGFibGUvaW5kZXguanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb21wb25lbnRzL2VkaXRhYmxlL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9lZGl0YWJsZS9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImltcG9ydCBJbnB1dCBmcm9tICcuLi9pbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuY29uc3Qge1xuICAgIGVkaXRpbmcsIHZhbHVlLCB2YWxpZGF0ZSxcbiAgICBkaXNhYmxlZCwgc3R5bGUsIHRpcCxcbiAgICBjaGlsZHJlbiwgaW52YWxpZFxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1lZGl0YWJsZSc6IHRydWUsXG4gICAgJ2stZWRpdGluZyc6IGVkaXRpbmcsXG4gICAgJ2stZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICAnay1pbnZhbGlkJzogaW52YWxpZCxcbn07XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gWyFkaXNhYmxlZCAmJiAhZWRpdGluZyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnaScsIHsndGl0bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdGlwIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9lZGl0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCAnaW9uLWVkaXQgay1lZGl0JykgOiB1bmRlZmluZWQsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZSB8fCBlZGl0aW5nIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdkaXYnLCBudWxsLCBbJ1xcbiAgICAgICAgJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gWyFlZGl0aW5nID8gY2hpbGRyZW4gOlxuICAgICAgICAgICAgaChJbnB1dCwgeydzaXplJzogJ3NtYWxsJywgJ2RlZmF1bHRWYWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtYmx1cic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vbkJsdXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWtleWRvd24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fb25LZXlkb3duIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9LCBudWxsLCBudWxsLCBudWxsLCBmdW5jdGlvbihpKSB7d2lkZ2V0c1snaW5wdXQnXSA9IGl9KVxuICAgICAgICBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnXFxuICAgICddLCAnYy1lbGxpcHNpcycpIDogdW5kZWZpbmVkXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZWRpdGFibGUvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vZm9ybS52ZHQnO1xuaW1wb3J0IHttZXRob2RzLCBtZXNzYWdlcywgY2xhc3NOYW1lcywgYWRkTWV0aG9kfSBmcm9tICcuL21ldGhvZHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtIGV4dGVuZHMgSW50YWN0IHtcbiAgICBzdGF0aWMgbWV0aG9kcyA9IG1ldGhvZHM7IFxuXG4gICAgc3RhdGljIG1lc3NhZ2VzID0gbWVzc2FnZXM7IFxuXG4gICAgc3RhdGljIGNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXG4gICAgc3RhdGljIGFkZE1ldGhvZCA9IGFkZE1ldGhvZDtcblxuXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgZ2V0IHRlbXBsYXRlKCkgeyByZXR1cm4gdGVtcGxhdGU7IH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaXRlbXM6IFtdLFxuICAgICAgICAgICAgcnVsZXM6IHt9LFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0UnVsZXMoKSB7XG4gICAgICAgIGNvbnN0IHJ1bGVzID0gdGhpcy5nZXQoJ3J1bGVzJyk7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5nZXQoJ2l0ZW1zJyk7XG5cbiAgICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIHJ1bGVzW2l0ZW0uZ2V0KCdtb2RlbCcpXSA9IGl0ZW0uZ2V0KCdydWxlcycpO1xuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcnVsZXM7XG4gICAgfVxuXG4gICAgdmFsaWRhdGUoKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5nZXQoJ2l0ZW1zJyk7XG5cbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGl0ZW1zLm1hcChpdGVtID0+IGl0ZW0udmFsaWRhdGUoKSkpLnRoZW4odmFsdWVzID0+IHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZXMuZXZlcnkodmFsdWUgPT4gdmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXNldCgpIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSB0aGlzLmdldCgnaXRlbXMnKTtcbiAgICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IGl0ZW0ucmVzZXQoKSk7XG4gICAgfVxuXG4gICAgZ2V0SXRlbShtb2RlbCkge1xuICAgICAgICBjb25zdCBpdGVtcyA9IHRoaXMuZ2V0KCdpdGVtcycpO1xuICAgICAgICBpZiAobW9kZWwgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGl0ZW1zO1xuICAgICAgICByZXR1cm4gaXRlbXMuZmluZChpdGVtID0+IGl0ZW0uZ2V0KCdtb2RlbCcpID09PSBtb2RlbCk7XG4gICAgfVxuXG4gICAgb3B0aW9uYWwoaXRlbSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGl0ZW0uZ2V0KCd2YWx1ZScpO1xuICAgICAgICByZXR1cm4gIUZvcm0ubWV0aG9kcy5yZXF1aXJlZC5jYWxsKHRoaXMsIHZhbHVlLCBpdGVtKTtcbiAgICB9XG5cbiAgICBzdWJtaXQoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKS50aGVuKGlzVmFsaWQgPT4ge1xuICAgICAgICAgICAgaWYgKGlzVmFsaWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ3N1Ym1pdCcsIGUsIHRoaXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2Zvcm0vZm9ybS5qcyIsIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuY29uc3Qge2NoaWxkcmVuLCBjbGFzc05hbWUsIHJlZiwga2V5LCBzdHlsZX0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBjbGFzc05hbWVPYmogPSB7XG4gICAgJ2stZm9ybSc6IHRydWUsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZVxufTtcblxucmV0dXJuIGgoJ2Zvcm0nLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1zdWJtaXQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5zdWJtaXQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ25vVmFsaWRhdGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZm9ybS9mb3JtLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2Zvcm1JdGVtLnZkdCc7XG5pbXBvcnQgRm9ybSBmcm9tICcuL2Zvcm0nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtSXRlbSBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgZ2V0IHRlbXBsYXRlKCkgeyByZXR1cm4gdGVtcGxhdGU7IH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIG1vZGVsOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBydWxlczoge30sXG4gICAgICAgICAgICBpc1ZhbGlkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBpc0RpcnR5OiBmYWxzZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICcnLFxuICAgICAgICAgICAgbWVzc2FnZXM6IHt9LFxuICAgICAgICAgICAgY2xhc3NOYW1lczoge30sXG4gICAgICAgICAgICBlcnJvckNsYXNzTmFtZTogJycsXG4gICAgICAgICAgICBsYWJlbDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaHRtbEZvcjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaGlkZUxhYmVsOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIGhpZGVMYWJlbDogQm9vbGVhbixcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5pbml0VmFsdWUgPSB0aGlzLmdldCgndmFsdWUnKTtcbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTp2YWx1ZScsIHRoaXMudmFsaWRhdGVJZkRpcnR5KTtcbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTpydWxlcycsIHRoaXMudmFsaWRhdGVJZkRpcnR5KTtcbiAgICB9XG5cbiAgICBfbW91bnQoKSB7XG4gICAgICAgIGlmICghdGhpcy5nZXQoJ21vZGVsJykpIHJldHVybjtcblxuICAgICAgICBsZXQgZm9ybSA9IHRoaXMucGFyZW50Vk5vZGU7XG4gICAgICAgIHdoaWxlIChmb3JtICYmIGZvcm0udGFnICE9PSBGb3JtKSB7XG4gICAgICAgICAgICBmb3JtID0gZm9ybS5wYXJlbnRWTm9kZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWZvcm0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRm9ybUl0ZW0gbXVzdCBiZSB1c2VkIGFzIHRoZSBkZXNjZW5kYW50IG9mIEZvcm0nKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZvcm0gPSBmb3JtID0gZm9ybS5jaGlsZHJlbjtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBmb3JtLmdldCgnaXRlbXMnKTtcbiAgICAgICAgaXRlbXMucHVzaCh0aGlzKTtcbiAgICB9XG5cbiAgICBnZXRSdWxlcygpIHtcbiAgICAgICAgY29uc3QgZm9ybVJ1bGVzID0gdGhpcy5mb3JtLmdldChgcnVsZXMuJHt0aGlzLmdldCgnbW9kZWwnKX1gKTtcbiAgICAgICAgY29uc3Qgc2VsZlJ1bGVzID0gdGhpcy5nZXQoJ3J1bGVzJyk7XG5cbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGZvcm1SdWxlcywgc2VsZlJ1bGVzKTtcbiAgICB9XG4gICAgXG4gICAgZ2V0TWVzc2FnZShuYW1lKSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRNZXNzYWdlcyA9IEZvcm0ubWVzc2FnZXM7IFxuICAgICAgICBjb25zdCBjdXN0b21NZXNzYWdlcyA9IHRoaXMuZ2V0KCdtZXNzYWdlcycpO1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gY3VzdG9tTWVzc2FnZXNbbmFtZV0gfHwgZGVmYXVsdE1lc3NhZ2VzW25hbWVdO1xuXG4gICAgICAgIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY29uc3QgcnVsZXMgPSB0aGlzLmdldFJ1bGVzKCk7XG4gICAgICAgICAgICByZXR1cm4gbWVzc2FnZS5jYWxsKHRoaXMuZm9ybSwgdGhpcy5nZXQoJ3ZhbHVlJyksIHRoaXMsIHJ1bGVzW25hbWVdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBtZXNzYWdlO1xuICAgIH1cblxuICAgIGdldENsYXNzTmFtZShuYW1lKSB7XG4gICAgICAgIGNvbnN0IGRlZmF1bHRDbGFzc05hbWVzID0gRm9ybS5jbGFzc05hbWVzO1xuICAgICAgICBjb25zdCBjdXN0b21DbGFzc05hbWVzID0gdGhpcy5nZXQoJ2NsYXNzTmFtZXMnKTtcbiAgICAgICAgY29uc3QgY2xhc3NOYW1lID0gY3VzdG9tQ2xhc3NOYW1lc1tuYW1lXSB8fCBkZWZhdWx0Q2xhc3NOYW1lc1tuYW1lXTtcblxuICAgICAgICBpZiAodHlwZW9mIGNsYXNzTmFtZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY29uc3QgcnVsZXMgPSB0aGlzLmdldFJ1bGVzKCk7XG4gICAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lLmNhbGwodGhpcy5mb3JtLCB0aGlzLmdldCgndmFsdWUnKSwgdGhpcywgcnVsZXNbbmFtZV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNsYXNzTmFtZTtcbiAgICB9XG5cbiAgICB2YWxpZGF0ZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmdldCgnbW9kZWwnKSkgcmV0dXJuO1xuICAgICAgICBcbiAgICAgICAgdGhpcy5fY2FuY2VsKCk7XG5cbiAgICAgICAgY29uc3QgcnVsZXMgPSB0aGlzLmdldFJ1bGVzKCk7XG4gICAgICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgICAgIGNvbnN0IGtleXMgPSBbXTtcblxuICAgICAgICAvLyBjaGVjayByZXF1aXJlZCBmaXJzdGx5XG4gICAgICAgIGxldCByZXF1aXJlZCA9IEZvcm0ubWV0aG9kcy5yZXF1aXJlZC5jYWxsKHRoaXMuZm9ybSwgdGhpcy5nZXQoJ3ZhbHVlJyksIHRoaXMpO1xuICAgICAgICBpZiAocnVsZXMucmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHByb21pc2VzLnB1c2gocmVxdWlyZWQpO1xuICAgICAgICAgICAga2V5cy5wdXNoKCdyZXF1aXJlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaWYgdGhlIGZpZWxkIGlzIG5vdCBlbXB0eSwgdGhlbiBjaGVjayBvdGhlciBydWxlc1xuICAgICAgICBpZiAocmVxdWlyZWQpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGtleSBpbiBydWxlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJ1bGUgPSBydWxlc1trZXldO1xuICAgICAgICAgICAgICAgIGlmIChrZXkgPT09ICdyZXF1aXJlZCcgfHwgcnVsZSA9PT0gZmFsc2UpIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGxldCBmbjtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHJ1bGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgZm4gPSBydWxlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZuID0gRm9ybS5tZXRob2RzW2tleV07XG4gICAgICAgICAgICAgICAgICAgIGlmICghZm4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgQ2FuIG5vdCBmaW5kIHZhbGlkYXRlIG1ldGhvZDogJHtrZXl9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwcm9taXNlcy5wdXNoKGZuLmNhbGwodGhpcy5mb3JtLCB0aGlzLmdldCgndmFsdWUnKSwgdGhpcywgcnVsZXNba2V5XSkpO1xuICAgICAgICAgICAgICAgIGtleXMucHVzaChrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcCA9IHRoaXMucHJvbWlzZSA9IFByb21pc2UuYWxsKHByb21pc2VzKVxuICAgICAgICAgICAgLnRoZW4odmFsdWVzID0+IHtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdmFsdWVzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVzW2luZGV4XSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFtmYWxzZSwgdmFsdWVzW2luZGV4XSB8fCB0aGlzLmdldE1lc3NhZ2Uoa2V5c1tpbmRleF0pLCB0aGlzLmdldENsYXNzTmFtZShrZXlzW2luZGV4XSldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBbdHJ1ZSwgJycsIG51bGxdO1xuICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbWVzc2FnZTtcbiAgICAgICAgICAgICAgICBsZXQgY2xhc3NOYW1lO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZXJyID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICBtZXNzYWdlID0gZXJyO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2UgPSBlcnIubWVzc2FnZSB8fCB0aGlzLmdldE1lc3NhZ2UoZXJyLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWUgPSBlcnIuY2xhc3NOYW1lIHx8IHRoaXMuZ2V0Q2xhc3NOYW1lKGVyci5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtmYWxzZSwgbWVzc2FnZSwgY2xhc3NOYW1lXTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbigoW2lzVmFsaWQsIG1lc3NhZ2UsIGNsYXNzTmFtZV0pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocC5jYW5jZWxsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCh7XG4gICAgICAgICAgICAgICAgICAgIGlzRGlydHk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGlzVmFsaWQ6IGlzVmFsaWQsXG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgIGVycm9yQ2xhc3NOYW1lOiBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzVmFsaWQ7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcDtcbiAgICB9XG5cbiAgICB2YWxpZGF0ZUlmRGlydHkoKSB7XG4gICAgICAgIGlmICh0aGlzLmdldCgnaXNEaXJ0eScpKSB7XG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmVzZXQoKSB7XG4gICAgICAgIHRoaXMuX2NhbmNlbCgpO1xuXG4gICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgIGlzRGlydHk6IGZhbHNlLFxuICAgICAgICAgICAgaXNWYWxpZDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgdmFsdWU6IEFycmF5LmlzQXJyYXkodGhpcy5nZXQoJ3ZhbHVlJykpID9cbiAgICAgICAgICAgICAgICBbXS5jb25jYXQodGhpcy5pbml0VmFsdWUpIDogXG4gICAgICAgICAgICAgICAgdGhpcy5pbml0VmFsdWUsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9kaXJ0eSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmdldCgnbW9kZWwnKSkgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2lzRGlydHknKSkgcmV0dXJuO1xuXG4gICAgICAgIC8vIGZvciB2dWUgdmFsdWUgd2lsbCBjaGFuZ2VkIGFmdGVyIGV2ZW50XG4gICAgICAgIGlmICh0aGlzLiRuZXh0VGljaykge1xuICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2sodGhpcy52YWxpZGF0ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfY2FuY2VsKCkge1xuICAgICAgICAvLyBjYW5jZWwgdGhlIGxhc3QgcHJvbWlzZVxuICAgICAgICBpZiAodGhpcy5wcm9taXNlKSB7XG4gICAgICAgICAgICB0aGlzLnByb21pc2UuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9kZXN0cm95KCkge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0KCdtb2RlbCcpKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5mb3JtLmdldCgnaXRlbXMnKTtcbiAgICAgICAgaXRlbXMuc3BsaWNlKGl0ZW1zLmluZGV4T2YodGhpcyksIDEpO1xuICAgICAgICAvLyB0aGlzLnJlc2V0KCk7XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9mb3JtL2Zvcm1JdGVtLmpzIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5jb25zdCB7XG4gICAgY2xhc3NOYW1lLCBjaGlsZHJlbiwgbGFiZWwsIHN0eWxlLCBcbiAgICBpc1ZhbGlkLCBpc0RpcnR5LCBoaWRlTGFiZWwsIGh0bWxGb3IsXG4gICAgZXJyb3JDbGFzc05hbWUsXG59ID0gc2VsZi5nZXQoKTtcblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLWZvcm0taXRlbSc6IHRydWUsXG4gICAgJ2staW52YWxpZCc6IGlzRGlydHkgJiYgIWlzVmFsaWQsXG4gICAgJ2stdmFsaWQnOiBpc0RpcnR5ICYmIGlzVmFsaWQsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbn07XG5cbi8vIHZkdCBkb2VzIG5vdCBzdXBwb3J0IHJldHVybiBgdi1pZiAmIHYtZWxzZWAgZWxlbWVudCBpbiByb290LFxuLy8gbGlrZTogXG4vLyAgICAgJzxkaXYgdi1pZj17eyB0cnVlIH19PnRydWU8L2Rpdj4nXG4vLyAgICAgJzxsYWJlbCB2LWVsc2U+ZmFsc2U8L2xhYmVsPidcbi8vIHNvIHdyYXAgaXQuXG4vLyBjb25zdCBXcmFwcGVyID0gKHByb3BzKSA9PiB7XG4vLyAgICAgcmV0dXJuIGgocHJvcHMuX3RhZ05hbWUsIHByb3BzLCBwcm9wcy5jaGlsZHJlbik7IFxuLy8gfVxuXG5yZXR1cm4gaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtY2hhbmdlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2RpcnR5IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1mb2N1c291dCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9kaXJ0eSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshaGlkZUxhYmVsIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdsYWJlbCcsIHsnaHRtbEZvcic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtodG1sRm9yIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCAoX2Jsb2Nrcy5sYWJlbCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbGFiZWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKTt9KSAmJiAoX19ibG9ja3MubGFiZWwgPSBmdW5jdGlvbihwYXJlbnQpIHtcbnZhciBzZWxmID0gdGhpcztcbnJldHVybiBibG9ja3MubGFiZWwgPyBibG9ja3MubGFiZWwuY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLmxhYmVsLmNhbGwoc2VsZiwgcGFyZW50KTtcbn0pIDogX2Jsb2Nrcy5sYWJlbC5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcy5sYWJlbC5jYWxsKHRoaXMpLCAnay1sYWJlbCcpIDogdW5kZWZpbmVkLCBoKCdkaXYnLCBudWxsLCBbKF9ibG9ja3MuY29udGVudCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKTt9KSAmJiAoX19ibG9ja3MuY29udGVudCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5jb250ZW50ID8gYmxvY2tzLmNvbnRlbnQuY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLmNvbnRlbnQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmNvbnRlbnQuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3MuY29udGVudC5jYWxsKHRoaXMpLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ2lzVmFsaWQnKSA9PT0gZmFsc2UgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQW5pbWF0ZSwgeydjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XCJrLWVycm9yXCI6IHRydWUsIFtlcnJvckNsYXNzTmFtZV06IGVycm9yQ2xhc3NOYW1lfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2E6dHJhbnNpdGlvbic6ICdmYWRlJywgJ2NoaWxkcmVuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdtZXNzYWdlJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ19jb250ZXh0JzogdGhpc30pIDogdW5kZWZpbmVkXSwgJ2stY29udGVudCcpLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYmxvY2tzLmFwcGVuZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgKF9ibG9ja3MuYXBwZW5kID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuIG51bGw7fSkgJiYgKF9fYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5hcHBlbmQgPyBibG9ja3MuYXBwZW5kLmNhbGwodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gX2Jsb2Nrcy5hcHBlbmQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmFwcGVuZC5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcy5hcHBlbmQuY2FsbCh0aGlzKSwgJ2stYXBwZW5kJykgOiB1bmRlZmluZWRdLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9mb3JtL2Zvcm1JdGVtLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCBGb3JtSXRlbSBmcm9tICcuL2Zvcm1JdGVtJztcblxuY29uc3QgaCA9IEludGFjdC5WZHQubWlzcy5oO1xuXG5mdW5jdGlvbiBXcmFwcGVyKHByb3BzKSB7XG4gICAgbGV0IHtrZXksIF9jb250ZXh0LCBtb2RlbCwgLi4ucmVzdH0gPSBwcm9wcztcbiAgICBpZiAoIWtleSAmJiBtb2RlbCkge1xuICAgICAgICBrZXkgPSBgJGZpLiR7bW9kZWx9YDtcbiAgICB9XG4gICAgcmV0dXJuIGgoRm9ybUl0ZW0sIHtcbiAgICAgICAga2V5LCBtb2RlbCwgX2NvbnRleHQsIFxuICAgICAgICAnZXYtJGNoYW5nZTp2YWx1ZSc6IGZ1bmN0aW9uKGMsIHYpIHtcbiAgICAgICAgICAgIF9jb250ZXh0LmRhdGEuc2V0KG1vZGVsLCB2KTtcbiAgICAgICAgfSxcbiAgICAgICAgdmFsdWU6IF9jb250ZXh0LmRhdGEuZ2V0KG1vZGVsKSxcbiAgICAgICAgLi4ucmVzdFxuICAgIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBJbnRhY3QuZnVuY3Rpb25hbFdyYXBwZXIgP1xuICAgIEludGFjdC5mdW5jdGlvbmFsV3JhcHBlcihXcmFwcGVyKSA6IFdyYXBwZXI7XG5cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZm9ybS9mb3JtSXRlbVdyYXBwZXIuanMiLCJpbXBvcnQgRm9ybSBmcm9tICcuL2Zvcm0nO1xuaW1wb3J0IEZvcm1JdGVtIGZyb20gJy4vZm9ybUl0ZW1XcmFwcGVyJztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IGRlZmF1bHQgRm9ybTtcbmV4cG9ydCB7Rm9ybSwgRm9ybUl0ZW19XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJmdW5jdGlvbiBkZWNpbWFsUGxhY2VzKG51bSkge1xuICAgIHZhciBtYXRjaCA9IChcIlwiICsgbnVtKS5tYXRjaCgvKD86XFwuKFxcZCspKT8kLyk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvLyBOdW1iZXIgb2YgZGlnaXRzIHJpZ2h0IG9mIGRlY2ltYWwgcG9pbnQuXG4gICAgcmV0dXJuIG1hdGNoWzFdID8gbWF0Y2hbMV0ubGVuZ3RoIDogMDtcbn1cblxuZXhwb3J0IGNvbnN0IG1ldGhvZHMgPSB7XG4gICAgcmVxdWlyZWQodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgXG4gICAgICAgICAgICAoKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgQXJyYXkuaXNBcnJheSh2YWx1ZSkpID8gdmFsdWUubGVuZ3RoID4gMCA6IHRydWUpO1xuICAgIH0sXG5cbiAgICBkaWdpdHModmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIC9eXFxkKyQvLnRlc3QodmFsdWUpO1xuICAgIH0sXG5cbiAgICBlbWFpbCh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gL15bYS16QS1aMC05LiEjJCUmJyorXFwvPT9eX2B7fH1+LV0rQFthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPyg/OlxcLlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykqJC8udGVzdCh2YWx1ZSk7IFxuICAgIH0sXG5cbiAgICB1cmwodmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIC9eKD86KD86KD86aHR0cHM/fGZ0cCk6KT9cXC9cXC8pKD86XFxTKyg/OjpcXFMqKT9AKT8oPzooPyEoPzoxMHwxMjcpKD86XFwuXFxkezEsM30pezN9KSg/ISg/OjE2OVxcLjI1NHwxOTJcXC4xNjgpKD86XFwuXFxkezEsM30pezJ9KSg/ITE3MlxcLig/OjFbNi05XXwyXFxkfDNbMC0xXSkoPzpcXC5cXGR7MSwzfSl7Mn0pKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswMV1cXGR8MjJbMC0zXSkoPzpcXC4oPzoxP1xcZHsxLDJ9fDJbMC00XVxcZHwyNVswLTVdKSl7Mn0oPzpcXC4oPzpbMS05XVxcZD98MVxcZFxcZHwyWzAtNF1cXGR8MjVbMC00XSkpfCg/Oig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykoPzpcXC4oPzpbYS16XFx1MDBhMS1cXHVmZmZmMC05XS0qKSpbYS16XFx1MDBhMS1cXHVmZmZmMC05XSspKig/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmZdezIsfSkpLj8pKD86OlxcZHsyLDV9KT8oPzpbLz8jXVxcUyopPyQvaS50ZXN0KHZhbHVlKTtcbiAgICB9LFxuXG4gICAgZGF0ZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gIS9JbnZhbGlkfE5hTi8udGVzdChuZXcgRGF0ZSh2YWx1ZSkudG9TdHJpbmcoKSk7XG4gICAgfSxcblxuICAgIGRhdGVJU08odmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIC9eXFxkezR9W1xcL1xcLV0oMD9bMS05XXwxWzAxMl0pW1xcL1xcLV0oMD9bMS05XXxbMTJdWzAtOV18M1swMV0pJC8udGVzdCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIG51bWJlcih2YWx1ZSkge1xuICAgICAgICByZXR1cm4gL14oPzotP1xcZCt8LT9cXGR7MSwzfSg/OixcXGR7M30pKyk/KD86XFwuXFxkKyk/JC8udGVzdCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIG1pbkxlbmd0aCh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA+PSBwYXJhbTtcbiAgICB9LFxuXG4gICAgbWF4TGVuZ3RoKHZhbHVlLCBpdGVtLCBwYXJhbSkge1xuICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoIDw9IHBhcmFtO1xuICAgIH0sXG5cbiAgICByYW5nZUxlbmd0aCh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgY29uc3QgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICByZXR1cm4gbGVuZ3RoID49IHBhcmFtWzBdICYmIGxlbmd0aCA8PSBwYXJhbVsxXTtcbiAgICB9LFxuXG4gICAgbWluKHZhbHVlLCBpdGVtLCBwYXJhbSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPj0gcGFyYW07XG4gICAgfSxcblxuICAgIG1heCh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlIDw9IHBhcmFtO1xuICAgIH0sXG5cbiAgICByYW5nZSh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID49IHBhcmFtWzBdICYmIHZhbHVlIDw9IHBhcmFtWzFdO1xuICAgIH0sXG5cbiAgICBzdGVwKHZhbHVlLCBpdGVtLCBwYXJhbSkge1xuICAgICAgICBjb25zdCBkZWNpbWFscyA9IGRlY2ltYWxQbGFjZXMocGFyYW0pO1xuICAgICAgICBjb25zdCB0b0ludCA9IG51bSA9PiBNYXRoLnJvdW5kKG51bSAqIE1hdGgucG93KDEwLCBkZWNpbWFscykpO1xuXG4gICAgICAgIHJldHVybiBkZWNpbWFsUGxhY2VzKHZhbHVlKSA8PSBkZWNpbWFscyAmJiB0b0ludCh2YWx1ZSkgJSB0b0ludChwYXJhbSkgPT09IDA7XG4gICAgfSxcblxuICAgIGVxdWFsVG8odmFsdWUsIGl0ZW0sIHBhcmFtKSB7XG4gICAgICAgIGNvbnN0IGVxdWFsVmFsdWUgPSBpdGVtLmZvcm0uZ2V0KCdfY29udGV4dCcpLmRhdGEuZ2V0KHBhcmFtKTtcbiAgICAgICAgY29uc3QgZXF1YWxJdGVtID0gaXRlbS5mb3JtLmdldEl0ZW0ocGFyYW0pO1xuICAgICAgICBpZiAoIWVxdWFsSXRlbS5faGFzQmluZEVxdWFsVG9DYWxsYmFjaykge1xuICAgICAgICAgICAgaXRlbS5fZXF1YWxUb0NhbGxiYWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGl0ZW0udmFsaWRhdGVJZkRpcnR5KCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZXF1YWxJdGVtLm9uKCckY2hhbmdlZDp2YWx1ZScsIGl0ZW0uX2VxdWFsVG9DYWxsYmFjayk7XG4gICAgICAgICAgICBlcXVhbEl0ZW0uX2hhc0JpbmRFcXVhbFRvQ2FsbGJhY2sgPSB0cnVlO1xuXG4gICAgICAgICAgICAvLyByZW1vdmUgbGlzdGVuZXIgd2hlbiBkZXN0cm95IG9yIGNoYW5nZSBydWxlc1xuICAgICAgICAgICAgWyckZGVzdHJveWVkJy8qLCAnJGNoYW5nZTpydWxlcycqL10uZm9yRWFjaChuYW1lID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLm9uKG5hbWUsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZXF1YWxJdGVtLm9mZignJGNoYW5nZWQ6dmFsdWUnLCBpdGVtLl9lcXVhbFRvQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgICAgICBlcXVhbEl0ZW0uX2hhc0JpbmRFcXVhbFRvQ2FsbGJhY2sgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSBlcXVhbFZhbHVlO1xuICAgIH0sXG59O1xuXG5mdW5jdGlvbiBjb3VudChudW0pIHtcbiAgICByZXR1cm4gbnVtID09PSAyID8gJ+S4pCcgOiBudW07XG59XG5cbmV4cG9ydCBjb25zdCBtZXNzYWdlcyA9IHtcbiAgICByZXF1aXJlZDogJ+W/hemhu+Whq+WGmScsXG4gICAgZGlnaXRzOiAn6K+36L6T5YWl5pWw5a2XJyxcbiAgICBlbWFpbDogJ+ivt+i+k+WFpeato+ehrueahOmCrueuseWcsOWdgCcsXG4gICAgdXJsOiAn6K+36L6T5YWl5q2j56Gu55qE572R5Z2AJyxcbiAgICBkYXRlOiAn6K+36L6T5YWl5q2j56Gu55qE5pel5pyfJyxcbiAgICBkYXRlSVNPOiAn6K+36L6T5YWl5q2j56Gu55qE5pel5pyfIChZWVlZLU1NLUREKScsXG4gICAgbnVtYmVyOiAn6K+36L6T5YWl5q2j56Gu55qE5pWwJyxcbiAgICBtYXhMZW5ndGgodmFsdWUsIGl0ZW0sIHBhcmFtKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGDmnIDlpJrpgInmi6kke2NvdW50KHBhcmFtKX3poblgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGDmnIDlpJrovpPlhaUke2NvdW50KHBhcmFtKX3kuKrlrZfnrKZgO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBtaW5MZW5ndGgodmFsdWUsIGl0ZW0sIHBhcmFtKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGDmnIDlsJHpgInmi6kke2NvdW50KHBhcmFtKX3poblgO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGDmnIDlsJHovpPlhaUke2NvdW50KHBhcmFtKX3kuKrlrZfnrKZgO1xuICAgICAgICB9XG4gICAgfSxcbiAgICByYW5nZUxlbmd0aCh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gYOivt+mAieaLqSR7Y291bnQocGFyYW1bMF0pfeWIsCR7Y291bnQocGFyYW1bMV0pfemhuWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYOivt+i+k+WFpSR7Y291bnQocGFyYW1bMF0pfeWIsCR7Y291bnQocGFyYW1bMV0pfeS4quWtl+espmA7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIG1heCh2YWx1ZSwgaXRlbSwgcGFyYW0pIHtcbiAgICAgICAgcmV0dXJuIGDor7fovpPlhaXkuI3lpKfkuo4ke3BhcmFtfeeahOaVsGA7XG4gICAgfSxcbiAgICBtaW4odmFsdWUsIGl0ZW0sIHBhcmFtKSB7XG4gICAgICAgIHJldHVybiBg6K+36L6T5YWl5LiN5bCP5LqOJHtwYXJhbX3nmoTmlbBgO1xuICAgIH0sXG4gICAgcmFuZ2UodmFsdWUsIGl0ZW0sIHBhcmFtKSB7XG4gICAgICAgIHJldHVybiBg6K+36L6T5YWlJHtwYXJhbVswXX3liLAke3BhcmFtWzFdfeS5i+mXtOeahOaVsGA7XG4gICAgfSxcbiAgICBzdGVwKHZhbHVlLCBpdGVtLCBwYXJhbSkge1xuICAgICAgICByZXR1cm4gYOivt+i+k+WFpeatpemVv+S4uiR7cGFyYW1955qE5pWwYDtcbiAgICB9LFxuICAgIGVxdWFsVG86ICfkuKTmrKHovpPlhaXkuI3kuIDoh7QnLFxufTtcblxuZXhwb3J0IGNvbnN0IGNsYXNzTmFtZXMgPSB7fTtcblxuZXhwb3J0IGNvbnN0IGFkZE1ldGhvZCA9IGZ1bmN0aW9uKG5hbWUsIG1ldGhvZCwgbWVzc2FnZSwgY2xhc3NOYW1lKSB7XG4gICAgbWV0aG9kc1tuYW1lXSA9IG1ldGhvZDtcbiAgICBtZXNzYWdlc1tuYW1lXSA9IG1lc3NhZ2UgIT09IHVuZGVmaW5lZCA/IG1lc3NhZ2UgOiBtZXNzYWdlc1tuYW1lXTtcbiAgICBjbGFzc05hbWVzW25hbWVdID0gY2xhc3NOYW1lO1xufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZm9ybS9tZXRob2RzLmpzIiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vY29sLnZkdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbCBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgZ2V0IHRlbXBsYXRlKCkgeyByZXR1cm4gdGVtcGxhdGU7IH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc3BhbjogMjQsXG4gICAgICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgICAgICBndXR0ZXI6IDAsXG4gICAgICAgIH07XG4gICAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9ncmlkL2NvbC5qcyIsIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuY29uc3QgZ3V0dGVyU3R5bGUgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbmxldCB7Y2hpbGRyZW4sIHNwYW4sIGNsYXNzTmFtZSwgc3R5bGUsIGd1dHRlciwgb2Zmc2V0fSA9IHNlbGYuZ2V0KCk7XG5cbmxldCBoYXNHdXR0ZXIgPSBndXR0ZXIgPiAwO1xuaWYgKGhhc0d1dHRlcikge1xuICAgIHN0eWxlID0gZ3V0dGVyU3R5bGUoZ3V0dGVyLCBzdHlsZSwgJ3BhZGRpbmcnKTtcbn1cblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLWNvbCc6IHRydWUsXG4gICAgW2BrLSR7c3Bhbn1gXTogdHJ1ZSxcbiAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lICYmICFoYXNHdXR0ZXIsXG4gICAgW2BrLW9mZnNldC0ke29mZnNldH1gXTogb2Zmc2V0ID4gMCxcbn07XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaGFzR3V0dGVyID9cbiAgICAgICAgaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoaWxkcmVuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSkgOlxuICAgICAgICBjaGlsZHJlblxuXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZ3JpZC9jb2wudmR0IiwiaW1wb3J0IFJvdyBmcm9tICcuL3Jvdyc7XG5pbXBvcnQgQ29sIGZyb20gJy4vY29sJztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IHtSb3csIENvbH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2dyaWQvaW5kZXguanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb21wb25lbnRzL2dyaWQvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9jb21wb25lbnRzL2dyaWQvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9yb3cudmR0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm93IGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBndXR0ZXI6IDBcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZ3JpZC9yb3cuanMiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IGd1dHRlclN0eWxlID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG5sZXQge2NoaWxkcmVuLCBjbGFzc05hbWUsIHN0eWxlLCBndXR0ZXJ9ID0gc2VsZi5nZXQoKTtcblxubGV0IGhhc0d1dHRlciA9IGd1dHRlciA+IDA7XG5pZiAoaGFzR3V0dGVyKSB7XG4gICAgc3R5bGUgPSBndXR0ZXJTdHlsZShndXR0ZXIsIHN0eWxlKTtcbn1cblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLXJvdyc6IHRydWUsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbiAgICAnay1ndXR0ZXInOiBoYXNHdXR0ZXIsXG59O1xuXG5yZXR1cm4gaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2hhc0d1dHRlciA/IFxuICAgIGNoaWxkcmVuLm1hcCh2Tm9kZSA9PiB7XG4gICAgICAgIGlmICh2Tm9kZSkge1xuICAgICAgICAgICAgdk5vZGUucHJvcHMuZ3V0dGVyID0gZ3V0dGVyO1xuICAgICAgICAgICAgcmV0dXJuIHZOb2RlO1xuICAgICAgICB9XG4gICAgfSkgOlxuICAgIGNoaWxkcmVuIFxuXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvZ3JpZC9yb3cudmR0IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ3V0dGVyU3R5bGUoZ3V0dGVyLCBzdHlsZSwgcHJvcCA9ICdtYXJnaW4nKSB7XG4gICAgbGV0IG1hcmdpbiA9IGd1dHRlciAvIDI7XG4gICAgbGV0IHNpZ24gPSBwcm9wID09PSAnbWFyZ2luJyA/ICctJyA6ICcnO1xuICAgIGlmICghc3R5bGUpIHN0eWxlID0gJyc7XG4gICAgaWYgKHR5cGVvZiBzdHlsZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgc3R5bGUgPSBgJHtzdHlsZX0keyFzdHlsZSB8fCAvO1xccyokLy50ZXN0KHN0eWxlKSA/ICcnIDogJzsnfSR7cHJvcH0tbGVmdDogJHtzaWdufSR7bWFyZ2lufXB4OyAke3Byb3B9LXJpZ2h0OiAke3NpZ259JHttYXJnaW59cHg7YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIHN0eWxlID0ge1xuICAgICAgICAgICAgW2Ake3Byb3B9TGVmdGBdOiBgJHtzaWdufSR7bWFyZ2lufXB4YCxcbiAgICAgICAgICAgIFtgJHtwcm9wfVJpZ2h0YF06IGAke3NpZ259JHttYXJnaW59cHhgLFxuICAgICAgICAgICAgLi4uc3R5bGVcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9ncmlkL3V0aWxzLmpzIiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5wdXQgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIEBJbnRhY3QudGVtcGxhdGVcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVhZG9ubHk6IEJvb2xlYW4sXG4gICAgICAgIGNsZWFyYWJsZTogQm9vbGVhbixcbiAgICAgICAgZGlzYWJsZWQ6IEJvb2xlYW4sXG4gICAgICAgIGZsdWlkOiBCb29sZWFuLFxuICAgIH07XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6ICd0ZXh0JywgLy8gdGV4dCB8IHRleHRhcmVhXG4gICAgICAgICAgICBuYW1lOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBwbGFjZWhvbGRlcjogdW5kZWZpbmVkLFxuICAgICAgICAgICAgcmVhZG9ubHk6IGZhbHNlLFxuICAgICAgICAgICAgY2xlYXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHNpemU6ICdkZWZhdWx0JyxcbiAgICAgICAgICAgIHJvd3M6IDIsXG4gICAgICAgICAgICBzcGVsbGNoZWNrOiBmYWxzZSxcbiAgICAgICAgICAgIGF1dG9XaWR0aDogZmFsc2UsXG4gICAgICAgICAgICBmbHVpZDogZmFsc2UsXG4gICAgICAgICAgICB3aWR0aDogdW5kZWZpbmVkLFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2luaXQoKSB7XG4gICAgICAgIHRoaXMub24oJyRjaGFuZ2VkOnZhbHVlJywgdGhpcy5fYWRqdXN0V2lkdGgpO1xuICAgICAgICB0aGlzLm9uKCckY2hhbmdlZDpwbGFjZWhvbGRlcicsIHRoaXMuX2FkanVzdFdpZHRoKTtcbiAgICB9XG5cbiAgICBfbW91bnQoKSB7XG4gICAgICAgIHRoaXMuX2FkanVzdFdpZHRoKCk7XG4gICAgfVxuXG4gICAgX2FkanVzdFdpZHRoKCkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2F1dG9XaWR0aCcpKSB7XG4gICAgICAgICAgICBjb25zdCB3aWR0aCA9IHRoaXMucmVmcy5mYWtlLm9mZnNldFdpZHRoIHx8IDE7XG4gICAgICAgICAgICB0aGlzLnJlZnMuaW5wdXQuc3R5bGUud2lkdGggPSBgJHt3aWR0aCArIDF9cHhgO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2xlYXIoZSkge1xuICAgICAgICB0aGlzLnNldCgndmFsdWUnLCAnJyk7XG4gICAgICAgIHRoaXMuZm9jdXMoKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKCdjbGVhcicsIGUpO1xuICAgIH1cblxuICAgIHNlbGVjdCgpIHtcbiAgICAgICAgdGhpcy5yZWZzLmlucHV0LnNlbGVjdCgpO1xuICAgIH1cblxuICAgIGZvY3VzKCkge1xuICAgICAgICB0aGlzLnJlZnMuaW5wdXQuZm9jdXMoKTtcbiAgICB9XG5cbiAgICBfb25JbnB1dChlKSB7XG4gICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyKCdpbnB1dCcsIGUpO1xuICAgIH1cblxuICAgIF9wcm94eUV2ZW50KG5hbWUsIGUpIHtcbiAgICAgICAgdGhpcy50cmlnZ2VyKG5hbWUsIGUpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtJbnB1dH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL2lucHV0L2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9pbnB1dC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvaW5wdXQvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQge2FkZFN0eWxlfSBmcm9tICcuLi91dGlscyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuY29uc3Qge1xuICAgIHR5cGUsIG5hbWUsIHZhbHVlLCBwbGFjZWhvbGRlcixcbiAgICByZWFkb25seSwgY2xlYXJhYmxlLCBkaXNhYmxlZCwgc2l6ZSwgXG4gICAgcm93cywgc3BlbGxjaGVjaywgZGVmYXVsdFZhbHVlLCBzdHlsZSxcbiAgICBjbGFzc05hbWUsIGF1dG9XaWR0aCwgZmx1aWQsIHdpZHRoLFxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1pbnB1dCc6IHRydWUsXG4gICAgW2BrLSR7c2l6ZX1gXTogc2l6ZSAhPT0gJ2RlZmF1bHQnLFxuICAgICdrLWdyb3VwJzogYmxvY2tzLnByZXBlbmQgfHwgYmxvY2tzLmFwcGVuZCxcbiAgICAnay1kaXNhYmxlZCc6IGRpc2FibGVkLFxuICAgICdrLXdpdGgtcHJlZml4JzogYmxvY2tzLnByZWZpeCxcbiAgICAnay13aXRoLXN1ZmZpeCc6IGJsb2Nrcy5zdWZmaXgsXG4gICAgJ2stY2xlYXJhYmxlJzogY2xlYXJhYmxlLFxuICAgICdrLWF1dG8td2lkdGgnOiBhdXRvV2lkdGgsXG4gICAgJ2stZmx1aWQnOiBmbHVpZCxcbiAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lLFxufVxuXG5jb25zdCBldmVudHMgPSBbXG4gICAgJ2tleWRvd24nLCAna2V5dXAnLCAnY2hhbmdlJyxcbiAgICAna2V5cHJlc3MnLCAnZm9jdXMnLCAnYmx1cicsIC8qICdpbnB1dCcgKi9cbl0ucmVkdWNlKChtZW1vLCBuYW1lKSA9PiB7XG4gICAgbWVtb1tgZXYtJHtuYW1lfWBdID0gc2VsZi5fcHJveHlFdmVudC5iaW5kKHNlbGYsIG5hbWUpO1xuICAgIHJldHVybiBtZW1vO1xufSwge30pO1xuXG5jb25zdCB3cmFwcGVyRXZlbnRzID0gW1xuICAgICdjbGljaycsICdtb3VzZWVudGVyJywgJ21vdXNlbGVhdmUnXG5dLnJlZHVjZSgobWVtbywgbmFtZSkgPT4ge1xuICAgIG1lbW9bYGV2LSR7bmFtZX1gXSA9IHNlbGYuX3Byb3h5RXZlbnQuYmluZChzZWxmLCBuYW1lKTtcbiAgICByZXR1cm4gbWVtbztcbn0sIHt9KTtcblxucmV0dXJuIGgoJ2RpdicsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbd2lkdGggIT0gbnVsbCA/IGFkZFN0eWxlKHN0eWxlLCB7d2lkdGg6IGAke3dpZHRofXB4YH0pIDogc3R5bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgLi4uZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3dyYXBwZXJFdmVudHMgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYmxvY2tzLnByZXBlbmQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIChfYmxvY2tzLnByZXBlbmQgPSBmdW5jdGlvbihwYXJlbnQpIHtyZXR1cm4gbnVsbDt9KSAmJiAoX19ibG9ja3MucHJlcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5wcmVwZW5kID8gYmxvY2tzLnByZXBlbmQuY2FsbCh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiBfYmxvY2tzLnByZXBlbmQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLnByZXBlbmQuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3MucHJlcGVuZC5jYWxsKHRoaXMpLCAnay1wcmVwZW5kJykgOiB1bmRlZmluZWQsIGgoJ2RpdicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYmxvY2tzLnByZWZpeCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgKF9ibG9ja3MucHJlZml4ID0gZnVuY3Rpb24ocGFyZW50KSB7cmV0dXJuIG51bGw7fSkgJiYgKF9fYmxvY2tzLnByZWZpeCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5wcmVmaXggPyBibG9ja3MucHJlZml4LmNhbGwodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gX2Jsb2Nrcy5wcmVmaXguY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLnByZWZpeC5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcy5wcmVmaXguY2FsbCh0aGlzKSwgJ2stcHJlZml4JykgOiB1bmRlZmluZWQsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0eXBlICE9PSAndGV4dGFyZWEnIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdpbnB1dCcsIHsndHlwZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0eXBlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICduYW1lJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW25hbWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1pbnB1dCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vbklucHV0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkZWZhdWx0VmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGVmYXVsdFZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdyZWFkT25seSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyZWFkb25seSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAncGxhY2Vob2xkZXInOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbcGxhY2Vob2xkZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIC4uLmZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtldmVudHMgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIG51bGwsICdrLWlubmVyJywgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ2lucHV0J10gPSBpfSkgOiBoKCd0ZXh0YXJlYScsIHsndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWlucHV0JzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uSW5wdXQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2RlZmF1bHRWYWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkZWZhdWx0VmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ25hbWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbmFtZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAncmVhZE9ubHknOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbcmVhZG9ubHkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3BsYWNlaG9sZGVyJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BsYWNlaG9sZGVyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkaXNhYmxlZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAncm93cyc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyb3dzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzcGVsbGNoZWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NwZWxsY2hlY2sgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgLi4uZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2V2ZW50cyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgbnVsbCwgJ2staW5uZXIgay10ZXh0YXJlYScsIG51bGwsIGZ1bmN0aW9uKGkpIHt3aWRnZXRzWydpbnB1dCddID0gaX0pLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYmxvY2tzLnN1ZmZpeCB8fCBjbGVhcmFibGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xlYXJhYmxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdpJywgeydldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmNsZWFyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgICAgIFwiay1jbGVhciBrLWljb24gaW9uLWlvcy1jbG9zZVwiOiB0cnVlLCBcbiAgICAgICAgICAgICAgICAgICAgXCJrLXNob3dcIjogdmFsdWUsXG4gICAgICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSkgOiB1bmRlZmluZWQsIChfYmxvY2tzLnN1ZmZpeCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBudWxsO30pICYmIChfX2Jsb2Nrcy5zdWZmaXggPSBmdW5jdGlvbihwYXJlbnQpIHtcbnZhciBzZWxmID0gdGhpcztcbnJldHVybiBibG9ja3Muc3VmZml4ID8gYmxvY2tzLnN1ZmZpeC5jYWxsKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIF9ibG9ja3Muc3VmZml4LmNhbGwoc2VsZiwgcGFyZW50KTtcbn0pIDogX2Jsb2Nrcy5zdWZmaXguY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3Muc3VmZml4LmNhbGwodGhpcyldLCAnay1zdWZmaXgnKSA6IHVuZGVmaW5lZCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2F1dG9XaWR0aCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ZhbHVlID09IG51bGwgfHwgdmFsdWUgPT09ICcnID8gcGxhY2Vob2xkZXIgOiB2YWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay1mYWtlJywgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ2Zha2UnXSA9IGl9KSA6IHVuZGVmaW5lZF0sICdrLXdyYXBwZXInKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Jsb2Nrcy5hcHBlbmQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIChfYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBudWxsO30pICYmIChfX2Jsb2Nrcy5hcHBlbmQgPSBmdW5jdGlvbihwYXJlbnQpIHtcbnZhciBzZWxmID0gdGhpcztcbnJldHVybiBibG9ja3MuYXBwZW5kID8gYmxvY2tzLmFwcGVuZC5jYWxsKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIF9ibG9ja3MuYXBwZW5kLmNhbGwoc2VsZiwgcGFyZW50KTtcbn0pIDogX2Jsb2Nrcy5hcHBlbmQuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3MuYXBwZW5kLmNhbGwodGhpcyksICdrLWFwcGVuZCcpIDogdW5kZWZpbmVkXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvaW5wdXQvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCBtZXNzYWdlIGZyb20gJy4vbWVzc2FnZS52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuXG5sZXQgbWVzc2FnZXM7XG5sZXQgaWQgPSAwO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSBtZXNzYWdlO1xuXG4gICAgc3RhdGljIG5vdGljZShjb250ZW50LCBkdXJhdGlvbiA9IDUwMDAsIHR5cGUgPSAnaW5mbycpIHtcbiAgICAgICAgaWYgKCFtZXNzYWdlcykge1xuICAgICAgICAgICAgbWVzc2FnZXMgPSBJbnRhY3QubW91bnQoTWVzc2FnZXMsIGRvY3VtZW50LmJvZHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRlbnQgIT09IG51bGwgJiYgdHlwZW9mIGNvbnRlbnQgPT09ICdvYmplY3QnICYmICFjb250ZW50LnRhZykge1xuICAgICAgICAgICAgY29udGVudCA9IE9iamVjdC5hc3NpZ24oe30sIGNvbnRlbnQsIHt0eXBlfSk7IFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29udGVudCA9IHtjb250ZW50LCBkdXJhdGlvbiwgdHlwZX07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtZXNzYWdlID0gbmV3IE1lc3NhZ2Uoe1xuICAgICAgICAgICAgLi4uY29udGVudCxcbiAgICAgICAgICAgIHZhbHVlOiB0cnVlLFxuICAgICAgICAgICAgX2lzSW5zdGFuY2U6IHRydWUsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIG1lc3NhZ2VzLm5vdGljZShtZXNzYWdlKTsgXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gbWVzc2FnZTtcbiAgICB9XG5cbiAgICBzdGF0aWMgaW5mbyA9IChjb250ZW50LCBkdXJhdGlvbikgPT4ge1xuICAgICAgICBNZXNzYWdlLm5vdGljZShjb250ZW50LCBkdXJhdGlvbiwgJ2luZm8nKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZXJyb3IgPSAoY29udGVudCwgZHVyYXRpb24pID0+IHtcbiAgICAgICAgTWVzc2FnZS5ub3RpY2UoY29udGVudCwgZHVyYXRpb24sICdkYW5nZXInKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgc3VjY2VzcyA9IChjb250ZW50LCBkdXJhdGlvbikgPT4ge1xuICAgICAgICBNZXNzYWdlLm5vdGljZShjb250ZW50LCBkdXJhdGlvbiwgJ3N1Y2Nlc3MnKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgd2FybmluZyA9IChjb250ZW50LCBkdXJhdGlvbikgPT4ge1xuICAgICAgICBNZXNzYWdlLm5vdGljZShjb250ZW50LCBkdXJhdGlvbiwgJ3dhcm5pbmcnKTtcbiAgICB9XG5cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY29udGVudDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgZHVyYXRpb246IDUwMDAsXG4gICAgICAgICAgICB0eXBlOiAnaW5mbycsXG4gICAgICAgICAgICBrZXk6IGlkKyssXG4gICAgICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgICAgICBjbG9zYWJsZTogdHJ1ZSxcblxuICAgICAgICAgICAgLy8gaWYgdGhpcyBjb21wb25lbnQgaXMgdXNlZCBhcyBpbnN0YW5jZSBvciBub3RcbiAgICAgICAgICAgIF9pc0luc3RhbmNlOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBpbml0KC4uLmFyZ3MpIHtcbiAgICAgICAgaWYgKCF0aGlzLmdldCgndmFsdWUnKSkge1xuICAgICAgICAgICAgLy8gd2hlbiB1c2UgYXMgY29tcG9uZW50LCByZW5kZXIgdGhlIGNvbXBvbmVudFxuICAgICAgICAgICAgLy8gYnV0IGRvbid0IGFwcGVuZCBpdCB0byBwYXJlbnREb20sIHVzZSBhXG4gICAgICAgICAgICAvLyBwbGFjZWhvbGRlciBpbnN0ZWFkIG9mXG4gICAgICAgICAgICB0aGlzLnBhcmVudERvbSA9IG51bGw7XG4gICAgICAgICAgICBzdXBlci5pbml0KC4uLmFyZ3MpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGxhY2Vob2xkZXIgPSBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwibWVzc2FnZVwiKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmVsZW1lbnQpIHtcbiAgICAgICAgICAgIC8vIE1lc3NhZ2VzIHJlbmRlciB0aGlzIGNvbXBvbmVudCwgcmV0dXJuIHRoZSBcbiAgICAgICAgICAgIC8vIG9yaWdpbmFsIGRvbVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3VwZXIuaW5pdCguLi5hcmdzKTtcbiAgICB9XG5cbiAgICBoeWRyYXRlKHZOb2RlKSB7XG4gICAgICAgIC8vIGRvbid0IGh5ZHJhdGUgaXQsIGJ1dCBpbml0aWFsaXplIGl0XG4gICAgICAgIHRoaXMuaW5pdChudWxsLCB2Tm9kZSk7XG4gICAgICAgIHJldHVybiB0aGlzLnBsYWNlaG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlQ29tbWVudCgnbWVzc2FnZScpO1xuICAgIH1cblxuICAgIHVwZGF0ZShsYXN0Vk5vZGUsIG5leHRWTm9kZSkge1xuICAgICAgICAvLyB3aGVuIHRoaXMgdXBkYXRpbmcgaXMgZnJvbSBvcmlnaW5hbCBwYXJlbnQsXG4gICAgICAgIC8vIHVwZGF0ZSB0aGUgb3JpZ2luYWwgZG9tLCBidXQgcmV0dXJuIHRoZSBwbGFjZWhvbGRlcixcbiAgICAgICAgLy8gb3RoZXJ3aXNlIHJldHVybiB0aGUgb3JpZ2luYWwgZG9tIHdoaWNoIGhhcyBiZWVuIHVwZGF0ZWRcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgIWxhc3RWTm9kZSB8fCBcbiAgICAgICAgICAgIC8vIGl0IG1heSBoYXZlIG5vdCBwYXJlbnRWTm9kZSBpbiB2dWVcbiAgICAgICAgICAgIChsYXN0Vk5vZGUucGFyZW50Vk5vZGUgJiYgbGFzdFZOb2RlLnBhcmVudFZOb2RlLnRhZyA9PT0gTWVzc2FnZUFuaW1hdGUpXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudDtcbiAgICAgICAgfVxuICAgICAgICBzdXBlci51cGRhdGUobGFzdFZOb2RlLCBuZXh0Vk5vZGUpO1xuICAgICAgICByZXR1cm4gdGhpcy5wbGFjZWhvbGRlcjtcbiAgICB9XG5cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgLy8gcmV0dXJuIHRoZSBwbGFjZWhvbGRlciBzdHJpbmcgZm9yIHNzclxuICAgICAgICByZXR1cm4gJzwhLS1tZXNzYWdlLS0+JztcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTp2YWx1ZScsIChjLCB2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZXMubm90aWNlKHRoaXMpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlcy5kZWxldGUodGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9jcmVhdGUoKSB7XG4gICAgICAgIGlmICghbWVzc2FnZXMpIHtcbiAgICAgICAgICAgIG1lc3NhZ2VzID0gSW50YWN0Lm1vdW50KE1lc3NhZ2VzLCBkb2N1bWVudC5ib2R5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9tb3VudCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmdldCgndmFsdWUnKSkgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IGR1cmF0aW9uID0gdGhpcy5nZXQoJ2R1cmF0aW9uJyk7XG4gICAgICAgIGlmIChkdXJhdGlvbikge1xuICAgICAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgICAgIH0sIGR1cmF0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNsb3NlKCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgIGlmICghdGhpcy5nZXQoJ19pc0luc3RhbmNlJykpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1lc3NhZ2VzLmRlbGV0ZSh0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uTW91c2VFbnRlcigpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgIH1cblxuICAgIG9uTW91c2VMZWF2ZSgpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLl9tb3VudCgpO1xuICAgIH1cblxuICAgIGRlc3Ryb3kodk5vZGUpIHtcbiAgICAgICAgaWYgKHRoaXMuX2lzVnVlICYmICF2Tm9kZSkge1xuICAgICAgICAgICAgbWVzc2FnZXMuZGVsZXRlKHRoaXMpO1xuICAgICAgICB9IGVsc2UgaWYgKHZOb2RlLnBhcmVudFZOb2RlLnRhZyA9PT0gTWVzc2FnZUFuaW1hdGUgJiYgIXRoaXMuZ2V0KCdfaXNJbnN0YW5jZScpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAodk5vZGUucGFyZW50Vk5vZGUudGFnICE9PSBNZXNzYWdlQW5pbWF0ZSkge1xuICAgICAgICAgICAgbWVzc2FnZXMuZGVsZXRlKHRoaXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3VwZXIuZGVzdHJveSh2Tm9kZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNsYXNzIE1lc3NhZ2VzIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcblxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtZXNzYWdlczogW10sXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgX2luaXQoKSB7XG4gICAgICAgIHRoaXMuTWVzc2FnZUFuaW1hdGUgPSBNZXNzYWdlQW5pbWF0ZTtcbiAgICB9XG5cbiAgICBub3RpY2UobWVzc2FnZSkge1xuICAgICAgICB0aGlzLmdldCgnbWVzc2FnZXMnKS5wdXNoKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cblxuICAgIGRlbGV0ZShtZXNzYWdlKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VzID0gdGhpcy5nZXQoJ21lc3NhZ2VzJyk7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gbWVzc2FnZXMuaW5kZXhPZihtZXNzYWdlKTtcbiAgICAgICAgaWYgKH5pbmRleCkge1xuICAgICAgICAgICAgbWVzc2FnZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIE1lc3NhZ2VBbmlhbXRlIHR5cGUgZm9yIHR5cGUgY2hlY2tpbmdcbmNsYXNzIE1lc3NhZ2VBbmltYXRlIGV4dGVuZHMgSW50YWN0LkFuaW1hdGUgeyAgfVxuXG5leHBvcnQge01lc3NhZ2V9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9tZXNzYWdlL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9tZXNzYWdlL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9tZXNzYWdlL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5jb25zdCBNZXNzYWdlQW5pbWF0ZSA9IHNlbGYuTWVzc2FnZUFuaW1hdGU7XG5cbnJldHVybiBoKEFuaW1hdGUsIHsnY2xhc3NOYW1lJzogJ2stbWVzc2FnZXMnLCAnY2hpbGRyZW4nOiBfVmR0LnV0aWxzLm1hcChmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ21lc3NhZ2VzJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xucmV0dXJuIGgoTWVzc2FnZUFuaW1hdGUsIHsnYTp0YWcnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2tleSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZS5nZXQoJ2tleScpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9KTtcbn0sIHRoaXMpLCAnX2NvbnRleHQnOiB0aGlzfSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL21lc3NhZ2UvaW5kZXgudmR0IiwiaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi9idXR0b24nO2ltcG9ydCBNb3ZlV3JhcHBlciBmcm9tICcuLi9tb3ZlV3JhcHBlcic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuXG5jb25zdCB7dHlwZSwgY29udGVudCwgY2hpbGRyZW4sIGNsb3NhYmxlfSA9IHNlbGYuZ2V0KCk7XG5cbnJldHVybiBoKCdkaXYnLCB7J2V2LW1vdXNlZW50ZXInOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5vbk1vdXNlRW50ZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LW1vdXNlbGVhdmUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5vbk1vdXNlTGVhdmUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIGgoJ2RpdicsIG51bGwsIFtoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWluZm9ybWF0aW9uJyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGNvbnRlbnQgPT09ICdudW1iZXInIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdkaXYnLCB7J2lubmVySFRNTCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjb250ZW50IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCAnay1jb250ZW50JykgOiBoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2stY29udGVudCcpLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xvc2FibGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQnV0dG9uLCB7J3R5cGUnOiAnbm9uZScsICdpY29uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2xhc3NOYW1lJzogJ2stY2xvc2UnLCAnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5jbG9zZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWNsb3NlLWVtcHR5JyksICdfY29udGV4dCc6IHRoaXN9KSA6IHVuZGVmaW5lZF0sICdrLWNvbnRhaW5lcicpLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XCJrLW1lc3NhZ2VcIjogdHJ1ZSwgW2BrLSR7dHlwZX1gXTogdHlwZSAhPT0gJ2luZm8nfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL21lc3NhZ2UvbWVzc2FnZS52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vdmVXcmFwcGVyIGV4dGVuZHMgSW50YWN0IHtcbiAgICB0ZW1wbGF0ZShzZWxmLCBWZHQpIHtcbiAgICAgICAgY29uc3QgY2hpbGRyZW4gPSBzZWxmLmdldCgnY2hpbGRyZW4nKTtcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuIHx8IFZkdC5taXNzLmhjKCdNb3ZlV3JhcHBlcicpO1xuICAgIH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYXV0b0Rlc3Ryb3k6IHRydWUsIFxuICAgICAgICAgICAgY29udGFpbmVyOiB1bmRlZmluZWQsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbml0KC4uLmFyZ3MpIHtcbiAgICAgICAgc3VwZXIuaW5pdCguLi5hcmdzKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucGxhY2Vob2xkZXIgPSBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwicGxhY2Vob2xkZXJcIik7XG4gICAgfVxuXG4gICAgaHlkcmF0ZSguLi5hcmdzKSB7XG4gICAgICAgIHN1cGVyLmh5ZHJhdGUoLi4uYXJncyk7XG4gICAgICAgIHJldHVybiB0aGlzLnBsYWNlaG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlQ29tbWVudCgncGxhY2Vob2xkZXInKTtcbiAgICB9XG5cbiAgICB1cGRhdGUobGFzdFZOb2RlLCBuZXh0Vk5vZGUpIHtcbiAgICAgICAgc3VwZXIudXBkYXRlKGxhc3RWTm9kZSwgbmV4dFZOb2RlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMucGxhY2Vob2xkZXI7XG4gICAgfVxuXG4gICAgZGVzdHJveSguLi5hcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLmdldCgnYXV0b0Rlc3Ryb3knKSkge1xuICAgICAgICAgICAgdGhpcy5fJGRlc3Ryb3koLi4uYXJncyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBcbiAgICAvKipcbiAgICAgKiBAYnJpZWYgb3ZlcnJpZGUgc3VwZXIgZGVzdHJveSBcbiAgICAgKlxuICAgICAqIE1vdmVXcmFwZXIgY29tcG9uZW50IGhhcyBjaGFuZ2VkIHRoZSBkb20gc3RydWN0aW9uLlxuICAgICAqIEl0IGlzIGFsd2F5cyB0aGUgdG9wIGxldmVsIGRvbSwgc28gd2Ugc2hvdWxkIFxuICAgICAqIHJlbW92ZSBpdCBmcm9tIHBhcmVudCBkb20uIEJ5IHBhc3NpbmcgdGhlIGNvbnRhaW5lclxuICAgICAqIHRvIHJlbW92ZSBmdW5jdGlvbiBjYW4gZG8gdGhpcy4gV2UgY2FuJ3QgcmVtb3ZlIGl0XG4gICAgICogZGlyZWN0bHkgYnkgY2FsbGluZyByZW1vdmVDaGlsZCBtZXRob2QsIGJlYWNhdXNlIGl0XG4gICAgICogbWF5YmUgaGF2ZSBsZWF2ZSBhbmltYXRpb24uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gLi4uYXJnc1xuICAgICAqL1xuICAgIF8kZGVzdHJveShsYXN0Vk5vZGUsIG5leHRWTm9kZSkge1xuICAgICAgICAvLyBpZiAodGhpcy5kZXN0cm95ZWQpIHtcbiAgICAgICAgICAgIC8vIHJldHVybiBjb25zb2xlLndhcm4oJ2Rlc3Ryb3llZCBtdWx0aXBsZSB0aW1lcycpO1xuICAgICAgICAvLyB9XG4gICAgICAgIGlmICh0aGlzLnJlbmRlcmVkICYmIFxuICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgICFuZXh0Vk5vZGUgfHxcbiAgICAgICAgICAgICAgICAhKG5leHRWTm9kZS50eXBlICYgSW50YWN0LlZkdC5taXNzLlR5cGVzLkNvbXBvbmVudENsYXNzT3JJbnN0YW5jZSkgfHxcbiAgICAgICAgICAgICAgICBuZXh0Vk5vZGUua2V5ICE9PSBsYXN0Vk5vZGUua2V5XG4gICAgICAgICAgICApXG4gICAgICAgICkge1xuICAgICAgICAgICAgSW50YWN0LlZkdC5taXNzLnJlbW92ZSh0aGlzLnZkdC52Tm9kZSwgdGhpcy5jb250YWluZXIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2Rlc3Ryb3kobGFzdFZOb2RlLCBuZXh0Vk5vZGUpO1xuICAgICAgICB0aGlzLmRlc3Ryb3llZCA9IHRydWU7XG4gICAgICAgIHRoaXMudHJpZ2dlcignJGRlc3Ryb3llZCcsIHRoaXMpO1xuICAgICAgICB0aGlzLm9mZigpO1xuICAgIH1cblxuICAgIF9tb3VudChsYXN0Vk5vZGUsIG5leHRWTm9kZSkge1xuICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLmdldCgnY29udGFpbmVyJyk7XG4gICAgICAgIGlmIChjb250YWluZXIpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5jb250YWluZXIpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuYm9keTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLmVsZW1lbnQpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtNb3ZlV3JhcHBlcn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL21vdmVXcmFwcGVyL2luZGV4LmpzIiwiY29uc3QgbWF4ID0gTWF0aC5tYXg7XG5jb25zdCBhYnMgPSBNYXRoLmFicztcbmNvbnN0IHJIb3Jpem9udGFsID0gL2xlZnR8Y2VudGVyfHJpZ2h0LztcbmNvbnN0IHJWZXJ0aWNhbCA9IC90b3B8Y2VudGVyfGJvdHRvbS87XG5jb25zdCByT2Zmc2V0ID0gL1tcXCtcXC1dXFxkKyhcXC5bXFxkXSspPyU/LztcbmNvbnN0IHJQb3NpdGlvbiA9IC9eXFx3Ky87XG5jb25zdCByUGVyY2VudCA9IC8lJC87XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBvc2l0aW9uKGVsZW0sIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyk7XG5cbiAgICBjb25zdCB0YXJnZXQgPSBvcHRpb25zLm9mIHx8IHdpbmRvdztcbiAgICAvLyBjb25zdCBkaW1lbnNpb25zID0gZ2V0RGltZW5zaW9ucyh0YXJnZXQpO1xuICAgIGlmICh0YXJnZXQucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgb3B0aW9ucy5hdCA9IFwibGVmdCB0b3BcIjtcbiAgICB9XG4gICAgY29uc3Qge1xuICAgICAgICB3aWR0aDogdGFyZ2V0V2lkdGgsXG4gICAgICAgIGhlaWdodDogdGFyZ2V0SGVpZ2h0LCBcbiAgICAgICAgb2Zmc2V0OiB0YXJnZXRPZmZzZXRcbiAgICB9ID0gZ2V0RGltZW5zaW9ucyh0YXJnZXQpO1xuICAgIGNvbnN0IGJhc2VQb3NpdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIHRhcmdldE9mZnNldCk7XG4gICAgY29uc3QgY29sbGlzaW9uID0gKG9wdGlvbnMuY29sbGlzaW9uIHx8ICdmbGlwJykuc3BsaXQoJyAnKTtcbiAgICBjb25zdCBvZmZzZXRzID0ge307XG5cbiAgICBbJ215JywgJ2F0J10uZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgbGV0IHBvcyA9IChvcHRpb25zW2l0ZW1dIHx8ICcnKS5zcGxpdCgnICcpO1xuXG4gICAgICAgIGlmIChwb3MubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICBwb3MgPSBySG9yaXpvbnRhbC50ZXN0KHBvc1swXSkgP1xuICAgICAgICAgICAgICAgIHBvcy5jb25jYXQoWydjZW50ZXInXSkgOlxuICAgICAgICAgICAgICAgIHJWZXJ0aWNhbC50ZXN0KHBvc1swXSkgP1xuICAgICAgICAgICAgICAgICAgICBbJ2NlbnRlciddLmNvbmNhdChwb3MpIDpcbiAgICAgICAgICAgICAgICAgICAgWydjZW50ZXInLCAnY2VudGVyJ107XG4gICAgICAgIH1cbiAgICAgICAgcG9zWzBdID0gckhvcml6b250YWwudGVzdChwb3NbMF0pID8gcG9zWzBdIDogJ2NlbnRlcic7XG4gICAgICAgIHBvc1sxXSA9IHJWZXJ0aWNhbC50ZXN0KHBvc1sxXSkgPyBwb3NbMV0gOiAnY2VudGVyJztcblxuICAgICAgICBjb25zdCBob3Jpem9udGFsT2Zmc2V0ID0gck9mZnNldC5leGVjKHBvc1swXSk7XG4gICAgICAgIGNvbnN0IHZlcnRpY2FsT2Zmc2V0ID0gck9mZnNldC5leGVjKHBvc1sxXSk7XG4gICAgICAgIG9mZnNldHNbaXRlbV0gPSBbXG4gICAgICAgICAgICBob3Jpem9udGFsT2Zmc2V0ID8gaG9yaXpvbnRhbE9mZnNldFswXSA6IDAsXG4gICAgICAgICAgICB2ZXJ0aWNhbE9mZnNldCA/IHZlcnRpY2FsT2Zmc2V0WzBdIDogMFxuICAgICAgICBdO1xuXG4gICAgICAgIG9wdGlvbnNbaXRlbV0gPSBbXG4gICAgICAgICAgICByUG9zaXRpb24uZXhlYyhwb3NbMF0pWzBdLFxuICAgICAgICAgICAgclBvc2l0aW9uLmV4ZWMocG9zWzFdKVswXVxuICAgICAgICBdO1xuICAgIH0pO1xuXG4gICAgaWYgKGNvbGxpc2lvbi5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgY29sbGlzaW9uWzFdID0gY29sbGlzaW9uWzBdO1xuICAgIH1cblxuICAgIGNvbnN0IGF0ID0gb3B0aW9ucy5hdDtcbiAgICBpZiAoYXRbMF0gPT09ICdyaWdodCcpIHtcbiAgICAgICAgYmFzZVBvc2l0aW9uLmxlZnQgKz0gdGFyZ2V0V2lkdGg7XG4gICAgfSBlbHNlIGlmIChhdFswXSA9PT0gJ2NlbnRlcicpIHtcbiAgICAgICAgYmFzZVBvc2l0aW9uLmxlZnQgKz0gdGFyZ2V0V2lkdGggLyAyO1xuICAgIH1cbiAgICBpZiAoYXRbMV0gPT09ICdib3R0b20nKSB7XG4gICAgICAgIGJhc2VQb3NpdGlvbi50b3AgKz0gdGFyZ2V0SGVpZ2h0O1xuICAgIH0gZWxzZSBpZiAoYXRbMV0gPT09ICdjZW50ZXInKSB7XG4gICAgICAgIGJhc2VQb3NpdGlvbi50b3AgKz0gdGFyZ2V0SGVpZ2h0IC8gMjtcbiAgICB9XG5cbiAgICBjb25zdCBhdE9mZnNldCA9IGdldE9mZnNldHMob2Zmc2V0cy5hdCwgdGFyZ2V0V2lkdGgsIHRhcmdldEhlaWdodCk7XG4gICAgYmFzZVBvc2l0aW9uLmxlZnQgKz0gYXRPZmZzZXRbMF07XG4gICAgYmFzZVBvc2l0aW9uLnRvcCArPSBhdE9mZnNldFsxXTtcblxuICAgIGNvbnN0IGVsZW1XaWR0aCA9IGVsZW0ub2Zmc2V0V2lkdGg7XG4gICAgY29uc3QgZWxlbUhlaWdodCA9IGVsZW0ub2Zmc2V0SGVpZ2h0O1xuICAgIGNvbnN0IHBvc2l0aW9uID0gT2JqZWN0LmFzc2lnbih7fSwgYmFzZVBvc2l0aW9uKTtcbiAgICBjb25zdCBteU9mZnNldCA9IGdldE9mZnNldHMob2Zmc2V0cy5teSwgZWxlbVdpZHRoLCBlbGVtSGVpZ2h0KTtcblxuICAgIGNvbnN0IG15ID0gb3B0aW9ucy5teTtcbiAgICBpZiAobXlbMF0gPT09ICdyaWdodCcpIHtcbiAgICAgICAgcG9zaXRpb24ubGVmdCAtPSBlbGVtV2lkdGg7XG4gICAgfSBlbHNlIGlmIChteVswXSA9PT0gJ2NlbnRlcicpIHtcbiAgICAgICAgcG9zaXRpb24ubGVmdCAtPSBlbGVtV2lkdGggLyAyO1xuICAgIH1cbiAgICBpZiAobXlbMV0gPT09ICdib3R0b20nKSB7XG4gICAgICAgIHBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0O1xuICAgIH0gZWxzZSBpZiAobXlbMV0gPT09ICdjZW50ZXInKSB7XG4gICAgICAgIHBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0IC8gMjtcbiAgICB9XG4gICAgcG9zaXRpb24ubGVmdCArPSBteU9mZnNldFswXTtcbiAgICBwb3NpdGlvbi50b3AgKz0gbXlPZmZzZXRbMV07XG5cbiAgICBjb25zdCBzdHlsZSA9IGVsZW0uc3R5bGU7XG4gICAgY29uc3Qge2VsZW1Qb3NpdGlvbn0gPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtKTtcbiAgICBpZiAoZWxlbVBvc2l0aW9uID09PSAnc3RhdGljJykge1xuICAgICAgICBzdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgfVxuICAgIHN0eWxlLmxlZnQgPSBwb3NpdGlvbi5sZWZ0ICsgJ3B4JztcbiAgICBzdHlsZS50b3AgPSBwb3NpdGlvbi50b3AgKyAncHgnO1xuXG4gICAgaWYgKG9wdGlvbnMudXNpbmcpIHtcbiAgICAgICAgY29uc3QgbGVmdCA9IHRhcmdldE9mZnNldC5sZWZ0IC0gcG9zaXRpb24ubGVmdDtcbiAgICAgICAgY29uc3QgcmlnaHQgPSBsZWZ0ICsgdGFyZ2V0V2lkdGggLSBlbGVtV2lkdGg7XG4gICAgICAgIGNvbnN0IHRvcCA9IHRhcmdldE9mZnNldC50b3AgLSBwb3NpdGlvbi50b3A7XG4gICAgICAgIGNvbnN0IGJvdHRvbSA9IHRvcCArIHRhcmdldEhlaWdodCAtIGVsZW1IZWlnaHQ7XG4gICAgICAgIGNvbnN0IGZlZWRiYWNrID0ge1xuICAgICAgICAgICAgaG9yaXpvbnRhbDogcmlnaHQgPCAwID8gJ2xlZnQnIDogbGVmdCA+IDAgPyAncmlnaHQnIDogJ2NlbnRlcicsXG4gICAgICAgICAgICB2ZXJ0aWNhbDogYm90dG9tIDwgMCA/ICd0b3AnIDogdG9wID4gMCA/ICdib3R0b20nIDogJ21pZGRsZScsXG4gICAgICAgIH07XG4gICAgICAgIGlmICh0YXJnZXRXaWR0aCA8IGVsZW1XaWR0aCAmJiBhYnMobGVmdCArIHJpZ2h0KSA8IHRhcmdldFdpZHRoKSB7XG4gICAgICAgICAgICBmZWVkYmFjay5ob3Jpem9udGFsID0gJ2NlbnRlcic7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRhcmdldEhlaWdodCA8IGVsZW1IZWlnaHQgJiYgYWJzKHRvcCArIGJvdHRvbSkgPCB0YXJnZXRIZWlnaHQpIHtcbiAgICAgICAgICAgIGZlZWRiYWNrLnZlcnRpY2FsID0gJ21pZGRsZSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1heChhYnMobGVmdCksIGFicyhyaWdodCkpID4gbWF4KGFicyh0b3ApLCBhYnMoYm90dG9tKSkpIHtcbiAgICAgICAgICAgIGZlZWRiYWNrLmltcG9ydGFudCA9ICdob3Jpem9udGFsJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZlZWRiYWNrLmltcG9ydGFudCA9ICd2ZXJ0aWNhbCc7XG4gICAgICAgIH1cbiAgICAgICAgb3B0aW9ucy51c2luZyhmZWVkYmFjayk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBnZXREaW1lbnNpb25zKGVsZW0pIHtcbiAgICBpZiAoZWxlbS5ub2RlVHlwZSA9PT0gOSkge1xuICAgICAgICAvLyBkb2N1bWVudFxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGVsZW0ub2Zmc2V0V2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IGVsZW0ub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgICAgb2Zmc2V0OiB7XG4gICAgICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgICAgIGxlZnQ6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKGVsZW0gPT09IHdpbmRvdykge1xuICAgICAgICBsZXQgZCA9IGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgd2lkdGg6IGQuY2xpZW50V2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IGQuY2xpZW50SGVpZ2h0LFxuICAgICAgICAgICAgb2Zmc2V0OiB7XG4gICAgICAgICAgICAgICAgdG9wOiBlbGVtLnBhZ2VZT2Zmc2V0IHx8IGQuc2Nyb2xsVG9wLFxuICAgICAgICAgICAgICAgIGxlZnQ6IGVsZW0ucGFnZVhPZmZzZXQgfHwgZC5zY3JvbGxMZWZ0XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSBlbHNlIGlmIChlbGVtLnByZXZlbnREZWZhdWx0KSB7XG4gICAgICAgIC8vIGV2ZW50XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB3aWR0aDogMCxcbiAgICAgICAgICAgIGhlaWdodDogMCxcbiAgICAgICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgICAgIHRvcDogZWxlbS5wYWdlWSxcbiAgICAgICAgICAgICAgICBsZWZ0OiBlbGVtLnBhZ2VYXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIGRvbVxuICAgIGNvbnN0IHJlY3QgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGQgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IHJlY3Qud2lkdGgsXG4gICAgICAgIGhlaWdodDogcmVjdC5oZWlnaHQsXG4gICAgICAgIG9mZnNldDoge1xuICAgICAgICAgICAgdG9wOiByZWN0LnRvcCArIGQucGFnZVlPZmZzZXQsXG4gICAgICAgICAgICBsZWZ0OiByZWN0LmxlZnQgKyBkLnBhZ2VYT2Zmc2V0XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiBnZXRPZmZzZXRzKG9mZnNldHMsIHdpZHRoLCBoZWlnaHQpIHtcbiAgICByZXR1cm4gW1xuICAgICAgICBwYXJzZUZsb2F0KG9mZnNldHNbMF0pICogKHJQZXJjZW50LnRlc3Qob2Zmc2V0c1swXSkgPyB3aWR0aCAvIDEwMCA6IDEpLFxuICAgICAgICBwYXJzZUZsb2F0KG9mZnNldHNbMV0pICogKHJQZXJjZW50LnRlc3Qob2Zmc2V0c1sxXSkgPyBoZWlnaHQgLyAxMDAgOiAxKSxcbiAgICBdO1xufVxuXG5leHBvcnQge3Bvc2l0aW9ufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvbW92ZVdyYXBwZXIvcG9zaXRpb24uanMiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQYWdpbmF0aW9uIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIHNob3dHb3RvOiBCb29sZWFuLFxuICAgIH07XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvdGFsOiAwLFxuICAgICAgICAgICAgY3VycmVudDogMSxcbiAgICAgICAgICAgIGxpbWl0OiAxMCxcbiAgICAgICAgICAgIGNvdW50czogNyxcbiAgICAgICAgICAgIHNob3dUb3RhbDogdHJ1ZSxcbiAgICAgICAgICAgIGxpbWl0czogWzEwLCAyMCwgNTBdLFxuICAgICAgICAgICAgLy8gdmFsdWU6ICcnLFxuICAgICAgICAgICAgc2hvd0dvdG86IGZhbHNlLFxuICAgICAgICAgICAgc2l6ZTogJ2RlZmF1bHQnLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICAvLyBhdm9pZCBzZXR0aW5nIGluY29ycmVjdCB2YWx1ZVxuICAgICAgICB0aGlzLmNoYW5nZVBhZ2UodGhpcy5nZXQoJ2N1cnJlbnQnKSk7XG5cbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTpsaW1pdCcsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0KCdjdXJyZW50JywgMSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNoYW5nZVBhZ2UocGFnZSkge1xuICAgICAgICBjb25zdCB7dG90YWwsIGxpbWl0fSA9IHRoaXMuZ2V0KCk7XG4gICAgICAgIGNvbnN0IHRvdGFsUGFnZXMgPSBNYXRoLmNlaWwodG90YWwgLyBsaW1pdCk7XG5cbiAgICAgICAgaWYgKHBhZ2UgPiB0b3RhbFBhZ2VzKSB7XG4gICAgICAgICAgICBwYWdlID0gdG90YWxQYWdlcztcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFnZSA8IDEpIHtcbiAgICAgICAgICAgIHBhZ2UgPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXQoJ2N1cnJlbnQnLCBwYWdlKTtcbiAgICB9XG5cbiAgICBwcmV2KCkge1xuICAgICAgICB0aGlzLmNoYW5nZVBhZ2UodGhpcy5nZXQoJ2N1cnJlbnQnKSAtIDEpO1xuICAgIH1cblxuICAgIG5leHQoKSB7XG4gICAgICAgIHRoaXMuY2hhbmdlUGFnZSh0aGlzLmdldCgnY3VycmVudCcpICsgMSk7XG4gICAgfVxuXG4gICAgZmFzdFByZXYoKSB7XG4gICAgICAgIGNvbnN0IHBhZ2UgPSB0aGlzLmdldCgnY3VycmVudCcpIC0gTWF0aC5jZWlsKHRoaXMuZ2V0KCdjb3VudHMnKSAvIDIpO1xuICAgICAgICB0aGlzLmNoYW5nZVBhZ2UocGFnZSk7XG4gICAgfVxuXG4gICAgZmFzdE5leHQoKSB7XG4gICAgICAgIGNvbnN0IHBhZ2UgPSB0aGlzLmdldCgnY3VycmVudCcpICsgTWF0aC5jZWlsKHRoaXMuZ2V0KCdjb3VudHMnKSAvIDIpO1xuICAgICAgICB0aGlzLmNoYW5nZVBhZ2UocGFnZSk7XG4gICAgfVxuXG4gICAgX2dvdG8oZSkge1xuICAgICAgICAvLyBjb25zdCByZWdleHAgPSAvXlsxLTldXFxkKiQvO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSB8fCAxO1xuICAgICAgICB0aGlzLmNoYW5nZVBhZ2UodmFsdWUpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtQYWdpbmF0aW9ufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImltcG9ydCBTZWxlY3QgZnJvbSAnLi4vc2VsZWN0JztpbXBvcnQgSW5wdXQgZnJvbSAnLi4vaW5wdXQnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuXG5cblxuY29uc3Qge1xuICAgIHRvdGFsLCBjdXJyZW50LCBsaW1pdCwgbGltaXRzLCBcbiAgICBjbGFzc05hbWUsIHNob3dUb3RhbCwgc2hvd0dvdG8sXG4gICAgY291bnRzLCBzaXplLCAuLi5yZXN0XG59ID0gc2VsZi5nZXQoKTtcblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLXBhZ2luYXRpb24nOiB0cnVlLFxuICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG4gICAgW2BrLSR7c2l6ZX1gXTogc2l6ZSAhPT0gJ2RlZmF1bHQnLFxufTtcblxuY29uc3QgdG90YWxQYWdlcyA9IChNYXRoLmNlaWwodG90YWwgLyBsaW1pdCkpIHx8IDA7XG5cbmNvbnN0IHBhZ2luYXRpb25CdXR0b24gPSBmdW5jdGlvbihwYWdlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgaCgnZGl2Jywgeydldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmNoYW5nZVBhZ2UuYmluZChzZWxmLCBwYWdlKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BhZ2UgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbeydrLXBhZ2UnOiB0cnVlLCAnay1hY3RpdmUnOiBwYWdlID09PSBjdXJyZW50fSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbiAgICApO1xufTtcblxuY29uc3QgcGFnaW5hdGlvbkRvdCA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGgoJ2RpdicsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2FsbGJhY2sgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sICcuLi4nLCAnay1lbGxpcHNpcycpXG59O1xuXG5yZXR1cm4gaCgnZGl2JywgbnVsbCwgW2goJ2RpdicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkbyB7XG4gICAgICAgIGxldCBpdGVtcyA9IFtdO1xuICAgICAgICBsZXQgbWluQ291bnQgPSBNYXRoLmNlaWwoY291bnRzIC8gMik7XG4gICAgICAgIGxldCBtYXhDb3VudCA9IHRvdGFsUGFnZXMgLSBtaW5Db3VudDtcbiAgICAgICAgbGV0IHByZXZQYWdlID0gY3VycmVudCAtIDE7XG4gICAgICAgIGxldCBuZXh0UGFnZSA9IGN1cnJlbnQgKyAxO1xuXG4gICAgICAgIC8vIHByZXZpb3VzIHBhZ2UgYnV0dG9uXG4gICAgICAgIGl0ZW1zLnB1c2goXG4gICAgICAgICAgICBoKCdkaXYnLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ByZXZQYWdlIDwgMSA/IHVuZGVmaW5lZCA6IHNlbGYucHJldiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLWFycm93LWxlZnQnKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbeydrLXByZXYnOiB0cnVlLCAnay1kaXNhYmxlZCc6IHByZXZQYWdlIDwgMX0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG4gICAgICAgICk7XG5cbiAgICAgICAgaWYgKHRvdGFsUGFnZXMgPiBjb3VudHMpIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50IDw9IG1pbkNvdW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWF4ID0gY291bnRzIC0gMjtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBtYXg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25CdXR0b24oaSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25Eb3Qoc2VsZi5mYXN0TmV4dCkpO1xuICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2gocGFnaW5hdGlvbkJ1dHRvbih0b3RhbFBhZ2VzKSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnQgPiBtaW5Db3VudCAmJiBjdXJyZW50IDw9IG1heENvdW50KSB7XG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaChwYWdpbmF0aW9uQnV0dG9uKDEpKTtcbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25Eb3Qoc2VsZi5mYXN0UHJldikpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgbWlkQ291bnQgPSBjb3VudHMgLSA0O1xuICAgICAgICAgICAgICAgIGNvbnN0IG1pZCA9IE1hdGguZmxvb3IobWlkQ291bnQgLyAyKTtcbiAgICAgICAgICAgICAgICBjb25zdCBtaW4gPSBjdXJyZW50IC0gbWlkO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1heCA9IG1pZENvdW50ICUgMiA9PT0gMSA/IGN1cnJlbnQgKyBtaWQgOiBjdXJyZW50ICsgbWlkIC0gMTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gbWluOyBpIDw9IG1heDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2gocGFnaW5hdGlvbkJ1dHRvbihpKSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaXRlbXMucHVzaChwYWdpbmF0aW9uRG90KHNlbGYuZmFzdE5leHQpKTtcbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25CdXR0b24odG90YWxQYWdlcykpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25CdXR0b24oMSkpO1xuICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2gocGFnaW5hdGlvbkRvdChzZWxmLmZhc3RQcmV2KSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBtaW4gPSB0b3RhbFBhZ2VzIC0gY291bnRzICsgMztcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gbWluOyBpIDw9IHRvdGFsUGFnZXM7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpdGVtcy5wdXNoKHBhZ2luYXRpb25CdXR0b24oaSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRvdGFsUGFnZXM7IGkrKykge1xuICAgICAgICAgICAgICAgIGl0ZW1zLnB1c2gocGFnaW5hdGlvbkJ1dHRvbihpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBuZXh0IHBhZ2UgYnV0dG9uXG4gICAgICAgIGl0ZW1zLnB1c2goXG4gICAgICAgICAgICBoKCdkaXYnLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW25leHRQYWdlID4gdG90YWxQYWdlcyA/IHVuZGVmaW5lZCA6IHNlbGYubmV4dCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLWFycm93LXJpZ2h0JyksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3snay1uZXh0JzogdHJ1ZSwgJ2stZGlzYWJsZWQnOiBuZXh0UGFnZSA+IHRvdGFsUGFnZXN9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxuICAgICAgICApO1xuXG4gICAgICAgIGl0ZW1zO1xuICAgIH0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2stcGFnZXMnKSwgaCgnZGl2JywgbnVsbCwgaChTZWxlY3QsIHsnZGF0YSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtsaW1pdHMubWFwKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7J3ZhbHVlJzogaXRlbSwgJ2xhYmVsJzogaXRlbSArICcg5p2hIC8g6aG1J31cbiAgICAgICAgICAgIH0pIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzaXplJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NpemUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpcywgdmFsdWU6IF9nZXRNb2RlbChzZWxmLCAnbGltaXQnKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbihfX2MsIF9fbikgeyBfc2V0TW9kZWwoc2VsZiwgJ2xpbWl0JywgX19uKSB9fSksICdrLWxpbWl0cycpLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2hvd0dvdG8gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFsnXFxuICAgICAgICDot7Poh7MnLCBoKElucHV0LCB7J3NpemUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2l6ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY3VycmVudCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtY2hhbmdlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2dvdG8gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpc30pLCAn6aG1XFxuICAgICddLCAnay1nb3RvJykgOiB1bmRlZmluZWQsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaG93VG90YWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFsn5YWxICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0b3RhbCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnIOadoSddLCAnay10b3RhbCcpIDogdW5kZWZpbmVkXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9pbmRleC52ZHQiLCIvKipcbiAqIENyZWF0ZWQgYnkgc3lsdmlhIG9uIDIwMTcvMTAvMTYuXG4gKi9cbmltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5cbmZ1bmN0aW9uIGZpeFBlcmNlbnQocGVyY2VudCkge1xuICAgIGlmIChwZXJjZW50ID4gMTAwKSBwZXJjZW50ID0gMTAwO1xuICAgIGlmIChwZXJjZW50IDwgMCkgcGVyY2VudCA9IDA7XG4gICAgcmV0dXJuIHBlcmNlbnQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2dyZXNzIGV4dGVuZHMgSW50YWN0e1xuICAgIGdldCB0ZW1wbGF0ZSgpIHsgcmV0dXJuIHRlbXBsYXRlOyB9XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6ICdiYXInLCAvLyBiYXIgY2lyY2xlXG4gICAgICAgICAgICBwZXJjZW50OiAwLCAvLyAwfjEwMFxuICAgICAgICAgICAgc2l6ZTogJ2RlZmF1bHQnLCAvLyBzbWFsbCBtaW5pXG4gICAgICAgICAgICBpc091dGVyVGV4dDogdHJ1ZSxcbiAgICAgICAgICAgIGlzSW5uZXJUZXh0OiBmYWxzZSwgLy8gRklYTUU6IOW4g+WwlOWei+WPluWAvOeUqGlz5byA5aS0IGlzU2hvd0lubmVyVGV4dCDop4FSRUFETUVcbiAgICAgICAgICAgIHN0YXR1czogJ2FjdGl2ZScsIC8vIHN1Y2Nlc3MgfCBlcnJvciB8IGFjdGl2ZSB8IG5vcm1hbFxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IDEwLCBcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgdGhpcy5faW5pdFN0YXR1cyA9IHRoaXMuZ2V0KCdzdGF0dXMnKTtcblxuICAgICAgICB0aGlzLm9uKCckY2hhbmdlOnBlcmNlbnQnLCAoYywgcGVyY2VudCkgPT4ge1xuICAgICAgICAgICAgcGVyY2VudCA9IGZpeFBlcmNlbnQocGVyY2VudCk7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXMgPSBwZXJjZW50ID09PSAxMDAgPyAnc3VjY2VzcycgOiB0aGlzLl9pbml0U3RhdHVzO1xuICAgICAgICAgICAgdGhpcy5zZXQoe1xuICAgICAgICAgICAgICAgIHN0YXR1czogc3RhdHVzLFxuICAgICAgICAgICAgICAgIHBlcmNlbnQ6IHBlcmNlbnQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub24oJyRjaGFuZ2U6c3RhdHVzJywgKGMsIHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgaWYgKHN0YXR1cyAhPT0gJ3N1Y2Nlc3MnKSB0aGlzLl9pbml0U3RhdHVzID0gc3RhdHVzO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnNldCgncGVyY2VudCcsIGZpeFBlcmNlbnQodGhpcy5nZXQoJ3BlcmNlbnQnKSkpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtQcm9ncmVzc307XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3Byb2dyZXNzL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9wcm9ncmVzcy9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvcHJvZ3Jlc3MvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IHtcbiAgICB0eXBlLCBjbGFzc05hbWUsIHBlcmNlbnQsIHN0YXR1cywgc2l6ZSxcbiAgICBpc091dGVyVGV4dCwgaXNJbm5lclRleHQsIHJlZiwga2V5LCBzdHJva2VXaWR0aCxcbiAgICBjaGlsZHJlbiwgLi4ucmVzdFxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1wcm9ncmVzcycgOiB0cnVlLFxuICAgIFtgay0ke3R5cGV9YF06IHR5cGUsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbiAgICBbYGstJHtzdGF0dXN9YF06IHN0YXR1cyAhPT0gJ25vcm1hbCcsXG4gICAgW2BrLSR7c2l6ZX1gXTogc2l6ZSAhPT0gJ2RlZmF1bHQnLFxufVxuXG5yZXR1cm4gaCgnZGl2Jywgey4uLmZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyZXN0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3R5cGUgPT09ICdiYXInIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdkaXYnLCBudWxsLCBoKCdkaXYnLCBudWxsLCBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3t3aWR0aDogcGVyY2VudCArICclJ30gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpc0lubmVyVGV4dCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgWydcXG4gICAgICAgICAgICAgICAgICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtwZXJjZW50IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICcgJVxcbiAgICAgICAgICAgICAgICAnXSwgJ2staW5uZXItdGV4dCcpIDogdW5kZWZpbmVkLCAnay1iZycpLCAnay1jb250ZW50JyksICdrLWNvbnRhaW5lcicpIDogdW5kZWZpbmVkLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHlwZSA9PT0gJ2NpcmNsZScgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ3N2ZycsIHsndmlld0JveCc6ICcwIDAgMTIwIDEyMCd9LCBbJ1xcbiAgICAgICAgJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RvIHtcbiAgICAgICAgICAgIGNvbnN0IHIgPSAoMTIwIC0gc3Ryb2tlV2lkdGgpIC8gMjtcbiAgICAgICAgICAgIGNvbnN0IGNpcmN1bWZlcmVuY2UgPSAyICogTWF0aC5QSSAqIHI7XG5cbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBoKCdjaXJjbGUnLCB7J2N4JzogJzYwJywgJ2N5JzogJzYwJywgJ3InOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbciBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnc3Ryb2tlLXdpZHRoJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0cm9rZVdpZHRoIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCAnay1tZXRlcicpLFxuICAgICAgICAgICAgICAgIGgoJ2NpcmNsZScsIHsnY3gnOiAnNjAnLCAnY3knOiAnNjAnLCAncic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzdHJva2UtZGFzaG9mZnNldCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaXJjdW1mZXJlbmNlICogKDEgLSBwZXJjZW50IC8gMTAwKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnc3Ryb2tlLWRhc2hhcnJheSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaXJjdW1mZXJlbmNlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzdHJva2Utd2lkdGgnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3Ryb2tlV2lkdGggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIG51bGwsICdrLXZhbHVlJyksXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0YXR1cyA9PT0gJ2FjdGl2ZScgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2NpcmNsZScsIHsnY3gnOiAnNjAnLCAnY3knOiAnNjAnLCAncic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzdHJva2Utd2lkdGgnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3Ryb2tlV2lkdGggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3N0cm9rZS1kYXNoYXJyYXknOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2lyY3VtZmVyZW5jZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnc3Ryb2tlLWRhc2hvZmZzZXQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2lyY3VtZmVyZW5jZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2goJ2FuaW1hdGUnLCB7J2F0dHJpYnV0ZU5hbWUnOiAnc3Ryb2tlLWRhc2hvZmZzZXQnLCAnYmVnaW4nOiAnMHMnLCAnZHVyJzogJzJzJywgJ3JlcGVhdENvdW50JzogJ2luZGVmaW5pdGUnLCAnZnJvbSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaXJjdW1mZXJlbmNlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3RvJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NpcmN1bWZlcmVuY2UgKiAoMSAtIHBlcmNlbnQgLyAxMDApXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0pLCBoKCdhbmltYXRlJywgeydhdHRyaWJ1dGVOYW1lJzogJ29wYWNpdHknLCAnYmVnaW4nOiAnMHMnLCAnZHVyJzogJzJzJywgJ3JlcGVhdENvdW50JzogJ2luZGVmaW5pdGUnLCAnZnJvbSc6ICcwLjInLCAndG8nOiAnMCd9KV0sICdrLWFuaW1hdGUnKSA6IHVuZGVmaW5lZFxuICAgICAgICAgICAgXVxuICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdcXG4gICAgJ10sICdrLWNhbnZhcycpIDogdW5kZWZpbmVkLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay10ZXh0JykgOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaXNPdXRlclRleHQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdGF0dXMgIT09ICdzdWNjZXNzJyAmJiBzdGF0dXMgIT09ICdlcnJvcicgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ3NwYW4nLCBudWxsLCBbZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BlcmNlbnQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJyUnXSkgOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3RhdHVzID09PSAnc3VjY2VzcycgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ3NwYW4nLCBudWxsLCAnMTAwJScpIDogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0YXR1cyA9PT0gJ2Vycm9yJyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnc3BhbicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbcGVyY2VudCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnJSddKSA6IHVuZGVmaW5lZCwgJ2stdGV4dCcpIDogdW5kZWZpbmVkXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvcHJvZ3Jlc3MvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmFkaW8gZXh0ZW5kcyBJbnRhY3Qge1xuICAgIGdldCB0ZW1wbGF0ZSgpIHsgcmV0dXJuIHRlbXBsYXRlOyB9XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgICAgIHRydWVWYWx1ZTogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICB9XG5cbiAgICBpc0NoZWNrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldCgndmFsdWUnKSA9PT0gdGhpcy5nZXQoJ3RydWVWYWx1ZScpO1xuICAgIH1cblxuICAgIF9kZXN0cm95KCkge1xuICAgICAgICBpZiAodGhpcy5pc0NoZWNrZWQoKSkge1xuICAgICAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgdW5kZWZpbmVkKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHtSYWRpb307XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3JhZGlvL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9yYWRpby9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvcmFkaW8vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IHtcbiAgICBjbGFzc05hbWUsIGRpc2FibGVkLCB0cnVlVmFsdWUsIHN0eWxlLFxuICAgIGNoaWxkcmVuLCB2YWx1ZSwgcmVmLCBrZXksIC4uLnJlc3Rcbn0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBjbGFzc05hbWVPYmogPSB7XG4gICAgJ2stcmFkaW8nOiB0cnVlLFxuICAgICdrLWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgJ2stY2hlY2tlZCc6IHNlbGYuaXNDaGVja2VkKCksXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbn07XG5cbnJldHVybiBoKCdsYWJlbCcsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3R5bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtoKCdzcGFuJywgbnVsbCwgaCgnaW5wdXQnLCB7J3R5cGUnOiAncmFkaW8nLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVWYWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAuLi5mdW5jdGlvbigpIHt0cnkge3JldHVybiBbcmVzdCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBjaGVja2VkOiBfZ2V0TW9kZWwoc2VsZiwgJ3ZhbHVlJykgPT09IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlVmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWNoYW5nZSc6IGZ1bmN0aW9uKF9fZSkgeyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfc2V0TW9kZWwoc2VsZiwgJ3ZhbHVlJywgX19lLnRhcmdldC5jaGVja2VkID8gZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVWYWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpIDogZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0pLCAnay13cmFwcGVyJyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnc3BhbicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay10ZXh0JykgOiB1bmRlZmluZWRdLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9yYWRpby9pbmRleC52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuaW1wb3J0IHtpc1N0cmluZ09yTnVtYmVyfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjcm9sbFNlbGVjdCBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiAnJyxcbiAgICAgICAgICAgIGNvdW50OiAxOSxcbiAgICAgICAgICAgIGRhdGE6IFtdLFxuICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuXG4gICAgICAgICAgICBfbGlzdDogW10sXG4gICAgICAgICAgICBfdHJhbnNsYXRlOiAwLFxuICAgICAgICAgICAgX21hcmdpblRvcDogMCxcbiAgICAgICAgICAgIF9kcmFnZ2luZzogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgX2luaXQoKSB7XG4gICAgICAgIHRoaXMuX3NldExpc3QoKTtcblxuICAgICAgICBbJ2RhdGEnLCAndmFsdWUnLCAnY291bnQnXS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgdGhpcy5vbihgJGNoYW5nZToke2l0ZW19YCwgdGhpcy5fc2V0TGlzdCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuX21vdmUgPSB0aGlzLl9tb3ZlLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuX2RyYWdFbmQgPSB0aGlzLl9kcmFnRW5kLmJpbmQodGhpcyk7XG5cbiAgICAgICAgLy8gdGhyb3R0bGUgb25XaGVlbFxuICAgICAgICBsZXQgbG9jayA9IGZhbHNlO1xuICAgICAgICBjb25zdCBvbldoZWVsID0gdGhpcy5fb25XaGVlbDtcbiAgICAgICAgdGhpcy5fb25XaGVlbCA9IChlLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAobG9jaykgcmV0dXJuO1xuICAgICAgICAgICAgbG9jayA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBvbldoZWVsKGUsIC4uLmFyZ3MpO1xuICAgICAgICAgICAgICAgIGxvY2sgPSBmYWxzZTtcbiAgICAgICAgICAgIH0sIDUwKTtcbiAgICAgICAgfTsgXG4gICAgfVxuXG4gICAgX21vdW50KCkge1xuICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBjb25zdCB0b3RhbEhlaWdodCA9IHRoaXMucmVmcy53cmFwcGVyLm9mZnNldEhlaWdodDsgXG4gICAgICAgIHRoaXMuX2RlbHRhWSA9IC1NYXRoLmZsb29yKCh0b3RhbEhlaWdodCAtIGhlaWdodCkgLyAyKTtcbiAgICAgICAgdGhpcy5zZXQoe1xuICAgICAgICAgICAgX3RyYW5zbGF0ZTogdGhpcy5fZGVsdGFZIFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfc2VsZWN0KGl0ZW0sIGluZGV4KSB7XG4gICAgICAgIGNvbnN0IHtjb3VudCwgX3RyYW5zbGF0ZSwgX21hcmdpblRvcH0gPSB0aGlzLmdldCgpO1xuICAgICAgICBjb25zdCBoYWxmID0gTWF0aC5mbG9vcihjb3VudCAvIDIpO1xuICAgICAgICBjb25zdCBpdGVtSGVpZ2h0ID0gdGhpcy5yZWZzLml0ZW0ub2Zmc2V0SGVpZ2h0O1xuXG4gICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgIF90cmFuc2xhdGU6IF90cmFuc2xhdGUgLSBpdGVtSGVpZ2h0ICogKGluZGV4IC0gaGFsZiksXG4gICAgICAgICAgICBfbWFyZ2luVG9wOiBfbWFyZ2luVG9wICsgaXRlbUhlaWdodCAqIChpbmRleCAtIGhhbGYpLFxuICAgICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9zZXRMaXN0KCkge1xuICAgICAgICBsZXQge2RhdGEsIHZhbHVlLCBjb3VudH0gPSB0aGlzLmdldCgpO1xuXG4gICAgICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgZGF0YSA9IGRhdGEodmFsdWUpOyBcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCBpbmRleCA9IC0xO1xuICAgICAgICBkYXRhID0gZGF0YS5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGlmIChpc1N0cmluZ09yTnVtYmVyKGl0ZW0pKSB7XG4gICAgICAgICAgICAgICAgaXRlbSA9IHt2YWx1ZTogaXRlbSwgbGFiZWw6IGl0ZW19O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgaW5kZXggPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghfmluZGV4KSB7XG4gICAgICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCBkYXRhWzBdLnZhbHVlLCB7c2lsZW50OiB0cnVlfSk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBsZW5ndGggPSBkYXRhLmxlbmd0aDtcbiAgICAgICAgY29uc3QgaGFsZiA9IE1hdGguZmxvb3IoY291bnQgLyAyKTtcbiAgICAgICAgY29uc3QgX2xpc3QgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICAgICAgICBfbGlzdC5wdXNoKGRhdGFbKCgoaW5kZXggLSBoYWxmICsgaSkgJSBsZW5ndGgpICsgbGVuZ3RoKSAlIGxlbmd0aF0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0KCdfbGlzdCcsIF9saXN0LCB7c2lsZW50OiB0cnVlfSk7XG4gICAgfVxuXG4gICAgX2RyYWdTdGFydChlKSB7XG4gICAgICAgIGlmIChlLndoaWNoICE9PSAxKSByZXR1cm47XG5cbiAgICAgICAgdGhpcy5zZXQoJ19kcmFnZ2luZycsIHRydWUpO1xuICAgICAgICB0aGlzLl95ID0gZS5jbGllbnRZO1xuICAgICAgICB0aGlzLl9pbml0WSA9IGUuY2xpZW50WTtcbiAgICAgICAgdGhpcy5faXRlbUhlaWdodCA9IHRoaXMucmVmcy5pdGVtLm9mZnNldEhlaWdodDtcblxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLl9tb3ZlKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2RyYWdFbmQpO1xuICAgIH1cblxuICAgIF9tb3ZlKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdfZHJhZ2dpbmcnKSkge1xuICAgICAgICAgICAgY29uc3QgZGVsdGFZID0gZS5jbGllbnRZIC0gdGhpcy5feTtcbiAgICAgICAgICAgIHRoaXMuX3kgPSBlLmNsaWVudFk7XG4gICAgICAgICAgICBjb25zdCB7X3RyYW5zbGF0ZX0gPSB0aGlzLmdldCgpO1xuXG4gICAgICAgICAgICBjb25zdCBfZGVsdGFZID0gdGhpcy5feSAtIHRoaXMuX2luaXRZO1xuICAgICAgICAgICAgbGV0IG9mZnNldEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLmFicyhfZGVsdGFZKSAvIHRoaXMuX2l0ZW1IZWlnaHQpO1xuICAgICAgICAgICAgaWYgKG9mZnNldEluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKF9kZWx0YVkgPCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG9mZnNldEluZGV4ID0gLW9mZnNldEluZGV4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLl9zZXRCeVJlbGF0aXZlSW5kZXgoLW9mZnNldEluZGV4LCAtX2RlbHRhWSk7XG4gICAgICAgICAgICAgICAgdGhpcy5faW5pdFkgPSB0aGlzLl95O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXQoJ190cmFuc2xhdGUnLCBfdHJhbnNsYXRlICsgZGVsdGFZKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9zZXRCeVJlbGF0aXZlSW5kZXgoaW5kZXgsIGRlbHRhWSwgaXNTZXRUcmFuc2xhdGUpIHtcbiAgICAgICAgY29uc3Qge19saXN0LCB2YWx1ZSwgX21hcmdpblRvcH0gID0gdGhpcy5nZXQoKTtcblxuICAgICAgICBjb25zdCBpID0gX2xpc3QuZmluZEluZGV4KHYgPT4gdi52YWx1ZSA9PT0gdmFsdWUpO1xuICAgICAgICBjb25zdCBsID0gX2xpc3QubGVuZ3RoO1xuICAgICAgICBjb25zdCBpdGVtSGVpZ2h0ID0gdGhpcy5faXRlbUhlaWdodDtcbiAgICAgICAgY29uc3QgcHJvcHMgPSB7XG4gICAgICAgICAgICAndmFsdWUnOiBfbGlzdFsobCArIGkgKyBpbmRleCkgJSBsXS52YWx1ZSxcbiAgICAgICAgICAgIF9tYXJnaW5Ub3A6IF9tYXJnaW5Ub3AgKyAoZGVsdGFZIHx8IGluZGV4ICogaXRlbUhlaWdodCksXG4gICAgICAgIH07XG4gICAgICAgIGlmIChpc1NldFRyYW5zbGF0ZSkge1xuICAgICAgICAgICAgcHJvcHMuX3RyYW5zbGF0ZSA9IHRoaXMuZ2V0KCdfdHJhbnNsYXRlJykgLSBpdGVtSGVpZ2h0ICogaW5kZXg7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXQocHJvcHMpO1xuICAgIH1cblxuICAgIF9kcmFnRW5kKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdfZHJhZ2dpbmcnKSkge1xuICAgICAgICAgICAgdGhpcy5zZXQoJ19kcmFnZ2luZycsIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgICAgICBfdHJhbnNsYXRlOiAtdGhpcy5nZXQoJ19tYXJnaW5Ub3AnKSArIHRoaXMuX2RlbHRhWVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLl9tb3ZlKTtcbiAgICAgICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9kcmFnRW5kKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9vbldoZWVsKGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB0aGlzLl9pdGVtSGVpZ2h0ID0gdGhpcy5yZWZzLml0ZW0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBpZiAoZS5fcmF3RXZlbnQuZGVsdGFZID4gMCkge1xuICAgICAgICAgICAgLy8gZG93blxuICAgICAgICAgICAgdGhpcy5fc2V0QnlSZWxhdGl2ZUluZGV4KDEsIG51bGwsIHRydWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fc2V0QnlSZWxhdGl2ZUluZGV4KC0xLCBudWxsLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9kZXN0cm95KCkge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLl9tb3ZlKTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2RyYWdFbmQpO1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgfVxufVxuXG5leHBvcnQge1Njcm9sbFNlbGVjdH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3Njcm9sbFNlbGVjdC9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvc2Nyb2xsU2VsZWN0L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9zY3JvbGxTZWxlY3QvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IHtcbiAgICB2YWx1ZSwgX2xpc3QsIGRpc2FibGVkLFxuICAgIF90cmFuc2xhdGUsIF9tYXJnaW5Ub3AsIF9kcmFnZ2luZ1xufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICBcImstc2Nyb2xsLXNlbGVjdFwiOiB0cnVlLCBcbiAgICBcImstZHJhZ2dpbmdcIjogX2RyYWdnaW5nLFxuICAgIFwiay1kaXNhYmxlZFwiOiBkaXNhYmxlZCxcbn1cblxucmV0dXJuIGgoJ2RpdicsIG51bGwsIFtoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZVkoJHtfdHJhbnNsYXRlfXB4KWAsXG4gICAgICAgICAgICBtYXJnaW5Ub3A6IGAke19tYXJnaW5Ub3B9cHhgLFxuICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1tb3VzZWRvd24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbIWRpc2FibGVkID8gc2VsZi5fZHJhZ1N0YXJ0IDogdW5kZWZpbmVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi13aGVlbCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshZGlzYWJsZWQgPyBzZWxmLl9vbldoZWVsIDogdW5kZWZpbmVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBfVmR0LnV0aWxzLm1hcChmdW5jdGlvbigpIHt0cnkge3JldHVybiBbX2xpc3QgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgZnVuY3Rpb24oaXRlbSwga2V5KSB7XG5yZXR1cm4gaCgnZGl2Jywgeydldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshZGlzYWJsZWQgPyBzZWxmLl9zZWxlY3QuYmluZChzZWxmLCBpdGVtLCBrZXkpIDogdW5kZWZpbmVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaXRlbS5sYWJlbCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgXCJrLWl0ZW1cIjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBcImstYWN0aXZlXCI6IGl0ZW0udmFsdWUgPT09IHZhbHVlLFxuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2l0ZW0ua2V5IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtrZXkgPT09IDAgPyAoZG9tKSA9PiBzZWxmLnJlZnMuaXRlbSA9IGRvbSA6IHVuZGVmaW5lZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKTtcbn0sIHRoaXMpLCAnay13cmFwcGVyJywgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ3dyYXBwZXInXSA9IGl9KSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Jsb2Nrcy5hcHBlbmQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIChfYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBudWxsO30pICYmIChfX2Jsb2Nrcy5hcHBlbmQgPSBmdW5jdGlvbihwYXJlbnQpIHtcbnZhciBzZWxmID0gdGhpcztcbnJldHVybiBibG9ja3MuYXBwZW5kID8gYmxvY2tzLmFwcGVuZC5jYWxsKHRoaXMsIGZ1bmN0aW9uKCkge1xucmV0dXJuIF9ibG9ja3MuYXBwZW5kLmNhbGwoc2VsZiwgcGFyZW50KTtcbn0pIDogX2Jsb2Nrcy5hcHBlbmQuY2FsbCh0aGlzLCBwYXJlbnQpO1xufSkgJiYgX19ibG9ja3MuYXBwZW5kLmNhbGwodGhpcyksICdrLWFwcGVuZCcpIDogdW5kZWZpbmVkXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc2Nyb2xsU2VsZWN0L2luZGV4LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2dyb3VwLnZkdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9wdGlvbkdyb3VwIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc2VsZWN0L2dyb3VwLmpzIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5jb25zdCB7Y2hpbGRyZW4sIGxhYmVsfSA9IHNlbGYuZ2V0KCk7XG5cbnJldHVybiBoKCdkaXYnLCBudWxsLCBbaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2xhYmVsIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLWxhYmVsJyksICdcXG4gICAgJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoaWxkcmVuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdcXG4nXSwgJ2stZ3JvdXAnKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc2VsZWN0L2dyb3VwLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5pbXBvcnQgcG9zaXRpb24gZnJvbSAnLi4vbW92ZVdyYXBwZXIvcG9zaXRpb24nO1xuaW1wb3J0IE9wdGlvbiBmcm9tICcuL29wdGlvbic7XG5pbXBvcnQgR3JvdXAgZnJvbSAnLi9ncm91cCc7XG5pbXBvcnQge3NlbGVjdElucHV0fSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlbGVjdCBleHRlbmRzIEludGFjdHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIG11bHRpcGxlOiBCb29sZWFuLFxuICAgICAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICAgICAgY2xlYXJhYmxlOiBCb29sZWFuLFxuICAgICAgICBmaWx0ZXJhYmxlOiBCb29sZWFuLFxuICAgICAgICBmbHVpZDogQm9vbGVhbixcbiAgICB9O1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgIHZhbHVlOiAnJyxcbiAgICAgICAgICAgIG11bHRpcGxlOiBmYWxzZSwgLy/mlK/mjIHlpJrpgIlsaVxuICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgY2xlYXJhYmxlOiBmYWxzZSwgLy8g5piv5ZCm5Y+v5riF56m6IFxuICAgICAgICAgICAgZmlsdGVyYWJsZTogZmFsc2UsIC8vIOaQnOe0ouetm+mAiVxuICAgICAgICAgICAga2V5d29yZHM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAn6K+36YCJ5oupJyxcbiAgICAgICAgICAgIHNpemU6ICdkZWZhdWx0JyxcbiAgICAgICAgICAgIGZsdWlkOiBmYWxzZSxcbiAgICAgICAgICAgIHdpZHRoOiB1bmRlZmluZWQsXG5cbiAgICAgICAgICAgIF9zaG93OiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICB0aGlzLm9uKCckY2hhbmdlZDp2YWx1ZScsICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldCgnbXVsdGlwbGUnKSAmJiB0aGlzLmdldCgnX3Nob3cnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVmcy5tZW51LnBvc2l0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9vbkNsZWFyKGUpIHtcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgJycpO1xuICAgIH1cblxuICAgIF9vblNlbGVjdCh2YWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMuZ2V0KCdtdWx0aXBsZScpKSB7XG4gICAgICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB2YWx1ZSwge2FzeW5jOiB0cnVlfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5nZXQoJ3ZhbHVlJyk7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgICAgICAgICAgICAgIHZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXMgPSB2YWx1ZXMuc2xpY2UoMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHZhbHVlcy5pbmRleE9mKHZhbHVlKTtcbiAgICAgICAgICAgIGlmICh+aW5kZXgpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiBmaW5kLCBkZWxldGUgaXRcbiAgICAgICAgICAgICAgICB2YWx1ZXMuc3BsaWNlKGluZGV4LCAxKTsgXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIHZhbHVlcywge2FzeW5jOiB0cnVlfSk7XG4gICAgICAgICAgICB0aGlzLl9mb2N1c0lucHV0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcmVzZXRTZWFyY2goKTtcbiAgICB9XG5cbiAgICBfb25TZWFyY2goZSkge1xuICAgICAgICB0aGlzLnNldCgna2V5d29yZHMnLCBlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIC8vIGFsd2F5cyBzaG93IG1lbnUgb24gc2VhcmNoaW5nXG4gICAgICAgIHRoaXMucmVmcy5tZW51LnNob3coKTtcbiAgICAgICAgdGhpcy5yZWZzLm1lbnUuZm9jdXNJdGVtQnlJbmRleCgwKTtcbiAgICAgICAgLy8gaW4gbXVsdGlwbGUgbW9kZSwgaXQgbWF5IGxlYWQgdGhlIGhlaWdodCB0byBjaGFuZ2VcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdtdWx0aXBsZScpKSB7XG4gICAgICAgICAgICB0aGlzLnJlZnMubWVudS5wb3NpdGlvbigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3Jlc2V0U2VhcmNoKCkge1xuICAgICAgICB0aGlzLnNldCgna2V5d29yZHMnLCB1bmRlZmluZWQsIHthc3luYzogdHJ1ZX0pO1xuICAgIH1cblxuICAgIF9vbkNoYW5nZVNob3coYywgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5zZXQoJ19zaG93JywgdmFsdWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBicmllZiBsZXQgdGhlIGJsdXIgbWV0aG9kIGNhbGxlZCBhZnRlciBzZWxlY3RcbiAgICAgKiBpZiB3ZSBzZWxlY3RlZCB0aGUgb3B0aW9uLCB0aGVuIHRoZSBrZXl3b3JkcyBoYXMgYmVlbiB0byB0byB1bmRlZmluZFxuICAgICAqIGluIHRoaXMgY2FzZSwgd2UgZG8gbm90aGluZywgb3RoZXJ3aXNlIHdlIHJlc2V0IGl0XG4gICAgICovXG4gICAgX29uQmx1cigpIHtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0KCdrZXl3b3JkcycpICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9yZXNldFNlYXJjaCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAyMDApO1xuICAgIH1cblxuICAgIF9zZWxlY3RJbnB1dChlKSB7XG4gICAgICAgIHNlbGVjdElucHV0KGUudGFyZ2V0KTsgXG4gICAgfVxuXG4gICAgX29uRm9jdXMoZSkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgfVxuXG4gICAgX2RlbGV0ZSh2YWx1ZSwgZSkge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSB0aGlzLmdldCgndmFsdWUnKS5zbGljZSgwKTtcbiAgICAgICAgY29uc3QgaW5kZXggPSB2YWx1ZXMuaW5kZXhPZih2YWx1ZSk7XG4gICAgICAgIHZhbHVlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB0aGlzLnNldCgndmFsdWUnLCB2YWx1ZXMpO1xuICAgICAgICB0aGlzLl9mb2N1c0lucHV0KCk7XG4gICAgfVxuXG4gICAgX2ZvY3VzSW5wdXQoKSB7XG4gICAgICAgIGlmICh0aGlzLmdldCgnZmlsdGVyYWJsZScpKSB7XG4gICAgICAgICAgICB0aGlzLnJlZnMuaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9wb3NpdGlvbigpIHtcbiAgICAgICAgY29uc3QgbWVudUVsZW1lbnQgPSB0aGlzLnJlZnMubWVudS52ZHQudk5vZGUuY2hpbGRyZW4uZWxlbWVudDtcbiAgICAgICAgY29uc3Qgd2lkdGggPSB0aGlzLmVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gICAgICAgIGNvbnN0IG1lbnVXaWR0aCA9IG1lbnVFbGVtZW50Lm9mZnNldFdpZHRoO1xuICAgICAgICBpZiAod2lkdGggPiBtZW51V2lkdGgpIHtcbiAgICAgICAgICAgIG1lbnVFbGVtZW50LnN0eWxlLndpZHRoID0gYCR7d2lkdGh9cHhgO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQge1NlbGVjdCwgT3B0aW9uLCBHcm91cCBhcyBPcHRpb25Hcm91cH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3NlbGVjdC9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvc2VsZWN0L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy9zZWxlY3QvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgSW5wdXQgZnJvbSAnLi4vaW5wdXQnO2ltcG9ydCBEcm9wZG93biwge0Ryb3Bkb3duSXRlbSwgRHJvcGRvd25NZW51fSBmcm9tICcuLi9kcm9wZG93bic7aW1wb3J0IHtpc1N0cmluZ09yTnVtYmVyLCBnZXRUZXh0QnlDaGlsZHJlbiwgYWRkU3R5bGV9IGZyb20gJy4uL3V0aWxzJztpbXBvcnQgT3B0aW9uIGZyb20gJy4vb3B0aW9uJztpbXBvcnQgT3B0aW9uR3JvdXAgZnJvbSAnLi9ncm91cCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuXG5cblxuXG5jb25zdCB7XG4gICAgY2xhc3NOYW1lLCBjbGVhcmFibGUsIGRhdGEsIHZhbHVlLCBtdWx0aXBsZSxcbiAgICBkaXNhYmxlZCwgZmlsdGVyYWJsZSwga2V5d29yZHMsIF9zaG93LFxuICAgIHBsYWNlaG9sZGVyLCBzaXplLCBzdHlsZSwgbmFtZSwgY2hpbGRyZW4sXG4gICAgZmx1aWQsIHdpZHRoLFxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1zZWxlY3QnOiB0cnVlLFxuICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG4gICAgJ2stZGlzYWJsZWQnOiBkaXNhYmxlZCxcbiAgICAnay1zaG93JzogX3Nob3csXG4gICAgJ2stY2xlYXJhYmxlJzogY2xlYXJhYmxlLFxuICAgIFtgay0ke3NpemV9YF06IHNpemUgIT09ICdkZWZhdWx0JyxcbiAgICAnay1mbHVpZCc6IGZsdWlkLFxufTtcblxubGV0IGhhc1ZhbHVlID0gdmFsdWUgIT0gbnVsbCAmJiAoIW11bHRpcGxlICYmIHZhbHVlICE9PSAnJyB8fCBtdWx0aXBsZSAmJiB2YWx1ZS5sZW5ndGgpO1xuY29uc3QgaXNHcm91cCA9IEFycmF5LmlzQXJyYXkoc2VsZi5nZXQoJ2RhdGEuMC5kYXRhJykpO1xuXG5sZXQgbGFiZWw7XG5sZXQgbGFiZWxzID0gW107XG5cbmNvbnN0IGhhbmRsZVByb3BzID0gcHJvcHMgPT4ge1xuICAgIGxldCBhY3RpdmUgPSBmYWxzZTtcbiAgICBsZXQgdmFsaWQgPSBmYWxzZTtcblxuICAgIGlmICghbXVsdGlwbGUpIHtcbiAgICAgICAgaWYgKHByb3BzLnZhbHVlID09PSB2YWx1ZSkge1xuICAgICAgICAgICAgLy8gc2V0IGxhYmVsXG4gICAgICAgICAgICBsYWJlbCA9IHByb3BzLmxhYmVsO1xuICAgICAgICAgICAgYWN0aXZlID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBjb25zdCBpbmRleCA9IHZhbHVlLmluZGV4T2YocHJvcHMudmFsdWUpO1xuICAgICAgICBpZiAofmluZGV4KSB7XG4gICAgICAgICAgICAvLyBrZWVwIG9yZGVyIGNvbnNpc3RlbnRcbiAgICAgICAgICAgIGxhYmVsc1tpbmRleF0gPSBwcm9wcy5sYWJlbDtcbiAgICAgICAgICAgIGFjdGl2ZSA9IHRydWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxldCB0bXA7XG4gICAgaWYgKFxuICAgICAgICAhZmlsdGVyYWJsZSAmJiBcbiAgICAgICAgcHJvcHMubGFiZWwgfHwgXG4gICAgICAgIGtleXdvcmRzID09IG51bGwgfHwgXG4gICAgICAgIH5wcm9wcy5sYWJlbC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoKHRtcCA9IGtleXdvcmRzLnRvTG93ZXJDYXNlKCkpKSB8fCBcbiAgICAgICAgKFxuICAgICAgICAgICAgaXNTdHJpbmdPck51bWJlcihwcm9wcy52YWx1ZSkgJiYgXG4gICAgICAgICAgICB+U3RyaW5nKHByb3BzLnZhbHVlKS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodG1wKVxuICAgICAgICApXG4gICAgKSB7XG4gICAgICAgIHZhbGlkID0gdHJ1ZTsgXG4gICAgfVxuXG4gICAgcmV0dXJuIHthY3RpdmUsIHZhbGlkfTtcbn07XG5cbmNvbnN0IE9wdGlvbnMgPSBwcm9wcyA9PiB7XG4gICAgY29uc3QgZGF0YSA9IHByb3BzLmRhdGE7XG4gICAgY29uc3QgcmV0ID0gW107XG4gICAgZGF0YS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAvLyBkZXByZWNhdGUgdGV4dCwgdXNlIGxhYmVsIGluc3RlYWQgb2ZcbiAgICAgICAgaWYgKGl0ZW0udGV4dCkgaXRlbS5sYWJlbCA9IGl0ZW0udGV4dDtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHt2YWxpZCwgYWN0aXZlfSA9IGhhbmRsZVByb3BzKGl0ZW0pO1xuICAgICAgICBpZiAodmFsaWQpIHtcbiAgICAgICAgICAgIHJldC5wdXNoKFxuICAgICAgICAgICAgICAgIGgoRHJvcGRvd25JdGVtLCB7J2V2LXNlbGVjdCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vblNlbGVjdC5iaW5kKHNlbGYsIGl0ZW0udmFsdWUpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpdGVtLmRpc2FibGVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7J2stYWN0aXZlJzogYWN0aXZlfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2hpZGVPblNlbGVjdCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshbXVsdGlwbGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2l0ZW0udGVtcGxhdGUgPyBpdGVtLnRlbXBsYXRlKGl0ZW0sIGluZGV4KSA6IGl0ZW0ubGFiZWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ19jb250ZXh0JzogdGhpc30pXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gcmV0O1xufVxuXG5jb25zdCBPcHRpb25zVk5vZGVzID0gKHtjaGlsZHJlbn0pID0+IHtcbiAgICByZXR1cm4gX191Lm1hcChjaGlsZHJlbiA/IChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkgOiBjaGlsZHJlbiwgdk5vZGUgPT4ge1xuICAgICAgICBpZiAodk5vZGUudGFnID09PSBPcHRpb24pIHtcbiAgICAgICAgICAgIGxldCBwcm9wcyA9IHZOb2RlLnByb3BzO1xuICAgICAgICAgICAgcHJvcHMgPSB7XG4gICAgICAgICAgICAgICAgLi4ucHJvcHMsIFxuICAgICAgICAgICAgICAgICdldi1zZWxlY3QnOiBzZWxmLl9vblNlbGVjdC5iaW5kKHNlbGYsIHByb3BzLnZhbHVlKSxcbiAgICAgICAgICAgICAgICBoaWRlT25TZWxlY3Q6ICFtdWx0aXBsZSxcbiAgICAgICAgICAgICAgICBsYWJlbDogcHJvcHMubGFiZWwgfHwgZ2V0VGV4dEJ5Q2hpbGRyZW4ocHJvcHMuY2hpbGRyZW4pLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBwcm9wcy5jaGlsZHJlbiB8fCBwcm9wcy5sYWJlbCBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB7YWN0aXZlLCB2YWxpZH0gPSBoYW5kbGVQcm9wcyhwcm9wcyk7XG4gICAgICAgICAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhjKCcnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcHJvcHMuY2xhc3NOYW1lID0gX2NsYXNzTmFtZSh7XG4gICAgICAgICAgICAgICAgICAgIFtwcm9wcy5jbGFzc05hbWVdOiBwcm9wcy5jbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICAgICdrLWFjdGl2ZSc6IGFjdGl2ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gcmV0dXJuIHRoZSBjbG9uZWQgdk5vZGVcbiAgICAgICAgICAgIHJldHVybiBoKE9wdGlvbiwgcHJvcHMpO1xuICAgICAgICB9IGVsc2UgaWYgKHZOb2RlLnRhZyA9PT0gT3B0aW9uR3JvdXApIHtcbiAgICAgICAgICAgIGxldCBwcm9wcyA9IHZOb2RlLnByb3BzO1xuICAgICAgICAgICAgcHJvcHMgPSB7XG4gICAgICAgICAgICAgICAgLi4ucHJvcHMsXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IGgoT3B0aW9uc1ZOb2RlcywgeydjaGlsZHJlbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtwcm9wcy5jaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnX2NvbnRleHQnOiB0aGlzfSlcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gaChPcHRpb25Hcm91cCwgcHJvcHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHZOb2RlO1xuICAgIH0pOyBcbn0gXG5cbmNvbnN0IE1lbnUgPSAoXG4gICAgaChEcm9wZG93bk1lbnUsIHsnZXYtJGNoYW5nZWQ6c2hvdyc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9wb3NpdGlvbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2xhc3NOYW1lJzogJ2stc2VsZWN0LWRyb3Bkb3duJywgJ2V2LSRjaGFuZ2U6c2hvdyc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vbkNoYW5nZVNob3cgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshaXNHcm91cCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaChPcHRpb25zLCB7J2RhdGEnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGF0YSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzfSkgOiBfVmR0LnV0aWxzLm1hcChmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGF0YSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG5yZXR1cm4gaChPcHRpb25Hcm91cCwgeydsYWJlbCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZS5sYWJlbCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKE9wdGlvbnMsIHsnZGF0YSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZS5kYXRhIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9KSwgJ19jb250ZXh0JzogdGhpc30pO1xufSwgdGhpcyksIGgoT3B0aW9uc1ZOb2RlcywgeydjaGlsZHJlbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnX2NvbnRleHQnOiB0aGlzfSldLCAnX2NvbnRleHQnOiB0aGlzfSwgbnVsbCwgbnVsbCwgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ21lbnUnXSA9IGl9KVxuKTtcblxuLy8gaWYgdGhlIHZhbHVlIGlzIG5vdCBpbiBvcHRpb25zLCB0aGVuIHNldCBoYXNWYWx1ZSB0byBmYWxzZVxuaWYgKGhhc1ZhbHVlICYmICFsYWJlbCAmJiAhbGFiZWxzLmxlbmd0aCkge1xuICAgIGhhc1ZhbHVlID0gZmFsc2U7XG59XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3dpZHRoICE9IG51bGwgPyBhZGRTdHlsZShzdHlsZSwge3dpZHRoOiBgJHt3aWR0aH1weGB9KSA6IHN0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBoKERyb3Bkb3duLCB7J3Bvc2l0aW9uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tteTogJ2xlZnQgdG9wJywgYXQ6ICdsZWZ0IGJvdHRvbSd9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd0cmlnZ2VyJzogJ2NsaWNrJywgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IFtoKCdkaXYnLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2ZvY3VzSW5wdXQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtoKCdpbnB1dCcsIHsndHlwZSc6ICdoaWRkZW4nLCAndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ25hbWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbmFtZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshbXVsdGlwbGUgJiYgZmlsdGVyYWJsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaChJbnB1dCwgeyd2YWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtrZXl3b3JkcyA9PSBudWxsID8gbGFiZWwgOiBrZXl3b3JkcyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtaW5wdXQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fb25TZWFyY2ggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWJsdXInOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fb25CbHVyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1mb2N1cyc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9zZWxlY3RJbnB1dCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3BsYWNlaG9sZGVyJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BsYWNlaG9sZGVyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzaXplJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NpemUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2ZsdWlkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzfSwgbnVsbCwgbnVsbCwgbnVsbCwgZnVuY3Rpb24oaSkge3dpZGdldHNbJ2lucHV0J10gPSBpfSkgOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbIWZpbHRlcmFibGUgJiYgIWhhc1ZhbHVlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdzcGFuJywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3BsYWNlaG9sZGVyIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLXBsYWNlaG9sZGVyIGMtZWxsaXBzaXMnKSA6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshbXVsdGlwbGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ3NwYW4nLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbGFiZWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2stdmFsdWUgYy1lbGxpcHNpcycpIDogaChBbmltYXRlLCB7J2E6dGFnJzogJ3NwYW4nLCAnYTpkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NsYXNzTmFtZSc6ICdrLXZhbHVlcycsICdjaGlsZHJlbic6IFtfVmR0LnV0aWxzLm1hcChmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbGFiZWxzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG5yZXR1cm4gaChBbmltYXRlLCB7J2E6dGFnJzogJ3NwYW4nLCAnY2xhc3NOYW1lJzogJ2stdGFnJywgJ2tleSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZVtpbmRleF0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2E6dHJhbnNpdGlvbic6ICdmYWRlJywgJ2NoaWxkcmVuJzogW2goJ3NwYW4nLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaXRlbSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay10ZXh0JyksIGgoJ2knLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2RlbGV0ZS5iaW5kKHNlbGYsIHZhbHVlW2luZGV4XSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIG51bGwsICdrLWljb24gaW9uLWlvcy1jbG9zZS1lbXB0eScpXSwgJ19jb250ZXh0JzogdGhpc30pO1xufSwgdGhpcyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmaWx0ZXJhYmxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKElucHV0LCB7J3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2tleXdvcmRzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1pbnB1dCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vblNlYXJjaCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtYmx1cic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9vbkJsdXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWZvY3VzJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uRm9jdXMgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdwbGFjZWhvbGRlcic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFshaGFzVmFsdWUgPyBwbGFjZWhvbGRlciA6ICcnIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdhdXRvV2lkdGgnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzaXplJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NpemUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpc30sIG51bGwsIG51bGwsIG51bGwsIGZ1bmN0aW9uKGkpIHt3aWRnZXRzWydpbnB1dCddID0gaX0pIDogdW5kZWZpbmVkXSwgJ19jb250ZXh0JzogdGhpc30pLCBoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGVhcmFibGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2knLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uQ2xlYXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIG51bGwsIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcImstY2xlYXIgaW9uLWlvcy1jbG9zZVwiOiB0cnVlLCBcImstc2hvd1wiOiBoYXNWYWx1ZX0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpIDogdW5kZWZpbmVkLCBoKCdpJywgbnVsbCwgbnVsbCwgJ2stYXJyb3cgaW9uLWFycm93LWRvd24tYicpXSwgJ2stc3VmZml4JyldLCAnay13cmFwcGVyJyksIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtNZW51IFxuICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyldLCAnX2NvbnRleHQnOiB0aGlzfSksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3suLi5jbGFzc05hbWVPYmosICdrLWFjdGl2ZSc6IGhhc1ZhbHVlfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3NlbGVjdC9pbmRleC52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQge0Ryb3Bkb3duSXRlbX0gZnJvbSAnLi4vZHJvcGRvd24nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHRpb24gZXh0ZW5kcyBEcm9wZG93bkl0ZW0ge1xuXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3NlbGVjdC9vcHRpb24uanMiLCIvKipcbiAqIENyZWF0ZWQgYnkgc3lsdmlhIG9uIDIwMTcvMTAvMTguXG4gKi9cbmltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCdcbmltcG9ydCAnLi9pbmRleC5zdHlsJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTbGlkZXIgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIGdldCB0ZW1wbGF0ZSgpIHsgcmV0dXJuIHRlbXBsYXRlOyB9XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG1heDogMTAwLFxuICAgICAgICAgICAgbWluOiAwLFxuICAgICAgICAgICAgdmFsdWU6IDAsXG4gICAgICAgICAgICBpc1JhbmdlOiBmYWxzZSxcbiAgICAgICAgICAgIHVuaXQ6ICcnLFxuICAgICAgICAgICAgaXNTaG93RW5kOiB0cnVlLFxuICAgICAgICAgICAgaXNTaG93SW5wdXQ6IHRydWUsXG4gICAgICAgICAgICBzdGVwOiAxLFxuXG4gICAgICAgICAgICBfc2xpZGVyVmFsdWU6IDAsXG4gICAgICAgICAgICBfaW5wdXRWYWx1ZTowLFxuICAgICAgICAgICAgX2lzRHJhZ2dpbmc6IGZhbHNlLFxuICAgICAgICAgICAgX2lzRmlyc3Q6IGZhbHNlLFxuICAgICAgICAgICAgX2lzU2Vjb25kOiBmYWxzZSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIG1heDogTnVtYmVyLFxuICAgICAgICBtaW46IE51bWJlcixcbiAgICAgICAgdmFsdWU6IE51bWJlcixcbiAgICAgICAgaXNSYW5nZTogQm9vbGVhbixcbiAgICAgICAgdW5pdDogU3RyaW5nLFxuICAgICAgICBpc1Nob3dFbmQ6IEJvb2xlYW4sXG4gICAgICAgIGlzU2hvd0lucHV0OiBCb29sZWFuLFxuICAgICAgICBzdGVwOiBOdW1iZXIsXG4gICAgfVxuXG4gICAgX2luaXQoKSB7XG4gICAgICAgIHRoaXMuX3NldEZpeGVkVmFsdWUodGhpcy5nZXQoJ3ZhbHVlJykpO1xuXG4gICAgICAgIHRoaXMub24oXCIkY2hhbmdlOl9pbnB1dFZhbHVlXCIsIChjLCB2YWwpID0+IHtcbiAgICAgICAgICAgIGlmICghdGhpcy5nZXQoJ19pc0RyYWdnaW5nJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9zZXRGaXhlZFZhbHVlKHZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9iZWZvcmVVcGRhdGUobGFzdFZOb2RlLCBuZXh0Vk5vZGUpIHtcbiAgICAgICAgaWYgKGxhc3RWTm9kZSAmJiBuZXh0Vk5vZGUpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldEZpeGVkVmFsdWUodGhpcy5nZXQoJ3ZhbHVlJykpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NldEZpeGVkVmFsdWUodmFsdWUpIHtcbiAgICAgICAgY29uc3QgZml4ZWRWYWx1ZSA9IHRoaXMuX2dldEZpeGVkVmFsdWUodmFsdWUpO1xuICAgICAgICB0aGlzLnNldCh7XG4gICAgICAgICAgICB2YWx1ZTogZml4ZWRWYWx1ZSxcbiAgICAgICAgICAgIF9pbnB1dFZhbHVlOiBmaXhlZFZhbHVlLFxuICAgICAgICAgICAgX3NsaWRlclZhbHVlOiBmaXhlZFZhbHVlLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfZ2V0Rml4ZWRWYWx1ZSh2YWx1ZSkge1xuICAgICAgICBsZXQge3N0ZXAsIG1heCwgbWluLCBpc1JhbmdlfSA9IHRoaXMuZ2V0KCk7XG5cbiAgICAgICAgZnVuY3Rpb24gZml4KHYpIHtcbiAgICAgICAgICAgIGlmIChOdW1iZXIuaXNOYU4oTnVtYmVyKHYpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtaW47XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHYgPCBtaW4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWluO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh2ID4gbWF4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1heDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gZm9yIHRoZSBhY2N1cmFjeVxuICAgICAgICAgICAgICAgIHJldHVybiBOdW1iZXIoKE1hdGgucm91bmQodiAvIHN0ZXApICogc3RlcCkudG9GaXhlZCgxMCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGZpeGVkVmFsdWU7XG4gICAgICAgIGlmIChpc1JhbmdlKSB7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZml4ZWRWYWx1ZSA9IFttaW4sIG1pbl07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGZpeGVkVmFsdWUgPSBbZml4KHZhbHVlWzBdKSwgZml4KHZhbHVlWzFdKV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBmaXhlZFZhbHVlID0gZml4KHZhbHVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmaXhlZFZhbHVlO1xuICAgIH1cblxuICAgIF9jbGlja1dyYXBwZXIoZSkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2Rpc2FibGVkJykgfHwgdGhpcy5nZXQoJ19pc0RyYWdnaW5nJykpIHJldHVybjtcblxuICAgICAgICBsZXQgY3VycmVudFBvc2l0aW9uID0gZS5jbGllbnRYO1xuICAgICAgICBsZXQgbmV3VmFsdWUgPSB0aGlzLl9nZXRTbGlkaW5nVmFsdWUoY3VycmVudFBvc2l0aW9uKTtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdpc1JhbmdlJykpIHtcbiAgICAgICAgICAgIGxldCBsZWZ0QnRuUG9zaXRpb24gPSB0aGlzLiRzbGlkZXJGaXJzdEJ0bi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0LFxuICAgICAgICAgICAgICAgIHJpZ2h0QnRuUG9zaXRpb24gPSB0aGlzLiRzbGlkZXJTZWNvbmRCdG4uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCxcbiAgICAgICAgICAgICAgICB2YWx1ZUFyciA9IHRoaXMuZ2V0KCd2YWx1ZScpLnNsaWNlKCk7XG4gICAgICAgICAgICBpZiAoTWF0aC5hYnMobGVmdEJ0blBvc2l0aW9uIC0gY3VycmVudFBvc2l0aW9uKSA8PSBNYXRoLmFicyhyaWdodEJ0blBvc2l0aW9uIC0gY3VycmVudFBvc2l0aW9uKSkgIHtcbiAgICAgICAgICAgICAgICB2YWx1ZUFyclswXSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWx1ZUFyclsxXSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbmV3VmFsdWUgPSB2YWx1ZUFycjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX3NldEZpeGVkVmFsdWUobmV3VmFsdWUpO1xuICAgIH1cbiAgICBcbiAgICBfZ2V0U2xpZGluZ1ZhbHVlKHBvcykge1xuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy4kc2xpZGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBjb25zdCBwZXJjZW50ID0gKHBvcyAtIHJlY3QubGVmdCkgLyByZWN0LndpZHRoO1xuICAgICAgICBjb25zdCB7bWF4LCBtaW59ID0gdGhpcy5nZXQoKTtcbiAgICAgICAgY29uc3Qgc2xpZGVyV2lkdGggPSBtYXggLSBtaW47XG5cbiAgICAgICAgaWYgKHBlcmNlbnQgPD0gMCApIHtcbiAgICAgICAgICAgIHJldHVybiBtaW47XG4gICAgICAgIH0gZWxzZSBpZiAocGVyY2VudCA+PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF4O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG1pbiArIHNsaWRlcldpZHRoICogcGVyY2VudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9vbkRyYWcoaW5kZXhGbGFnLCBlKSB7XG4gICAgICAgIGlmICh0aGlzLmdldCgnZGlzYWJsZWQnKSkgcmV0dXJuO1xuXG4gICAgICAgIGlmIChpbmRleEZsYWcpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXQoJ3ZhbHVlJyk7XG4gICAgICAgICAgICB0aGlzLl9taW4gPSB2YWx1ZVswXTtcbiAgICAgICAgICAgIHRoaXMuX21heCA9IHZhbHVlWzFdO1xuICAgICAgICAgICAgaWYgKGluZGV4RmxhZyA9PT0gJ19pc0ZpcnN0Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgX2lzRHJhZ2dpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIF9pc0ZpcnN0OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBfaXNTZWNvbmQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgICAgICAgICAgX2lzRHJhZ2dpbmc6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIF9pc0ZpcnN0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgX2lzU2Vjb25kOiB0cnVlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNldCgnX2lzRHJhZ2dpbmcnLCB0cnVlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX19vblJhbmdlU2xpZGluZyA9IHRoaXMuX29uUmFuZ2VTbGlkaW5nLmJpbmQodGhpcywgaW5kZXhGbGFnKTtcbiAgICAgICAgdGhpcy5fX29uUmFuZ2VTbGlkZUVuZCA9IHRoaXMuX29uUmFuZ2VTbGlkZUVuZC5iaW5kKHRoaXMsIGluZGV4RmxhZyk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLl9fb25SYW5nZVNsaWRpbmcpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX19vblJhbmdlU2xpZGVFbmQpO1xuICAgIH1cblxuICAgIF9vblJhbmdlU2xpZGluZyhpbmRleEZsYWcsIGUpe1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2Rpc2FibGVkJykpIHJldHVybjtcblxuICAgICAgICBsZXQgdGVtcFZhbHVlID0gdGhpcy5fZ2V0U2xpZGluZ1ZhbHVlKGUuY2xpZW50WCwgdGhpcy5nZXQoJ19pc0RyYWdnaW5nJykpO1xuICAgICAgICBsZXQgZml4ZWRWYWx1ZTtcbiAgICAgICAgaWYgKGluZGV4RmxhZykge1xuICAgICAgICAgICAgaWYgKGluZGV4RmxhZyA9PT0gJ19pc0ZpcnN0Jykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldCgnX2lzU2Vjb25kJykpIHJldHVybjtcbiAgICAgICAgICAgICAgICB0ZW1wVmFsdWUgPSBbXG4gICAgICAgICAgICAgICAgICAgIE1hdGgubWluKHRlbXBWYWx1ZSwgdGhpcy5fbWF4KSxcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5tYXgodGVtcFZhbHVlLCB0aGlzLl9tYXgpXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0ICgnX2lzRmlyc3QnKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHRlbXBWYWx1ZSA9IFtcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5taW4odGVtcFZhbHVlLCB0aGlzLl9taW4pLFxuICAgICAgICAgICAgICAgICAgICBNYXRoLm1heCh0ZW1wVmFsdWUsIHRoaXMuX21pbilcbiAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZml4ZWRWYWx1ZSA9IHRoaXMuX2dldEZpeGVkVmFsdWUodGVtcFZhbHVlKTtcblxuICAgICAgICB0aGlzLnNldCh7XG4gICAgICAgICAgICB2YWx1ZTogZml4ZWRWYWx1ZSxcbiAgICAgICAgICAgIF9pbnB1dFZhbHVlOiBmaXhlZFZhbHVlLFxuICAgICAgICAgICAgX3NsaWRlclZhbHVlOiB0ZW1wVmFsdWUsXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIF9vblJhbmdlU2xpZGVFbmQoaW5kZXhGbGFnLCBlKXtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdkaXNhYmxlZCcpKSByZXR1cm47XG5cbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdfaXNEcmFnZ2luZycpKSB7XG4gICAgICAgICAgICB0aGlzLnNldCgnX2lzRHJhZ2dpbmcnLCBmYWxzZSwge3NpbGVudDogdHJ1ZX0pO1xuICAgICAgICAgICAgbGV0IG5ld1ZhbHVlID0gdGhpcy5fZ2V0U2xpZGluZ1ZhbHVlKGUuY2xpZW50WCk7XG4gICAgICAgICAgICBpZiAoaW5kZXhGbGFnKSB7XG4gICAgICAgICAgICAgICAgaWYgKGluZGV4RmxhZyA9PT0gJ19pc0ZpcnN0Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXQoJ19pc1NlY29uZCcpKSByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0KCdfaXNGaXJzdCcsIGZhbHNlLCB7YXN5bmM6IHRydWV9KTtcbiAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRoLm1pbihuZXdWYWx1ZSwgdGhpcy5fbWF4KSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBNYXRoLm1heChuZXdWYWx1ZSwgdGhpcy5fbWF4KVxuICAgICAgICAgICAgICAgICAgICBdO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmdldCgnX2lzRmlyc3QnKSkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldCgnX2lzU2Vjb25kJywgZmFsc2UsIHthc3luYzogdHJ1ZX0pO1xuICAgICAgICAgICAgICAgICAgICBuZXdWYWx1ZSA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgubWluKG5ld1ZhbHVlLCB0aGlzLl9taW4pLFxuICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5tYXgobmV3VmFsdWUsIHRoaXMuX21pbilcbiAgICAgICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuX3NldEZpeGVkVmFsdWUobmV3VmFsdWUpO1xuXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ3N0b3AnLCB0aGlzLmdldCgndmFsdWUnKSk7XG5cbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCB0aGlzLl9fb25SYW5nZVNsaWRpbmcpO1xuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB0aGlzLl9fb25SYW5nZVNsaWRlRW5kKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9zdG9wUHJvcGFnYXRpb24oZSkge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cblxuICAgIF9kZXN0b3J5KCkge1xuICAgICAgICB0aGlzLl9vblJhbmdlU2xpZGVFbmQoKVxuICAgIH1cbn1cblxuZXhwb3J0IHtTbGlkZXJ9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9zbGlkZXIvaW5kZXguanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb21wb25lbnRzL3NsaWRlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvc2xpZGVyL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiaW1wb3J0IFNwaW5uZXIgZnJvbSAnLi4vc3Bpbm5lcic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuY29uc3Qge1xuICAgIHZhbHVlLCBtaW4sIG1heCwgY2xhc3NOYW1lLFxuICAgIGRpc2FibGVkLCBpc1JhbmdlLCBpc0lubmVyVGV4dCxcbiAgICBpc1Nob3dJbnB1dCwgaXNTaG93RW5kLCB1bml0LFxuICAgIHN0ZXAsIF9pc0RyYWdnaW5nLCBfaXNGaXJzdCwgX2lucHV0VmFsdWUsXG4gICAgX2lzU2Vjb25kLCBfc2xpZGVyVmFsdWUsIHN0eWxlLFxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay1zbGlkZXInOiB0cnVlLFxuICAgICdrLWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbiAgICAnay1kcmFnZ2luZyc6IF9pc0RyYWdnaW5nXG59O1xuXG5jb25zdCBzbGlkZXJXaWR0aCA9IG1heCAtIG1pbjtcblxucmV0dXJuIGgoJ2RpdicsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3R5bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIFtoKCdkaXYnLCB7J2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2NsaWNrV3JhcHBlciBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2goJ2RpdicsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaXNSYW5nZSA/XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogTWF0aC5hYnMoX3NsaWRlclZhbHVlWzFdIC0gX3NsaWRlclZhbHVlWzBdKSAvIHNsaWRlcldpZHRoICogMTAwICsgJyUnLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAoTWF0aC5taW4oX3NsaWRlclZhbHVlWzBdLCBfc2xpZGVyVmFsdWVbMV0pIC0gbWluKSAvIHNsaWRlcldpZHRoICogMTAwICsgJyUnXG4gICAgICAgICAgICAgICAgfSA6XG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogKF9zbGlkZXJWYWx1ZSAtIG1pbikgLyBzbGlkZXJXaWR0aCAqIDEwMCArICclJ1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBudWxsLCAnay1iYXInKSwgaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7IFxuICAgICAgICAgICAgICAgIGxlZnQ6IGlzUmFuZ2UgP1xuICAgICAgICAgICAgICAgICAgICAoX3NsaWRlclZhbHVlWzBdIC0gbWluKSAvIHNsaWRlcldpZHRoICogMTAwICsgJyUnIDpcbiAgICAgICAgICAgICAgICAgICAgKF9zbGlkZXJWYWx1ZSAtIG1pbikgLyBzbGlkZXJXaWR0aCAqIDEwMCArICclJ1xuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtbW91c2Vkb3duJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2lzUmFuZ2UgPyBcbiAgICAgICAgICAgICAgICBzZWxmLl9vbkRyYWcuYmluZChzZWxmLCAnX2lzRmlyc3QnKSA6IFxuICAgICAgICAgICAgICAgIHNlbGYuX29uRHJhZy5iaW5kKHNlbGYsIHVuZGVmaW5lZClcbiAgICAgICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9zdG9wUHJvcGFnYXRpb24gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpc0lubmVyVGV4dCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2lzUmFuZ2UgPyB2YWx1ZSA6IHZhbHVlWzBdXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkgOiB1bmRlZmluZWQsIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcbiAgICAgICAgICAgICAgICBcImstaGFuZGxlXCI6IHRydWUsIFxuICAgICAgICAgICAgICAgIFwiay1hY3RpdmVcIjogKF9pc0ZpcnN0ICYmIF9zbGlkZXJWYWx1ZVsxXSA9PT0gc2VsZi5fbWF4KSB8fCBcbiAgICAgICAgICAgICAgICAgICAgKF9pc1NlY29uZCAmJiB2YWx1ZVswXSAhPT0gc2VsZi5fbWluKVxuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RvbSA9PiBzZWxmLiRzbGlkZXJGaXJzdEJ0biA9IGRvbSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2lzUmFuZ2UgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIHsnZXYtbW91c2Vkb3duJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uRHJhZy5iaW5kKHNlbGYsIFwiX2lzU2Vjb25kXCIpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgbGVmdDogKF9zbGlkZXJWYWx1ZVsxXSAtIG1pbikgLyBzbGlkZXJXaWR0aCAqIDEwMCArICclJ1xuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2lzSW5uZXJUZXh0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWVbMV0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkgOiB1bmRlZmluZWQsIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcbiAgICAgICAgICAgICAgICBcImstaGFuZGxlXCI6IHRydWUsXG4gICAgICAgICAgICAgICAgXCJrLWFjdGl2ZVwiOiAoX2lzU2Vjb25kICYmIF9zbGlkZXJWYWx1ZVswXSA9PT0gc2VsZi5fbWluKSB8fCBcbiAgICAgICAgICAgICAgICAgICAgKF9pc0ZpcnN0ICYmIF9zbGlkZXJWYWx1ZVsxXSAhPT0gc2VsZi5fbWF4KVxuICAgICAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RvbSA9PiBzZWxmLiRzbGlkZXJTZWNvbmRCdG4gPSBkb20gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkgOiB1bmRlZmluZWQsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpc1Nob3dFbmQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFtoKCdzcGFuJywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFttaW4gKyB1bml0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICcgJ10pLCBoKCdzcGFuJywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW21heCArIHVuaXQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSldLCAnay1ib3gnKSA6IHVuZGVmaW5lZF0sICdrLXdyYXBwZXInLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZG9tID0+IHNlbGYuJHNsaWRlciA9IGRvbSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2lzU2hvd0lucHV0ICYmICFpc1JhbmdlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKFNwaW5uZXIsIHsnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ21heCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFttYXggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ21pbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFttaW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3N0ZXAnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc3RlcCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzLCB2YWx1ZTogX2dldE1vZGVsKHNlbGYsICdfaW5wdXRWYWx1ZScpLCAnZXYtJGNoYW5nZTp2YWx1ZSc6IGZ1bmN0aW9uKF9fYywgX19uKSB7IF9zZXRNb2RlbChzZWxmLCAnX2lucHV0VmFsdWUnLCBfX24pIH19KSA6IHVuZGVmaW5lZF0sIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZU9iaiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3NsaWRlci9pbmRleC52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuXG5jb25zdCBudW1iZXJSZWcgPSAvXigtfFxcKyk/XFxkKyhcXC4oXFxkKyk/KT8kLztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3Bpbm5lciBleHRlbmRzIEludGFjdCB7XG4gICAgZ2V0IHRlbXBsYXRlKCkgeyByZXR1cm4gdGVtcGxhdGU7IH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6IDAsXG4gICAgICAgICAgICBtYXg6IE51bWJlci5QT1NJVElWRV9JTkZJTklUWSxcbiAgICAgICAgICAgIG1pbjogTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLFxuICAgICAgICAgICAgc3RlcDogMSxcbiAgICAgICAgICAgIHNpemU6ICdkZWZhdWx0JyxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICAgICAgbWF4OiBOdW1iZXIsXG4gICAgICAgIG1pbjogTnVtYmVyLFxuICAgICAgICBzdGVwOiBOdW1iZXJcbiAgICB9XG5cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5nZXQoJ3ZhbHVlJyk7XG4gICAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBtaW4gPSB0aGlzLmdldCgnbWluJyk7XG4gICAgICAgICAgICBpZiAobWluID09PSBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gbWluO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5pdFZhbHVlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgX2luY3JlYXNlKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc2FibGVJbmNyZWFzZSgpKSByZXR1cm47XG5cbiAgICAgICAgY29uc3Qge3ZhbHVlLCBzdGVwfSA9IHRoaXMuZ2V0KCk7XG5cbiAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgTnVtYmVyKCh2YWx1ZSArIHN0ZXApLnRvRml4ZWQoMTApKSk7XG4gICAgfVxuXG4gICAgX2RlY3JlYXNlKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuX2Rpc2FibGVEZWNyZWFzZSgpKSByZXR1cm47XG5cbiAgICAgICAgY29uc3Qge3ZhbHVlLCBzdGVwfSA9IHRoaXMuZ2V0KCk7XG5cbiAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgTnVtYmVyKCh2YWx1ZSAtIHN0ZXApLnRvRml4ZWQoMTApKSk7XG4gICAgfVxuXG4gICAgX2Rpc2FibGVEZWNyZWFzZSgpIHtcbiAgICAgICAgY29uc3Qge3ZhbHVlLCBtaW4sIHN0ZXAsIGRpc2FibGVkfSA9IHRoaXMuZ2V0KCk7XG5cbiAgICAgICAgcmV0dXJuIGRpc2FibGVkIHx8IHZhbHVlIDw9IG1pbiB8fCB2YWx1ZSAtIG1pbiA8IHN0ZXA7XG4gICAgfVxuXG4gICAgX2Rpc2FibGVJbmNyZWFzZSgpIHtcbiAgICAgICAgY29uc3Qge3ZhbHVlLCBtYXgsIHN0ZXAsIGRpc2FibGVkfSA9IHRoaXMuZ2V0KCk7XG5cbiAgICAgICAgcmV0dXJuIGRpc2FibGVkIHx8IHZhbHVlID49IG1heCB8fCBtYXggLSB2YWx1ZSA8IHN0ZXA7XG4gICAgfVxuXG4gICAgX2NoYW5nZVZhbHVlKGUpIHtcbiAgICAgICAgY29uc3Qge2Rpc2FibGVkLCBtYXgsIG1pbn0gPSB0aGlzLmdldCgpO1xuICAgICAgICBsZXQgdmFsID0gZS50YXJnZXQudmFsdWUudHJpbSgpO1xuXG4gICAgICAgIGlmICghbnVtYmVyUmVnLnRlc3QodmFsKSB8fCBkaXNhYmxlZCkge1xuICAgICAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgdGhpcy5pbml0VmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFsID0gTnVtYmVyKHZhbCk7XG4gICAgICAgICAgICBpZiAodmFsID49IG1heCkge1xuICAgICAgICAgICAgICAgIHZhbCA9IG1heDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsIDwgbWluKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gbWluO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXQoJ3ZhbHVlJywgdmFsKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IHtTcGlubmVyfTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5qcyIsIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImltcG9ydCB7QnV0dG9ufSBmcm9tICcuLi9idXR0b24nO2ltcG9ydCB7SW5wdXR9IGZyb20gJy4uL2lucHV0JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcblxuXG5cbmNvbnN0IHtcbiAgICBjbGFzc05hbWUsIGRpc2FibGVkLCBtYXgsIG1pbiwgc3RlcCxcbiAgICBjaGlsZHJlbiwgdmFsdWUsIHN0eWxlLCBzaXplXG59ID0gc2VsZi5nZXQoKTtcblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLXNwaW5uZXInOiB0cnVlLFxuICAgICdrLWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgW2BrLSR7c2l6ZX1gXTogc2l6ZSAhPT0gJ2RlZmF1bHQnLFxuICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG59O1xuXG5yZXR1cm4gaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2goQnV0dG9uLCB7J2ljb24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9kZWNyZWFzZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fZGlzYWJsZURlY3JlYXNlKCkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NsYXNzTmFtZSc6ICdrLWxlZnQnLCAnc2l6ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaXplIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6ICctJywgJ19jb250ZXh0JzogdGhpc30pLCBoKElucHV0LCB7J2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Rpc2FibGVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jaGFuZ2UnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fY2hhbmdlVmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3NpemUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2l6ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzLCB2YWx1ZTogX2dldE1vZGVsKHNlbGYsICd2YWx1ZScpLCAnZXYtJGNoYW5nZTp2YWx1ZSc6IGZ1bmN0aW9uKF9fYywgX19uKSB7IF9zZXRNb2RlbChzZWxmLCAndmFsdWUnLCBfX24pIH19KSwgaChCdXR0b24sIHsnaWNvbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2luY3JlYXNlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9kaXNhYmxlSW5jcmVhc2UoKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2xhc3NOYW1lJzogJ2stcmlnaHQnLCAnc2l6ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzaXplIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6ICcrJywgJ19jb250ZXh0JzogdGhpc30pXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2xhc3NOYW1lT2JqIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0IFN0ZXAgZnJvbSAnLi9zdGVwJztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RlcHMgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc3RhdHVzOiAnbm9ybWFsJyxcbiAgICAgICAgfTtcbiAgICB9XG59XG5cbmV4cG9ydCB7U3RlcHMsIFN0ZXB9O1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3N0ZXBzL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy9zdGVwcy9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvc3RlcHMvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgU3RlcCBmcm9tICcuL3N0ZXAnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuXG5cbmNvbnN0IHtjaGlsZHJlbiwgdmFsdWUsIHN0eWxlLCBzdGF0dXN9ID0gc2VsZi5nZXQoKTtcblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgICdrLXN0ZXBzIGMtY2xlYXJmaXgnOiB0cnVlLFxufTtcblxubGV0IHN0ZXBJbmRleCA9IDA7XG5sZXQgc3RlcHMgPSAoQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pLmZpbHRlcih2Tm9kZSA9PiB7XG4gICAgaWYgKHZOb2RlICYmIHZOb2RlLnRhZyA9PT0gU3RlcCkge1xuICAgICAgICB2Tm9kZS5wcm9wcyA9IHsuLi52Tm9kZS5wcm9wcywgaW5kZXg6IHN0ZXBJbmRleH07XG4gICAgICAgIGlmICh2YWx1ZSA9PSBzdGVwSW5kZXgpIHtcbiAgICAgICAgICAgIHZOb2RlLnByb3BzLnNlbGVjdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmIChzdGF0dXMgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgICAgICB2Tm9kZS5wcm9wcy5lcnJvciA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgPiBzdGVwSW5kZXgpIHtcbiAgICAgICAgICAgIHZOb2RlLnByb3BzLmRvbmUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHN0ZXBJbmRleCsrO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufSk7XG5cbi8vIGFkZCB3aWR0aFxuc3RlcHMgPSBzdGVwcy5tYXAodk5vZGUgPT4ge1xuICAgIHZOb2RlLnByb3BzLndpZHRoID0gKDEwMCAvIHN0ZXBJbmRleCkgKyAnJSc7IFxuICAgIHJldHVybiB2Tm9kZTtcbn0pO1xuXG5yZXR1cm4gaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0ZXBzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NsYXNzTmFtZU9iaiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3N0ZXBzL2luZGV4LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL3N0ZXAudmR0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RlcCBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBkb25lOiBCb29sZWFuLFxuICAgICAgICBzZWxlY3RlZDogQm9vbGVhbixcbiAgICAgICAgZXJyb3I6IEJvb2xlYW4sXG4gICAgfTtcblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGl0bGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGRvbmU6IGZhbHNlLFxuICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3I6IGZhbHNlLFxuICAgICAgICAgICAgaW5kZXg6IHVuZGVmaW5lZCxcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvc3RlcHMvc3RlcC5qcyIsIlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuY29uc3Qge1xuICAgIGNoaWxkcmVuLCBzZWxlY3RlZCwgZG9uZSwgXG4gICAgdGl0bGUsIGluZGV4LCB3aWR0aCwgZXJyb3Jcbn0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBjbGFzc05hbWVPYmogPSB7XG4gICAgJ2stc3RlcCc6IHRydWUsXG4gICAgJ2stYWN0aXZlJzogc2VsZWN0ZWQsXG4gICAgJ2stZG9uZSc6IGRvbmUsXG4gICAgJ2stZXJyb3InOiBlcnJvcixcbn07XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3t3aWR0aDogd2lkdGh9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbaCgnZGl2JywgbnVsbCwgbnVsbCwgJ2stdGFpbCcpLCBoKCdkaXYnLCBudWxsLCBoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZG9uZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLWNoZWNrbWFyay1lbXB0eSBrLWljb24nKSA6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtlcnJvciBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLWNsb3NlLWVtcHR5IGstaWNvbicpIDogaCgnc3BhbicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpbmRleCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2staW5uZXInKSwgJ2staGVhZCcpLCBoKCdkaXYnLCBudWxsLCBbaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RpdGxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdrLXRpdGxlJyksIGgoJ2RpdicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGlsZHJlbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay1jb250ZW50JyldLCAnay1tYWluJyldLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy9zdGVwcy9zdGVwLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2NvbHVtbi52ZHQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWJsZUNvbHVtbiBleHRlbmRzIEludGFjdCB7XG4gICAgZ2V0IHRlbXBsYXRlKCkgeyByZXR1cm4gdGVtcGxhdGU7IH1cblxuICAgIGRlZmF1bHRzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdGl0bGU6ICcnLFxuICAgICAgICAgICAgdGVtcGxhdGUoZGF0YSwgaW5kZXgpIHsgfSxcbiAgICAgICAgICAgIGtleTogJycsXG4gICAgICAgICAgICBzb3J0YWJsZTogZmFsc2UsXG4gICAgICAgICAgICB3aWR0aDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgZ3JvdXBzOiB1bmRlZmluZWQsXG5cbiAgICAgICAgICAgIC8vIHBhc3NlZCBieSBwYXJlbnRcbiAgICAgICAgICAgICRwYXJlbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG9uQ2xpY2soZSkge1xuICAgICAgICB0aGlzLnRyaWdnZXIoJ2NsaWNrJywgZSk7XG4gICAgfVxuXG4gICAgb25EcmFnU3RhcnQoZSkge1xuICAgICAgICB0aGlzLnRyaWdnZXIoJ2RyYWdTdGFydCcsIGUpO1xuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvdGFibGUvY29sdW1uLmpzIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5jb25zdCB7XG4gICAgd2lkdGgsIHRpdGxlLCBrZXksIFxuICAgIHNvcnRhYmxlLCBncm91cHMsICRwYXJlbnRcbn0gPSBzZWxmLmdldCgpO1xuY29uc3Qge3NvcnQsIHJlc2l6YWJsZX0gPSAkcGFyZW50LmdldCgpO1xuXG5yZXR1cm4gaCgndGgnLCB7J3dpZHRoJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3dpZHRoIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICd0aXRsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0aXRsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5vbkNsaWNrIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3Jlc2l6YWJsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2Jywgeydldi1tb3VzZWRvd24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5vbkRyYWdTdGFydCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgbnVsbCwgJ2stcmVzaXplJykgOiB1bmRlZmluZWQsIGgoJ2RpdicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbIWdyb3VwcyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnZGl2JywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RpdGxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjLWVsbGlwc2lzJykgOiB1bmRlZmluZWQsICdcXG4gICAgICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkbyB7XG4gICAgICAgICAgICBpZiAoc29ydGFibGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlID0ga2V5ID09PSBzb3J0LmtleSA/IHNvcnQudHlwZSA6ICcnO1xuICAgICAgICAgICAgICAgIGgoJ2RpdicsIG51bGwsIGgoJ2knLCBudWxsLCBudWxsLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgICAgICAgICAnay1pY29uJzogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtgaWNvbi0ke3R5cGV9YF06IHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAnaWNvbi1zb3J0YWJsZSc6ICF0eXBlLFxuICAgICAgICAgICAgICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbeydrLXNvcnQnOiB0cnVlLCBbYGstJHt0eXBlfWBdOiB0eXBlfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnXFxuICAgICddLCAnay10aCcpXSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbeydrLXNvcnRhYmxlJzogc29ydGFibGV9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvdGFibGUvY29sdW1uLnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7XG5pbXBvcnQgQ29sdW1uIGZyb20gJy4vY29sdW1uJztcblxubGV0IHNjcm9sbEJhcldpZHRoID0gdW5kZWZpbmVkO1xuXG5jb25zdCBNSU5fV0lEVEggPSA0MDtcbmNvbnN0IHNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlO1xuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYmxlIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgIHNjaGVtZToge30sXG4gICAgICAgICAgICBjaGVja1R5cGU6ICdjaGVja2JveCcsIC8vIHJhZGlvIHwgbm9uZSBcbiAgICAgICAgICAgIHJvd0tleSh2YWx1ZSwgaW5kZXgpIHsgcmV0dXJuIGluZGV4OyB9LFxuICAgICAgICAgICAgcm93Q2xhc3NOYW1lKHZhbHVlLCBpbmRleCkgeyAgfSwgLy8gYWRkIGNsYXNzTmFtZSBmb3IgdHJcbiAgICAgICAgICAgIGNoZWNrZWRLZXlzOiBbXSwgLy8gZm9yIGNoZWNrYm94XG4gICAgICAgICAgICBjaGVja2VkS2V5OiB1bmRlZmluZWQsIC8vIGZvciByYWRpb1xuICAgICAgICAgICAgcm93Q2hlY2thYmxlOiB0cnVlLCAvLyBjbGljayByb3cgdG8gY2hlY2tcbiAgICAgICAgICAgIHJvd0V4cGFuZGFibGU6IHRydWUsIC8vIGNsaWNrIHJvdyB0byBleHBhbmRcbiAgICAgICAgICAgIG5vRGF0YVRlbXBsYXRlOiAnLyjjhJJv44SSKS9+fiDmsqHmnInmib7liLDkurLopoHnmoTmlbDmja7lk6Z+JyxcbiAgICAgICAgICAgIGRpc2FibGVSb3coZGF0YSwgaW5kZXgpIHsgcmV0dXJuIGZhbHNlIH0sXG4gICAgICAgICAgICBzb3J0OiB7fSxcbiAgICAgICAgICAgIGdyb3Vwczoge30sXG4gICAgICAgICAgICByZXNpemFibGU6IGZhbHNlLFxuICAgICAgICAgICAgZXhwYW5kOiB1bmRlZmluZWQsIC8vIGV4cGFuZCB0ZW1wbGF0ZSBjYWxsYmFja1xuICAgICAgICAgICAgZXhwYW5kZWRLZXlzOiBbXSwgXG4gICAgICAgICAgICB0eXBlOiAnZGVmYXVsdCcsIC8vIGRlZmF1bHQgYm9yZGVyXG4gICAgICAgICAgICBmaXhIZWFkZXI6IGZhbHNlLFxuXG4gICAgICAgICAgICBfcGFkZGluZzogMCxcbiAgICAgICAgICAgIF9kaXNhYmxlZEFtb3VudDogMCxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgICAgIHJvd0NoZWNrYWJsZTogQm9vbGVhbixcbiAgICAgICAgcm93RXhwYW5kYWJsZTogQm9vbGVhbixcbiAgICAgICAgcmVzaXphYmxlOiBCb29sZWFuLFxuICAgICAgICBmaXhIZWFkZXI6IEJvb2xlYW4sXG4gICAgfVxuXG4gICAgX2luaXQoKSB7XG4gICAgICAgIC8vIGtlZXAgdGhlIGV2ZW50IGNvbnNpc3RlbnRcbiAgICAgICAgdGhpcy5vbignJGNoYW5nZTpjaGVja2VkS2V5cycsIChjLCBuZXdWYWx1ZSwgb2xkVmFsdWUpID0+IHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignJGNoYW5nZTpjaGVja2VkJywgYywgbmV3VmFsdWUsIG9sZFZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub24oJyRjaGFuZ2U6Y2hlY2tlZEtleScsIChjLCBuZXdWYWx1ZSwgb2xkVmFsdWUpID0+IHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcignJGNoYW5nZTpjaGVja2VkJywgYywgW25ld1ZhbHVlXSwgW29sZFZhbHVlXSk7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBjYWxjdWxhdGUgcGFkZGluZyBvZiBoZWFkZXIgd2hlbiBzb21lIHByb3BzIGhhdmUgY2hhbmdlZFxuICAgICAgICBbJ2RhdGEnLCAnZml4SGVhZGVyJ10uZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgIHRoaXMub24oYCRjaGFuZ2VkOiR7aXRlbX1gLCB0aGlzLl9jYWxjSGVhZGVyUGFkZGluZyk7XG4gICAgICAgIH0pO1xuICAgICAgICAvLyB1cGRhdGUgZGlzYWJsZWQgYW1vdW50IHdoZW4gc29tZSBwcm9wcyBoYXZlIGNoYW5nZWRcbiAgICAgICAgWydkYXRhJywgJ2Rpc2FibGVSb3cnXS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgdGhpcy5vbihgJGNoYW5nZToke2l0ZW19YCwgdGhpcy5fdXBkYXRlRGlzYWJsZWRBbW91bnQpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fdXBkYXRlRGlzYWJsZWRBbW91bnQoKTtcblxuICAgICAgICB0aGlzLl9tb3ZlID0gdGhpcy5fbW92ZS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9kcmFnRW5kID0gdGhpcy5fZHJhZ0VuZC5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIF9tb3VudCgpIHtcbiAgICAgICAgaWYgKHNjcm9sbEJhcldpZHRoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHNjcm9sbEJhcldpZHRoID0gZ2V0U2Nyb2xsYmFyV2lkdGgoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jYWxjSGVhZGVyUGFkZGluZygpO1xuICAgIH1cblxuICAgIGlzQ2hlY2tBbGwoKSB7XG4gICAgICAgIGNvbnN0IGNoZWNrZWRLZXlzID0gdGhpcy5nZXQoJ2NoZWNrZWRLZXlzJyk7XG4gICAgICAgIGNvbnN0IGRhdGFMZW5ndGggPSB0aGlzLmdldCgnZGF0YScpLmxlbmd0aDtcbiAgICAgICAgY29uc3QgZGlzYWJsZWRBbW91bnQgPSB0aGlzLmdldChcIl9kaXNhYmxlZEFtb3VudFwiKTtcbiAgICAgICAgY29uc3QgYW1vdW50ID0gZGF0YUxlbmd0aCAtIGRpc2FibGVkQW1vdW50O1xuICAgICAgICByZXR1cm4gYW1vdW50ICYmIGNoZWNrZWRLZXlzLmxlbmd0aCA9PT0gYW1vdW50OyBcbiAgICB9XG5cbiAgICBpc0NoZWNrZWQoa2V5KSB7XG4gICAgICAgIGNvbnN0IHtjaGVja1R5cGUsIGNoZWNrZWRLZXksIGNoZWNrZWRLZXlzfSA9IHRoaXMuZ2V0KCk7XG4gICAgICAgIGlmIChjaGVja1R5cGUgPT09ICdjaGVja2JveCcpIHtcbiAgICAgICAgICAgIHJldHVybiB+Y2hlY2tlZEtleXMuaW5kZXhPZihrZXkpO1xuICAgICAgICB9IGVsc2UgaWYgKGNoZWNrVHlwZSA9PT0gJ3JhZGlvJykge1xuICAgICAgICAgICAgcmV0dXJuIGNoZWNrZWRLZXkgPT09IGtleTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICBjaGVja0FsbCgpIHtcbiAgICAgICAgY29uc3Qgcm93S2V5ID0gdGhpcy5nZXQoJ3Jvd0tleScpO1xuICAgICAgICBjb25zdCBkaXNhYmxlUm93ID0gdGhpcy5nZXQoJ2Rpc2FibGVSb3cnKTtcbiAgICAgICAgY29uc3QgY2hlY2tlZEtleXMgPSBbXTtcbiAgICAgICAgdGhpcy5nZXQoJ2RhdGEnKS5mb3JFYWNoKCh2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGlmICghZGlzYWJsZVJvdy5jYWxsKHRoaXMsIHZhbHVlLCBpbmRleCkpIHtcbiAgICAgICAgICAgICAgICBjaGVja2VkS2V5cy5wdXNoKHJvd0tleS5jYWxsKHRoaXMsIHZhbHVlLCBpbmRleCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXQoJ2NoZWNrZWRLZXlzJywgY2hlY2tlZEtleXMpO1xuICAgIH1cblxuICAgIHVuY2hlY2tBbGwoKSB7XG4gICAgICAgIHRoaXMuc2V0KCdjaGVja2VkS2V5cycsIFtdKTtcbiAgICB9XG5cbiAgICBjaGVja1JvdyhrZXkpIHtcbiAgICAgICAgdGhpcy5fY2hlY2tVbmNoZWNrUm93KGtleSwgdHJ1ZSwgZmFsc2UpO1xuICAgIH1cblxuICAgIHVuY2hlY2tSb3coa2V5KSB7XG4gICAgICAgIHRoaXMuX2NoZWNrVW5jaGVja1JvdyhrZXksIGZhbHNlLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgc2hyaW5rUm93KGtleSkge1xuICAgICAgICB0aGlzLl9leHBhbmRTaHJpbmtSb3coa2V5LCBmYWxzZSwgZmFsc2UpO1xuICAgIH1cblxuICAgIGV4cGFuZFJvdyhrZXkpIHtcbiAgICAgICAgdGhpcy5fZXhwYW5kU2hyaW5rUm93KGtleSwgdHJ1ZSwgZmFsc2UpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBicmllZiBnZXQgdGhlIGNoZWNrZWQgZGF0YVxuICAgICAqIEByZXR1cm4ge0FycmF5fVxuICAgICAqL1xuICAgIGdldENoZWNrZWREYXRhKCkge1xuICAgICAgICBjb25zdCByb3dLZXkgPSB0aGlzLmdldCgncm93S2V5Jyk7XG4gICAgICAgIGNvbnN0IGNoZWNrVHlwZSA9IHRoaXMuZ2V0KCdjaGVja1R5cGUnKTtcbiAgICAgICAgaWYgKGNoZWNrVHlwZSA9PT0gJ2NoZWNrYm94Jykge1xuICAgICAgICAgICAgY29uc3QgY2hlY2tlZEtleXMgPSB0aGlzLmdldCgnY2hlY2tlZEtleXMnKTtcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrZWRLZXlzTWFwID0ge307XG4gICAgICAgICAgICBjaGVja2VkS2V5cy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgY2hlY2tlZEtleXNNYXBbaXRlbV0gPSB0cnVlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5nZXQoJ2RhdGEnKS5maWx0ZXIoKHZhbHVlLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IHJvd0tleS5jYWxsKHRoaXMsIHZhbHVlLCBpbmRleCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNrZWRLZXlzTWFwW2tleV07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIGlmIChjaGVja1R5cGUgPT09ICdyYWRpbycpIHtcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrZWRLZXkgPSB0aGlzLmdldCgnY2hlY2tlZEtleScpO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCdkYXRhJykuZmlsdGVyKCh2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm93S2V5LmNhbGwodGhpcywgdmFsdWUsIGluZGV4KSA9PT0gY2hlY2tlZEtleTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2NhbGNIZWFkZXJQYWRkaW5nKCkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2ZpeEhlYWRlcicpKSB7XG4gICAgICAgICAgICBjb25zdCB0YWJsZUhlaWdodCA9IHRoaXMudGFibGUub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgY29uc3QgY29udGFpbmVySGVpZ2h0ID0gdGhpcy5zY3JvbGwub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgY29uc3QgaGVhZGVySGVpZ2h0ID0gdGhpcy5oZWFkZXIub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy5zZXQoJ19wYWRkaW5nJywgdGFibGVIZWlnaHQgLSBoZWFkZXJIZWlnaHQgPiBjb250YWluZXJIZWlnaHQgPyBzY3JvbGxCYXJXaWR0aCA6IDApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3VwZGF0ZURpc2FibGVkQW1vdW50KCkge1xuICAgICAgICBsZXQgZGlzYWJsZWRBbW91bnQgPSAwO1xuICAgICAgICBjb25zdCBkaXNhYmxlUm93ID0gdGhpcy5nZXQoJ2Rpc2FibGVSb3cnKTtcbiAgICAgICAgdGhpcy5nZXQoJ2RhdGEnKS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGRpc2FibGVSb3cuY2FsbCh0aGlzLCBpdGVtLCBpbmRleCkpIHtcbiAgICAgICAgICAgICAgICBkaXNhYmxlZEFtb3VudCsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXQoJ19kaXNhYmxlZEFtb3VudCcsIGRpc2FibGVkQW1vdW50KTtcbiAgICB9XG5cbiAgICBfdG9nZ2xlQ2hlY2tBbGwoYywgY2hlY2tlZCkge1xuICAgICAgICBpZiAoY2hlY2tlZCkge1xuICAgICAgICAgICAgdGhpcy5jaGVja0FsbCgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy51bmNoZWNrQWxsKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfY2xpY2tSb3codmFsdWUsIGluZGV4LCBrZXksIGUpIHtcbiAgICAgICAgLy8gaWYgaXMgZnJvbSBjaGVja2JveCBvciByYWRpbyB0aGVuIGRvIG5vdGhpbmdcbiAgICAgICAgaWYgKGUudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2lucHV0JykgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5nZXQoJ2Rpc2FibGVSb3cnKS5jYWxsKHRoaXMsIHZhbHVlLCBpbmRleCkpIHJldHVybjtcblxuICAgICAgICBpZiAodGhpcy5nZXQoJ3Jvd0NoZWNrYWJsZScpKSB7XG4gICAgICAgICAgICB0aGlzLl9jaGVja1VuY2hlY2tSb3coa2V5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmdldCgncm93RXhwYW5kYWJsZScpKSB7XG4gICAgICAgICAgICB0aGlzLl9leHBhbmRTaHJpbmtSb3coa2V5KTsgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfY2hlY2tVbmNoZWNrUm93KGtleSwgaXNDaGVjayA9IGZhbHNlLCBpc1RvZ2dsZSA9IHRydWUpIHtcbiAgICAgICAgY29uc3QgY2hlY2tUeXBlID0gdGhpcy5nZXQoJ2NoZWNrVHlwZScpO1xuICAgICAgICBpZiAoY2hlY2tUeXBlID09PSAnY2hlY2tib3gnKSB7XG4gICAgICAgICAgICBjb25zdCBjaGVja2VkS2V5cyA9IHRoaXMuZ2V0KCdjaGVja2VkS2V5cycpLnNsaWNlKDApO1xuICAgICAgICAgICAgY29uc3QgaSA9IGNoZWNrZWRLZXlzLmluZGV4T2Yoa2V5KTtcbiAgICAgICAgICAgIGlmICgoIWlzQ2hlY2sgfHwgaXNUb2dnbGUpICYmIGkgPiAtMSkge1xuICAgICAgICAgICAgICAgIGNoZWNrZWRLZXlzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgnY2hlY2tlZEtleXMnLCBjaGVja2VkS2V5cyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGlzQ2hlY2sgfHwgaXNUb2dnbGUpIHtcbiAgICAgICAgICAgICAgICBjaGVja2VkS2V5cy5wdXNoKGtleSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoJ2NoZWNrZWRLZXlzJywgY2hlY2tlZEtleXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoZWNrVHlwZSA9PT0gJ3JhZGlvJykge1xuICAgICAgICAgICAgdGhpcy5zZXQoJ2NoZWNrZWRLZXknLCBrZXkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX2V4cGFuZFNocmlua1JvdyhrZXksIGlzRXhwYW5kID0gZmFsc2UsIGlzVG9nZ2xlID0gdHJ1ZSkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuZ2V0KCdleHBhbmQnKSAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IGV4cGFuZGVkS2V5cyA9IHRoaXMuZ2V0KCdleHBhbmRlZEtleXMnKS5zbGljZSgwKTtcbiAgICAgICAgY29uc3QgaSA9IGV4cGFuZGVkS2V5cy5pbmRleE9mKGtleSk7XG4gICAgICAgIGlmICgoIWlzRXhwYW5kIHx8IGlzVG9nZ2xlKSAmJiBpID4gLTEpIHtcbiAgICAgICAgICAgIGV4cGFuZGVkS2V5cy5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgICB0aGlzLnNldCgnZXhwYW5kZWRLZXlzJywgZXhwYW5kZWRLZXlzKTtcbiAgICAgICAgfSBlbHNlIGlmIChpc0V4cGFuZCB8fCBpc1RvZ2dsZSkge1xuICAgICAgICAgICAgZXhwYW5kZWRLZXlzLnB1c2goa2V5KTtcbiAgICAgICAgICAgIHRoaXMuc2V0KCdleHBhbmRlZEtleXMnLCBleHBhbmRlZEtleXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX3NvcnQoa2V5LCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBzb3J0ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5nZXQoJ3NvcnQnKSk7XG4gICAgICAgIHNvcnQua2V5ID0ga2V5O1xuICAgICAgICBzb3J0LnR5cGUgPSBzb3J0LnR5cGUgPT09ICdkZXNjJyA/ICdhc2MnIDogJ2Rlc2MnO1xuICAgICAgICB0aGlzLnNldCgnc29ydCcsIHNvcnQpO1xuICAgIH1cblxuICAgIF9kcmFnU3RhcnQoZSkge1xuICAgICAgICAvLyBsZWZ0IGtleVxuICAgICAgICBpZiAoZS53aGljaCAhPT0gMSkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuX3Jlc2l6aW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyV2lkdGggPSB0aGlzLmVsZW1lbnQub2Zmc2V0V2lkdGg7XG4gICAgICAgIHRoaXMuX3ggPSBlLmNsaWVudFg7XG5cbiAgICAgICAgY29uc3QgY3VycmVudFRoID0gZS50YXJnZXQucGFyZW50Tm9kZTtcbiAgICAgICAgY29uc3QgcHJldlRoID0gY3VycmVudFRoLnByZXZpb3VzRWxlbWVudFNpYmxpbmc7XG5cbiAgICAgICAgdGhpcy5fY3VycmVudFRocyA9IFtjdXJyZW50VGhdO1xuICAgICAgICB0aGlzLl9wcmV2VGhzID0gW3ByZXZUaF07XG4gICAgICAgIHRoaXMuX3RhYmxlcyA9IFt0aGlzLnRhYmxlXTtcblxuICAgICAgICBpZiAodGhpcy5nZXQoJ2ZpeEhlYWRlcicpKSB7XG4gICAgICAgICAgICBjb25zdCB0aHMgPSB0aGlzLnRhYmxlLmNoaWxkcmVuWzBdLmdldEVsZW1lbnRzQnlUYWdOYW1lKCd0aCcpO1xuICAgICAgICAgICAgY29uc3QgZml4VGhzID0gY3VycmVudFRoLnBhcmVudE5vZGUuY2hpbGRyZW47XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHNsaWNlLmNhbGwoZml4VGhzKS5pbmRleE9mKGN1cnJlbnRUaCk7XG4gICAgICAgICAgICB0aGlzLl9jdXJyZW50VGhzLnB1c2godGhzW2luZGV4XSk7XG4gICAgICAgICAgICB0aGlzLl9wcmV2VGhzLnB1c2godGhzW2luZGV4IC0gMV0pO1xuICAgICAgICAgICAgLy8gdGhpcy5fdGFibGVzLnB1c2godGhpcy5oZWFkZXIuY2hpbGRyZW5bMF0pO1xuICAgICAgICAgICAgLy8gaWYgZml4SGVhZGVyIHdlIHNob3VsZCBjaGFuZ2UgdGhlIHdpZHRoIG9mIGhlYWRlciBhbmQgc2Nyb2xsXG4gICAgICAgICAgICB0aGlzLl90YWJsZXMgPSBbdGhpcy5oZWFkZXIsIHRoaXMuc2Nyb2xsXTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuX21vdmUpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5fZHJhZ0VuZCk7XG4gICAgfVxuXG4gICAgX21vdmUoZSkge1xuICAgICAgICBpZiAodGhpcy5fcmVzaXppbmcpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlbFggPSBlLmNsaWVudFggLSB0aGlzLl94O1xuICAgICAgICAgICAgY29uc3QgcHJldldpZHRoID0gdGhpcy5fcHJldlRoc1swXS5vZmZzZXRXaWR0aCArIGRlbFg7XG4gICAgICAgICAgICBjb25zdCB0YWJsZVdpZHRoID0gdGhpcy5fdGFibGVzWzBdLm9mZnNldFdpZHRoICsgZGVsWDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKHByZXZXaWR0aCA8IE1JTl9XSURUSCkgcmV0dXJuO1xuXG4gICAgICAgICAgICB0aGlzLl9wcmV2VGhzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgaXRlbS5zdHlsZS53aWR0aCA9IHByZXZXaWR0aCArICdweCc7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKHRoaXMuX2NvbnRhaW5lcldpZHRoID49IHRhYmxlV2lkdGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl90YWJsZXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zdHlsZS53aWR0aCA9ICcxMDAlJztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fdGFibGVzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uc3R5bGUud2lkdGggPSB0YWJsZVdpZHRoICsgJ3B4JztcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5feCA9IGUuY2xpZW50WDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9kcmFnRW5kKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Jlc2l6aW5nKSB7XG4gICAgICAgICAgICB0aGlzLl9yZXNpemluZyA9IGZhbHNlO1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5fbW92ZSk7XG4gICAgICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdGhpcy5fZHJhZ0VuZCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfZGVzdHJveSgpIHtcbiAgICAgICAgdGhpcy5fZHJhZ0VuZCgpO1xuICAgIH1cbn1cblxuZXhwb3J0IHtUYWJsZSwgQ29sdW1uIGFzIFRhYmxlQ29sdW1ufTtcblxuLy8gcmVmZXJlbmNlOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEzMzgyNTE2L2dldHRpbmctc2Nyb2xsLWJhci13aWR0aC11c2luZy1qYXZhc2NyaXB0XG5mdW5jdGlvbiBnZXRTY3JvbGxiYXJXaWR0aCgpIHtcbiAgICB2YXIgb3V0ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIG91dGVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xuICAgIG91dGVyLnN0eWxlLndpZHRoID0gXCIxMDBweFwiO1xuICAgIG91dGVyLnN0eWxlLm1zT3ZlcmZsb3dTdHlsZSA9IFwic2Nyb2xsYmFyXCI7IC8vIG5lZWRlZCBmb3IgV2luSlMgYXBwc1xuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChvdXRlcik7XG5cbiAgICB2YXIgd2lkdGhOb1Njcm9sbCA9IG91dGVyLm9mZnNldFdpZHRoO1xuICAgIC8vIGZvcmNlIHNjcm9sbGJhcnNcbiAgICBvdXRlci5zdHlsZS5vdmVyZmxvdyA9IFwic2Nyb2xsXCI7XG5cbiAgICAvLyBhZGQgaW5uZXJkaXZcbiAgICB2YXIgaW5uZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGlubmVyLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XG4gICAgb3V0ZXIuYXBwZW5kQ2hpbGQoaW5uZXIpO1xuXG4gICAgdmFyIHdpZHRoV2l0aFNjcm9sbCA9IGlubmVyLm9mZnNldFdpZHRoO1xuXG4gICAgLy8gcmVtb3ZlIGRpdnNcbiAgICBvdXRlci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG91dGVyKTtcblxuICAgIHJldHVybiB3aWR0aE5vU2Nyb2xsIC0gd2lkdGhXaXRoU2Nyb2xsO1xufVxuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3RhYmxlL2luZGV4LmpzIiwiaW1wb3J0IENoZWNrYm94IGZyb20gJy4uL2NoZWNrYm94JztpbXBvcnQgUmFkaW8gZnJvbSAnLi4vcmFkaW8nO2ltcG9ydCBSb3cgZnJvbSAnLi9yb3cnO2ltcG9ydCB7bm9ybWFsaXplfSBmcm9tICdpbnRhY3QnO2ltcG9ydCBDb2x1bW4gZnJvbSAnLi9jb2x1bW4nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuXG5cblxuXG5cblxuY29uc3Qge1xuICAgIGNoZWNrVHlwZSwgc2NoZW1lLCBjaGVja2VkS2V5cywgZGF0YSwgcm93S2V5LCBcbiAgICBjbGFzc05hbWUsIGZpeEhlYWRlciwgbm9EYXRhVGVtcGxhdGUsIGRpc2FibGVSb3csXG4gICAgZ3JvdXBzLCByZXNpemFibGUsIGV4cGFuZCwgZXhwYW5kZWRLZXlzLCB0eXBlLFxuICAgIHN0eWxlLCByb3dDbGFzc05hbWUsIGNoaWxkcmVuLCBzb3J0XG59ID0gc2VsZi5nZXQoKTtcblxubGV0IGNvbFNwYW4gPSBjaGVja1R5cGUgPT09ICdjaGVja2JveCcgfHwgY2hlY2tUeXBlID09PSAncmFkaW8nID8gMSA6IDA7XG5jb25zdCBleHBhbmRhYmxlID0gdHlwZW9mIGV4cGFuZCA9PT0gJ2Z1bmN0aW9uJztcbmNvbnN0IF9zY2hlbWUgPSB7fTtcblxuY29uc3QgdGhlYWRDcmVhdG9yID0gKCkgPT4gaCgndGhlYWQnLCBudWxsLCBoKCd0cicsIG51bGwsIFtmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hlY2tUeXBlID09PSAnY2hlY2tib3gnIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykgPyBoKCd0aCcsIG51bGwsIGgoQ2hlY2tib3gsIHsndmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5pc0NoZWNrQWxsKCkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fdG9nZ2xlQ2hlY2tBbGwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpc30pLCAnay10aC1jaGVjaycpIDogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoZWNrVHlwZSA9PT0gJ3JhZGlvJyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgndGgnLCBudWxsLCBudWxsLCAnay10aC1jaGVjaycpIDogdW5kZWZpbmVkLCAnXFxuICAgICAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbX191Lm1hcChzY2hlbWUsIChpdGVtLCBrZXkpID0+IHtcbiAgICAgICAgICAgIGNvbFNwYW4rKztcblxuICAgICAgICAgICAgaWYgKCFfX3UuaXNPYmplY3QoaXRlbSkpIHtcbiAgICAgICAgICAgICAgICBpdGVtID0ge3RpdGxlOiBpdGVtfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGgoQ29sdW1uLCB7Li4uZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2l0ZW0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2tleSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtrZXkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJyRwYXJlbnQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbaXRlbS5zb3J0YWJsZSA/IHNlbGYuX3NvcnQuYmluZChzZWxmLCBrZXksIGl0ZW0pIDogdW5kZWZpbmVkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1kcmFnU3RhcnQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fZHJhZ1N0YXJ0IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXN9KVxuICAgICAgICB9KSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnXFxuICAgICAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbLy8gZm9yIHVzaW5nIFRhYmxlQ29sdW1uIGFzIGNoaWxkcmVuXG4gICAgICAgICAgICBfX3UubWFwKGNoaWxkcmVuID8gKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSA6IGNoaWxkcmVuLCB2Tm9kZSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHZOb2RlLnRhZyA9PT0gQ29sdW1uKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbFNwYW4rKztcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvcHMgPSB7Li4udk5vZGUucHJvcHMsICRwYXJlbnQ6IHNlbGZ9O1xuICAgICAgICAgICAgICAgICAgICB2Tm9kZS5wcm9wcyA9IHByb3BzO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcHMua2V5ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9lKCdrZXkgZm9yIFRhYmxlQ29sdW1uIG11c3QgYmUgc3BlY2lmaWVkLicpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKC9eXFxkKyQvLnRlc3QocHJvcHMua2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYXZvaWQgZGlnaXRhbCBrZXlcbiAgICAgICAgICAgICAgICAgICAgICAgIF9lKCdkb25cXCd0IHVzZSBkaWdpdHMgYXMga2V5LicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF9zY2hlbWVbcHJvcHMua2V5XSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBwcm9wcy50aXRsZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlOiBwcm9wcy50ZW1wbGF0ZSB8fCBwcm9wcy5kZWZhdWx0LFxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdk5vZGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSkgXG4gICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdcXG4gICAgJ10pKVxuXG5jb25zdCB0aGVhZCA9IHRoZWFkQ3JlYXRvcigpO1xuXG5jb25zdCB0Ym9keSA9IGgoJ3Rib2R5JywgbnVsbCwgWydcXG4gICAgJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RhdGEgJiYgZGF0YS5sZW5ndGggPyBcbiAgICAgICAgX191Lm1hcChkYXRhLCAodmFsdWUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSByb3dLZXkuY2FsbChzZWxmLCB2YWx1ZSwgaW5kZXgpO1xuICAgICAgICAgICAgY29uc3QgZGlzYWJsZWQgPSBkaXNhYmxlUm93LmNhbGwoc2VsZiwgdmFsdWUsIGluZGV4KTtcbiAgICAgICAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IHJvd0NsYXNzTmFtZS5jYWxsKHNlbGYsIHZhbHVlLCBpbmRleCk7XG4gICAgICAgICAgICBjb25zdCB0ciA9IGgoUm93LCB7J2tleSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtrZXkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2NsaWNrUm93LmJpbmQoc2VsZiwgdmFsdWUsIGluZGV4LCBrZXkpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgICAgICdrLWRpc2FibGVkJzogZGlzYWJsZWQsXG4gICAgICAgICAgICAgICAgICAgIFtjbGFzc05hbWVdOiBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICAgICdrLWNoZWNrZWQnOiBzZWxmLmlzQ2hlY2tlZChrZXkpLCBcbiAgICAgICAgICAgICAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpLCAnZXYtJGRlc3Ryb3llZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLnNocmlua1Jvdy5iaW5kKHNlbGYsIGtleSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjaGVja1R5cGUgPT09ICdjaGVja2JveCcgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ3RkJywgbnVsbCwgaChDaGVja2JveCwgeyduYW1lJzogJ2stdGFibGUtY2hlY2tib3gnLCAndHJ1ZVZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2tleSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpcywgdmFsdWU6IF9nZXRNb2RlbChzZWxmLCAnY2hlY2tlZEtleXMnKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbihfX2MsIF9fbikgeyBfc2V0TW9kZWwoc2VsZiwgJ2NoZWNrZWRLZXlzJywgX19uKSB9fSkpIDogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NoZWNrVHlwZSA9PT0gJ3JhZGlvJyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgndGQnLCBudWxsLCBoKFJhZGlvLCB7J25hbWUnOiAnay10YWJsZS1yYWRpbycsICd0cnVlVmFsdWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBba2V5IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdkaXNhYmxlZCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkaXNhYmxlZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzLCB2YWx1ZTogX2dldE1vZGVsKHNlbGYsICdjaGVja2VkS2V5JyksICdldi0kY2hhbmdlOnZhbHVlJzogZnVuY3Rpb24oX19jLCBfX24pIHsgX3NldE1vZGVsKHNlbGYsICdjaGVja2VkS2V5JywgX19uKSB9fSkpIDogdW5kZWZpbmVkLCAnXFxuICAgICAgICAgICAgICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtfX3UubWFwKF9fdS5leHRlbmQoe30sIHNjaGVtZSwgX3NjaGVtZSksIChpdGVtLCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRkO1xuICAgICAgICAgICAgICAgICAgICBpZiAoX191LmlzT2JqZWN0KGl0ZW0pICYmIGl0ZW0udGVtcGxhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbS50ZW1wbGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gaXRlbS50ZW1wbGF0ZS5jYWxsKHNlbGYsIHZhbHVlLCBpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZm9yIEludGFjdC1WdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gbm9ybWFsaXplKHRkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gaXRlbS50ZW1wbGF0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZVtrZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRkID0gdmFsdWVba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBvYmogPSB2YWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXlzID0ga2V5LnNwbGl0KCcuJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaSA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAob2JqICE9IG51bGwgJiYgaSA8IGtleXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqID0gb2JqW2tleXNbaSsrXV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZCA9IChpICYmIGkgPT09IGtleXMubGVuZ3RoKSA/IG9iaiA6IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGgoJ3RkJywgeyd0aXRsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0eXBlb2YgdGQgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB0ZCA9PT0gJ251bWJlcicgPyBcbiAgICAgICAgICAgICAgICAgICAgICAgIHRkIDogdW5kZWZpbmVkIFxuICAgICAgICAgICAgICAgICAgICBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3R5cGVvZiB0ZCA9PT0gJ2Jvb2xlYW4nID8gU3RyaW5nKHRkKSA6IHRkIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpXG4gICAgICAgICAgICAgICAgfSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiAgICAgICAgICAgICddLCAnX2NvbnRleHQnOiB0aGlzfSk7XG5cbiAgICAgICAgICAgIGlmIChleHBhbmRhYmxlICYmIGV4cGFuZGVkS2V5cy5pbmRleE9mKGtleSkgPiAtMSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgICAgIHRyLFxuICAgICAgICAgICAgICAgICAgICBoKCd0cicsIG51bGwsIGgoJ3RkJywgeydjb2xzcGFuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2NvbFNwYW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtleHBhbmQuY2FsbChzZWxmLCB2YWx1ZSwgaW5kZXgpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpLCAnay1leHBhbmQnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYCR7a2V5fS5leHBhbmRgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pIDpcbiAgICAgICAgaCgndHInLCBudWxsLCBoKCd0ZCcsIHsnY29sc3Bhbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjb2xTcGFuIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbJ1xcbiAgICAgICAgICAgICAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbm9EYXRhVGVtcGxhdGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiAgICAgICAgICAgICddLCAnay1uby1kYXRhJyksIG51bGwsICd0YWJsZV9ub19kYXRhJylcbiAgICBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnXFxuJ10pXG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay10YWJsZS13cmFwcGVyJzogdHJ1ZSxcbiAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lLFxuICAgIFtgay0ke3R5cGV9YF06IHR5cGUgIT09ICdkZWZhdWx0Jyxcbn07XG5cbmNvbnN0IHRhYmxlID0gaCgndGFibGUnLCBudWxsLCBbJ1xcbiAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdGhlYWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdGJvZHkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiddLCAnay10YWJsZScsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtkb20gPT4gc2VsZi50YWJsZSA9IGRvbSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKVxuXG5yZXR1cm4gaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzdHlsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmaXhIZWFkZXIgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIHsnc3R5bGUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbe3BhZGRpbmdSaWdodDogc2VsZi5nZXQoJ19wYWRkaW5nJykgKyAncHgnfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgaCgndGFibGUnLCBudWxsLCBbJ1xcbiAgICAgICAgICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0aGVhZENyZWF0b3IoKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnXFxuICAgICAgICAnXSwgJ2stdGFibGUnKSwgJ2stZml4ZWQnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZG9tID0+IHNlbGYuaGVhZGVyID0gZG9tIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpIDogdW5kZWZpbmVkLCAnXFxuICAgICcsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmaXhIZWFkZXIgPyBcbiAgICAgICAgaCgnZGl2JywgeydzdHlsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0eXBlb2YgZml4SGVhZGVyID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgZml4SGVhZGVyID09PSAnc3RyaW5nJyA/XG4gICAgICAgICAgICAgICAge21heEhlaWdodDogYCR7Zml4SGVhZGVyfXB4YH0gOiB1bmRlZmluZWRcbiAgICAgICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdGFibGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2stc2Nyb2xsJywgbnVsbCwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RvbSA9PiBzZWxmLnNjcm9sbCA9IGRvbSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSA6XG4gICAgICAgIHRhYmxlXG4gICAgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiddLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90YWJsZS9pbmRleC52ZHQiLCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9yb3cudmR0JztcblxuLy8gZm9yIHRyICRkZXN0cm95ZWQgZXZlbnRcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYmxlUm93IGV4dGVuZHMgSW50YWN0IHtcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90YWJsZS9yb3cuanMiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbnJldHVybiBoKCd0cicsIHsuLi5mdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdjaGlsZHJlbicpIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90YWJsZS9yb3cudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IFRhYiBmcm9tICcuL3RhYic7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xuaW1wb3J0ICcuL2luZGV4LnN0eWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWJzIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBnZXQgdGVtcGxhdGUoKSB7IHJldHVybiB0ZW1wbGF0ZTsgfVxuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgX2NoYW5nZVRhYihpdGVtKSB7XG4gICAgICAgIHRoaXMuc2V0KCd2YWx1ZScsIGl0ZW0udmFsdWUpO1xuICAgICAgICBpZiAoaXRlbS50bykge1xuICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBpdGVtLnRvO1xuICAgICAgICB9IFxuICAgIH1cbn1cblxuZXhwb3J0IHtUYWJzLCBUYWJ9O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90YWJzL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy90YWJzL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vY29tcG9uZW50cy90YWJzL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiaW1wb3J0IFRhYiBmcm9tICcuL3RhYic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihvYmosIF9WZHQsIGJsb2NrcywgJGNhbGxlZSkge1xuXG5fVmR0IHx8IChfVmR0ID0gVmR0KTtcbm9iaiB8fCAob2JqID0ge30pO1xuYmxvY2tzIHx8IChibG9ja3MgPSB7fSk7XG52YXIgaCA9IF9WZHQubWlzcy5oLCBoYyA9IF9WZHQubWlzcy5oYywgaHUgPSBfVmR0Lm1pc3MuaHUsIHdpZGdldHMgPSB0aGlzICYmIHRoaXMud2lkZ2V0cyB8fCB7fSwgX2Jsb2NrcyA9IHt9LCBfX2Jsb2NrcyA9IHt9LFxuX191ID0gX1ZkdC51dGlscywgZXh0ZW5kID0gX191LmV4dGVuZCwgX2UgPSBfX3UuZXJyb3IsIF9jbGFzc05hbWUgPSBfX3UuY2xhc3NOYW1lLFxuX19vID0gX191Lk9wdGlvbnMsIF9nZXRNb2RlbCA9IF9fby5nZXRNb2RlbCwgX3NldE1vZGVsID0gX19vLnNldE1vZGVsLFxuX3NldENoZWNrYm94TW9kZWwgPSBfX3Uuc2V0Q2hlY2tib3hNb2RlbCwgX2RldGVjdENoZWNrYm94Q2hlY2tlZCA9IF9fdS5kZXRlY3RDaGVja2JveENoZWNrZWQsXG5fc2V0U2VsZWN0TW9kZWwgPSBfX3Uuc2V0U2VsZWN0TW9kZWwsXG5zZWxmID0gdGhpcy5kYXRhLCBzY29wZSA9IG9iaiwgQW5pbWF0ZSA9IHNlbGYgJiYgc2VsZi5BbmltYXRlLCBwYXJlbnQgPSAoJGNhbGxlZSB8fCB7fSkuX3N1cGVyXG5cblxuY29uc3Qge2NsYXNzTmFtZSwgZGF0YSwgdmFsdWUsIGNoaWxkcmVuLCBzdHlsZX0gPSBzZWxmLmdldCgpO1xuXG5jb25zdCBjbGFzc05hbWVPYmogPSB7XG4gICAgJ2stdGFicyc6IHRydWUsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbn07XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbX1ZkdC51dGlscy5tYXAoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RhdGEgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgZnVuY3Rpb24oaXRlbSwga2V5KSB7XG5yZXR1cm4gaCgnYScsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fY2hhbmdlVGFiLmJpbmQoc2VsZiwgaXRlbSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKX0sIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtpdGVtLnRleHQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbeydrLXRhYic6IHRydWUsICdrLWFjdGl2ZSc6IGl0ZW0udmFsdWUgPT09IHZhbHVlfSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSk7XG59LCB0aGlzKSwgJ1xcbiAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbX191Lm1hcChjaGlsZHJlbiA/IChBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkgOiBjaGlsZHJlbiwgdk5vZGUgPT4ge1xuICAgICAgICBpZiAodk5vZGUudGFnID09PSBUYWIpIHtcbiAgICAgICAgICAgIHZOb2RlLnByb3BzID0gey4uLnZOb2RlLnByb3BzLCBfdmFsdWU6IHZhbHVlLCBfcGFyZW50OiBzZWxmfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdk5vZGU7XG4gICAgfSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ1xcbiddLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90YWJzL2luZGV4LnZkdCIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL3RhYi52ZHQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWIgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxuICAgIGdldCB0ZW1wbGF0ZSgpIHsgcmV0dXJuIHRlbXBsYXRlOyB9XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB0bzogdW5kZWZpbmVkLFxuXG4gICAgICAgICAgICAvLyBwYXNzZWQgYnkgcGFyZW50XG4gICAgICAgICAgICBfdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIF9wYXJlbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9pc0FjdGl2ZSgpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldCgndmFsdWUnKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgPT09IHRoaXMuZ2V0KCdfdmFsdWUnKTtcbiAgICB9XG5cbiAgICBfY2hhbmdlVGFiKGUpIHtcbiAgICAgICAgdGhpcy5nZXQoJ19wYXJlbnQnKS5fY2hhbmdlVGFiKHRoaXMuZ2V0KCkpO1xuICAgIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvdGFicy90YWIuanMiLCJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcbmNvbnN0IHt2YWx1ZSwgY2hpbGRyZW4sIF92YWx1ZX0gPSBzZWxmLmdldCgpO1xuXG5yZXR1cm4gaCgnYScsIHsnZXYtY2xpY2snOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5fY2hhbmdlVGFiIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbc2VsZi5nZXQoJ2NoaWxkcmVuJykgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbe1xuICAgICAgICAnay10YWInOiB0cnVlLCBcbiAgICAgICAgJ2stYWN0aXZlJzogdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSA9PT0gX3ZhbHVlLCBcbiAgICB9IF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcykpKVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvdGFicy90YWIudmR0IiwiLyoqXG4gKiBDcmVhdGVkIGJ5IHN5bHZpYSBvbiAyMDE3LzEwLzMxLlxuICovXG5pbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XG5pbXBvcnQgRHJvcGRvd24gZnJvbSAnLi4vZHJvcGRvd24vZHJvcGRvd24nO1xuaW1wb3J0IHBvc2l0aW9uIGZyb20gJy4uL21vdmVXcmFwcGVyL3Bvc2l0aW9uJ1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCAnLi9pbmRleC5zdHlsJ1xuXG5jbGFzcyBUb29sdGlwIGV4dGVuZHMgRHJvcGRvd24geyAgfVxuXG5jbGFzcyBUb29sdGlwQ29udGVudCBleHRlbmRzIEludGFjdCB7XG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XG5cbiAgICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgICAgICBzaG93OiBCb29sZWFuLFxuICAgICAgICBjYW5Ib3ZlcjogQm9vbGVhbixcbiAgICAgICAgc2hvd0Fycm93OiBCb29sZWFuLFxuICAgIH07XG5cbiAgICBkZWZhdWx0cygpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNob3c6IGZhbHNlLFxuICAgICAgICAgICAgdHJpZ2dlcjogJ2hvdmVyJyxcbiAgICAgICAgICAgIGNhbkhvdmVyOiBmYWxzZSxcbiAgICAgICAgICAgIHNob3dBcnJvdzogdHJ1ZSxcbiAgICAgICAgICAgIHBvc2l0b246IHt9LFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogJ2ZhZGUnLFxuXG4gICAgICAgICAgICBfZmVlZGJhY2s6IHt9LFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIF9pbml0KCkge1xuICAgICAgICB0aGlzLm9uKCckY2hhbmdlOnNob3cnLCAoYywgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIHRoaXMudHJpZ2dlcih2YWx1ZSA/ICdiZWZvcmVTaG93JyA6ICdiZWZvcmVIaWRlJywgdGhpcyk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMub24oJyRjaGFuZ2VkOnNob3cnLCAoYywgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FkZERvY3VtZW50Q2xpY2soKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgdGhpcy50cmlnZ2VyKCdzaG93JywgdGhpcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlbW92ZURvY3VtZW50Q2xpY2soKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXIoJ2hpZGUnLCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fb25Eb2N1bWVudENsaWNrID0gdGhpcy5fb25Eb2N1bWVudENsaWNrLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgX21vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ3Nob3cnKSkge1xuICAgICAgICAgICAgdGhpcy5fYWRkRG9jdW1lbnRDbGljaygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2hvdygpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnNldCgnc2hvdycsIHRydWUpOyBcbiAgICB9XG5cbiAgICBoaWRlKGltbWVkaWF0ZWx5KSB7XG4gICAgICAgIGlmICghaW1tZWRpYXRlbHkgJiYgdGhpcy5nZXQoJ2NhbkhvdmVyJykpIHtcbiAgICAgICAgICAgIHRoaXMudGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgnc2hvdycsIGZhbHNlKTtcbiAgICAgICAgICAgIH0sIDIwMCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNldCgnc2hvdycsIGZhbHNlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHBvc2l0aW9uKCkge1xuICAgICAgICBsZXQgcG9zID0gdGhpcy5nZXQoJ3Bvc2l0aW9uJyk7XG4gICAgICAgIGlmICh0eXBlb2YgcG9zID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgc3dpdGNoIChwb3MpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdsZWZ0JzpcbiAgICAgICAgICAgICAgICAgICAgcG9zID0ge215OiAncmlnaHQtMTAgY2VudGVyJywgYXQ6ICdsZWZ0IGNlbnRlcid9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlICdib3R0b20nOlxuICAgICAgICAgICAgICAgICAgICBwb3MgPSB7bXk6ICdjZW50ZXIgdG9wKzEwJywgYXQ6ICdjZW50ZXIgYm90dG9tJ307XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgICAgICAgICAgICAgICAgcG9zID0ge215OiAnbGVmdCsxMCBjZW50ZXInLCBhdDogJ3JpZ2h0IGNlbnRlcid9O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBwb3MgPSB7bXk6ICdjZW50ZXIgYm90dG9tLTEwJywgYXQ6ICdjZW50ZXIgdG9wJ307XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLnJlZnMuY29udGVudC5lbGVtZW50O1xuICAgICAgICBwb3NpdGlvbihlbGVtZW50LCB7XG4gICAgICAgICAgICBteTogJ2NlbnRlciBib3R0b20tMTAnLCBcbiAgICAgICAgICAgIGF0OiAnY2VudGVyIHRvcCcsIFxuICAgICAgICAgICAgb2Y6IHRoaXMuZHJvcGRvd24uZWxlbWVudCxcbiAgICAgICAgICAgIHVzaW5nOiAoZmVlZGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldCgnX2ZlZWRiYWNrJywgZmVlZGJhY2spO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC4uLnBvc1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfYWRkRG9jdW1lbnRDbGljaygpIHtcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCd0cmlnZ2VyJykgPT09ICdjbGljaycpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25Eb2N1bWVudENsaWNrKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9yZW1vdmVEb2N1bWVudENsaWNrKCkge1xuICAgICAgICBpZiAodGhpcy5nZXQoJ3RyaWdnZXInKSA9PT0gJ2NsaWNrJykge1xuICAgICAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9vbkRvY3VtZW50Q2xpY2spO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgX29uRG9jdW1lbnRDbGljayhlKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGUudGFyZ2V0O1xuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5yZWZzLmNvbnRlbnQuZWxlbWVudDtcblxuICAgICAgICBpZiAoZWxlbWVudCA9PT0gdGFyZ2V0IHx8IGVsZW1lbnQuY29udGFpbnModGFyZ2V0KSkgcmV0dXJuO1xuICAgICAgICBpZiAoZS5fZHJvcGRvd24pIHJldHVybjsgXG5cbiAgICAgICAgdGhpcy5oaWRlKHRydWUpO1xuICAgIH1cblxuICAgIF9kZXN0cm95KCkge1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gICAgICAgIHRoaXMuX3JlbW92ZURvY3VtZW50Q2xpY2soKTtcbiAgICB9XG59XG5cbmNvbnN0IGggPSBJbnRhY3QuVmR0Lm1pc3MuaDtcblxuZnVuY3Rpb24gV3JhcHBlcihwcm9wcywgaW5WdWUpIHtcbiAgICBsZXQge2NoaWxkcmVuLCBjb250ZW50LCBfYmxvY2tzLCBfY29udGV4dCwgcmVmLCAuLi5yZXN0fSA9IHByb3BzO1xuXG4gICAgaWYgKF9ibG9ja3MgJiYgX2Jsb2Nrcy5jb250ZW50KSB7XG4gICAgICAgIGNvbnRlbnQgPSBfYmxvY2tzLmNvbnRlbnQuY2FsbChfY29udGV4dCk7XG4gICAgfVxuXG4gICAgY29uc3QgY29udGVudFZOb2RlID0gaChUb29sdGlwQ29udGVudCwge1xuICAgICAgICBfY29udGV4dCxcbiAgICAgICAgY2hpbGRyZW46IGNvbnRlbnQsXG4gICAgICAgIHJlZixcbiAgICAgICAgLi4ucmVzdFxuICAgIH0pO1xuXG4gICAgcmV0dXJuICFpblZ1ZSA/IFxuICAgICAgICBbXG4gICAgICAgICAgICBoKFRvb2x0aXAsIHtcbiAgICAgICAgICAgICAgICBfY29udGV4dCxcbiAgICAgICAgICAgICAgICBjaGlsZHJlbixcbiAgICAgICAgICAgICAgICBtZW51OiBjb250ZW50Vk5vZGUsXG4gICAgICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdrLXRvb2x0aXAnLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBjb250ZW50Vk5vZGVcbiAgICAgICAgXSA6XG4gICAgICAgIGgoVnVlV3JhcHBlciwge1xuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICBoKFRvb2x0aXAsIHtcbiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBjaGlsZHJlbixcbiAgICAgICAgICAgICAgICAgICAgbWVudTogY29udGVudFZOb2RlLFxuICAgICAgICAgICAgICAgICAgICAuLi4ocHJvcHMudHJpZ2dlciA/IHt0cmlnZ2VyOiBwcm9wcy50cmlnZ2VyfSA6IHt9KSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBjb250ZW50Vk5vZGVcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAuLi5yZXN0XG4gICAgICAgIH0pO1xufVxuXG4vLyBmb3IgdnVlIEJvb2xlYW4gY2FzdFxuV3JhcHBlci5wcm9wVHlwZXMgPSB7XG4gICAgY2FuSG92ZXI6IEJvb2xlYW4sXG59O1xuXG5jbGFzcyBWdWVXcmFwcGVyIGV4dGVuZHMgSW50YWN0IHtcbiAgICB0ZW1wbGF0ZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHtjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5yZXN0fSA9IGRhdGEuZ2V0KCk7XG4gICAgICAgIHJldHVybiBoKCdkaXYnLCByZXN0LCBjaGlsZHJlbiwgSW50YWN0LlZkdC51dGlscy5jbGFzc05hbWUoe1xuICAgICAgICAgICAgJ2stdG9vbHRpcCc6IHRydWUsXG4gICAgICAgICAgICBbY2xhc3NOYW1lXTogY2xhc3NOYW1lLFxuICAgICAgICB9KSk7XG4gICAgfVxufVxuXG5jb25zdCBfV3JhcHBlciA9IEludGFjdC5mdW5jdGlvbmFsV3JhcHBlciA/XG4gICAgSW50YWN0LmZ1bmN0aW9uYWxXcmFwcGVyKFdyYXBwZXIpIDogV3JhcHBlcjtcblxuZXhwb3J0IGRlZmF1bHQgX1dyYXBwZXI7XG5cbmV4cG9ydCB7X1dyYXBwZXIgYXMgVG9vbHRpcH07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3Rvb2x0aXAvaW5kZXguanMiLCIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIFByZXBhcmUgY3NzVHJhbnNmb3JtYXRpb25cbnZhciB0cmFuc2Zvcm07XG5cbnZhciBvcHRpb25zID0ge31cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0aWYoIWNvbnRlbnQubG9jYWxzKSB7XG5cdFx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiKTtcblx0XHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHRcdH0pO1xuXHR9XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9jb21wb25lbnRzL3Rvb2x0aXAvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9jb21wb25lbnRzL3Rvb2x0aXAvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgTW92ZVdyYXBwZXIgZnJvbSAnLi4vbW92ZVdyYXBwZXInO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuXG5cbmNvbnN0IHtcbiAgICBjaGlsZHJlbiwgc2hvdywgdHJpZ2dlciwgc2hvd0Fycm93LFxuICAgIGNhbkhvdmVyLCBjbGFzc05hbWUsIF9mZWVkYmFjaywgdHJhbnNpdGlvblxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGV2ZW50cyA9IHt9O1xuaWYgKGNhbkhvdmVyICYmIHRyaWdnZXIgPT09ICdob3ZlcicpIHtcbiAgICBldmVudHNbJ2V2LW1vdXNlZW50ZXInXSA9IHNlbGYuc2hvdztcbiAgICBldmVudHNbJ2V2LW1vdXNlbGVhdmUnXSA9IHNlbGYuaGlkZS5iaW5kKHNlbGYsIGZhbHNlKTtcbn1cblxuY29uc3QgY2xhc3NOYW1lT2JqID0ge1xuICAgIFwiay10b29sdGlwLWNvbnRlbnRcIjogdHJ1ZSwgXG4gICAgJ2stY2Fubm90LWhvdmVyJzogdHJpZ2dlciA9PT0gJ2hvdmVyJyAmJiAhY2FuSG92ZXIsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbn07XG5cbnJldHVybiBoKE1vdmVXcmFwcGVyLCB7J2NoaWxkcmVuJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3Nob3cgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoQW5pbWF0ZSwgeydjbGFzc05hbWUnOiBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSksICdhOnRyYW5zaXRpb24nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJhbnNpdGlvbiBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAuLi5mdW5jdGlvbigpIHt0cnkge3JldHVybiBbZXZlbnRzIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdhOmRlbGF5RGVzdHJveSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtmYWxzZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBbZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3Nob3dBcnJvdyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaCgnaScsIG51bGwsIG51bGwsIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3tcbiAgICAgICAgICAgIFwiay1hcnJvd1wiOiB0cnVlLFxuICAgICAgICAgICAgW2BrLSR7X2ZlZWRiYWNrLnZlcnRpY2FsfWBdOiBfZmVlZGJhY2sudmVydGljYWwsXG4gICAgICAgICAgICBbYGstJHtfZmVlZGJhY2suaG9yaXpvbnRhbH1gXTogX2ZlZWRiYWNrLmhvcml6b250YWwsXG4gICAgICAgIH0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpIDogdW5kZWZpbmVkLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbY2hpbGRyZW4gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKV0sICdfY29udGV4dCc6IHRoaXN9LCBudWxsLCBudWxsLCBudWxsLCBmdW5jdGlvbihpKSB7d2lkZ2V0c1snY29udGVudCddID0gaX0pIDogdW5kZWZpbmVkLCAnX2NvbnRleHQnOiB0aGlzfSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3Rvb2x0aXAvaW5kZXgudmR0IiwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcbmltcG9ydCAnLi9pbmRleC5zdHlsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhbnNmZXIgZXh0ZW5kcyBJbnRhY3Qge1xuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xuXG4gICAgZGVmYXVsdHMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiBbXSxcbiAgICAgICAgICAgIHZhbHVlOiBbXSxcbiAgICAgICAgICAgIGxlZnRDaGVja2VkOiBbXSxcbiAgICAgICAgICAgIHJpZ2h0Q2hlY2tlZDogW10sXG4gICAgICAgICAgICBmaWx0ZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGZpbHRlcihkYXRhLCBrZXl3b3Jkcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmxhYmVsLmluY2x1ZGVzKGtleXdvcmRzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYWJlbChkYXRhLCBpbmRleCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmxhYmVsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAn6K+36L6T5YWlJyxcbiAgICAgICAgICAgIGxlZnRUaXRsZTogJ+ivt+mAieaLqScsXG4gICAgICAgICAgICByaWdodFRpdGxlOiAn5bey6YCJ5oupJyxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBfbW91bnQoKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9vbktleWRvd24pO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMuX29uS2V5dXApO1xuICAgIH1cblxuICAgIF9vbktleWRvd24oZSkge1xuICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAxNikge1xuICAgICAgICAgICAgdGhpcy5zaGlmdEtleSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfb25LZXl1cChlKSB7XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDE2KSB7XG4gICAgICAgICAgICB0aGlzLnNoaWZ0S2V5ID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfYWRkKCkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0KCd2YWx1ZScpLmNvbmNhdCh0aGlzLmdldCgnbGVmdENoZWNrZWQnKSk7XG4gICAgICAgIHRoaXMuc2V0KHtcbiAgICAgICAgICAgIGxlZnRDaGVja2VkOiBbXSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgX3JlbW92ZSgpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldCgndmFsdWUnKS5zbGljZSgwKTtcbiAgICAgICAgdGhpcy5nZXQoJ3JpZ2h0Q2hlY2tlZCcpLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHZhbHVlLmluZGV4T2YoaXRlbSk7XG4gICAgICAgICAgICB2YWx1ZS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXQoe1xuICAgICAgICAgICAgcmlnaHRDaGVja2VkOiBbXSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgX29uQ2hlY2tib3hDaGFuZ2UodHlwZSwgaW5kZXgsIGUpIHtcbiAgICAgICAgY29uc3Qga2V5d29yZHMgPSB0aGlzLmdldChgJHt0eXBlfUtleXdvcmRzYCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSB0eXBlID09PSAnbGVmdCcgPyB0aGlzLmdldCgnZGF0YScpIDogdGhpcy5nZXQoJ3ZhbHVlJyk7XG4gICAgICAgIGNvbnN0IGZpbHRlciA9IHRoaXMuZ2V0KCdmaWx0ZXInKTtcblxuICAgICAgICBpZiAodGhpcy5zdGFydEluZGV4ID09PSB1bmRlZmluZWQgfHwgIXRoaXMuc2hpZnRLZXkpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRJbmRleCA9IGluZGV4O1xuICAgICAgICAgICAgdGhpcy5jaGVja2VkID0gZS50YXJnZXQuY2hlY2tlZDtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICBsZXQgdmFsdWVzID0gZGF0YTtcbiAgICAgICAgICAgIGlmICh0aGlzLmdldCgnZmlsdGVyYWJsZScpICYmIGtleXdvcmRzKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzID0gZGF0YS5maWx0ZXIoaXRlbSA9PiBmaWx0ZXIoaXRlbSwga2V5d29yZHMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA+IHRoaXMuc3RhcnRJbmRleCkge1xuICAgICAgICAgICAgICAgIHZhbHVlcyA9IHZhbHVlcy5zbGljZSh0aGlzLnN0YXJ0SW5kZXgsIGluZGV4ICsgMSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGluZGV4IDwgdGhpcy5zdGFydEluZGV4KSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzID0gdmFsdWVzLnNsaWNlKGluZGV4LCB0aGlzLnN0YXJ0SW5kZXggKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhbHVlcyA9IHZhbHVlcy5maWx0ZXIoaXRlbSA9PiAhaXRlbS5kaXNhYmxlZCk7XG4gICAgICAgICAgICBjb25zdCBjaGVja2VkVmFsdWVzID0gdGhpcy5nZXQoYCR7dHlwZX1DaGVja2VkYCk7XG4gICAgICAgICAgICBjb25zdCBfdmFsdWVzID0gW107XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrZWQpIHtcbiAgICAgICAgICAgICAgICBjaGVja2VkVmFsdWVzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghfnZhbHVlcy5pbmRleE9mKGl0ZW0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdmFsdWVzLnB1c2goaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldChgJHt0eXBlfUNoZWNrZWRgLCB2YWx1ZXMuY29uY2F0KF92YWx1ZXMpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2hlY2tlZFZhbHVlcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIX52YWx1ZXMuaW5kZXhPZihpdGVtKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3ZhbHVlcy5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXQoYCR7dHlwZX1DaGVja2VkYCwgX3ZhbHVlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfb25DbGlja0xhYmVsKGUpIHtcbiAgICAgICAgaWYgKGUuc2hpZnRLZXkgJiYgZS50YXJnZXQudGFnTmFtZSAhPT0gJ0lOUFVUJykge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZS50YXJnZXQuY2xpY2soKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIF9kZXN0cm95KCkge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fb25LZXlkb3duKTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLl9vbktleXVwKTtcbiAgICB9XG59XG5cbmV4cG9ydCB7VHJhbnNmZXJ9XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb21wb25lbnRzL3RyYW5zZmVyL2luZGV4LmpzIiwiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMSEuLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTItMiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTMhLi9pbmRleC5zdHlsXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS0yLTEhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS0yLTIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0zIS4vaW5kZXguc3R5bFwiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMi0xIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tMi0yIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTItMyEuL2luZGV4LnN0eWxcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vY29tcG9uZW50cy90cmFuc2Zlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL2NvbXBvbmVudHMvdHJhbnNmZXIvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJpbXBvcnQgQnV0dG9uIGZyb20gJy4uL2J1dHRvbic7aW1wb3J0IENoZWNrYm94IGZyb20gJy4uL2NoZWNrYm94JztpbXBvcnQgSW5wdXQgZnJvbSAnLi4vaW5wdXQnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ob2JqLCBfVmR0LCBibG9ja3MsICRjYWxsZWUpIHtcblxuX1ZkdCB8fCAoX1ZkdCA9IFZkdCk7XG5vYmogfHwgKG9iaiA9IHt9KTtcbmJsb2NrcyB8fCAoYmxvY2tzID0ge30pO1xudmFyIGggPSBfVmR0Lm1pc3MuaCwgaGMgPSBfVmR0Lm1pc3MuaGMsIGh1ID0gX1ZkdC5taXNzLmh1LCB3aWRnZXRzID0gdGhpcyAmJiB0aGlzLndpZGdldHMgfHwge30sIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSB7fSxcbl9fdSA9IF9WZHQudXRpbHMsIGV4dGVuZCA9IF9fdS5leHRlbmQsIF9lID0gX191LmVycm9yLCBfY2xhc3NOYW1lID0gX191LmNsYXNzTmFtZSxcbl9fbyA9IF9fdS5PcHRpb25zLCBfZ2V0TW9kZWwgPSBfX28uZ2V0TW9kZWwsIF9zZXRNb2RlbCA9IF9fby5zZXRNb2RlbCxcbl9zZXRDaGVja2JveE1vZGVsID0gX191LnNldENoZWNrYm94TW9kZWwsIF9kZXRlY3RDaGVja2JveENoZWNrZWQgPSBfX3UuZGV0ZWN0Q2hlY2tib3hDaGVja2VkLFxuX3NldFNlbGVjdE1vZGVsID0gX191LnNldFNlbGVjdE1vZGVsLFxuc2VsZiA9IHRoaXMuZGF0YSwgc2NvcGUgPSBvYmosIEFuaW1hdGUgPSBzZWxmICYmIHNlbGYuQW5pbWF0ZSwgcGFyZW50ID0gKCRjYWxsZWUgfHwge30pLl9zdXBlclxuXG5cblxuXG5jb25zdCB7XG4gICAgZGF0YSwgY2xhc3NOYW1lLCBzdHlsZSwgdmFsdWUsIFxuICAgIGxlZnRDaGVja2VkLCByaWdodENoZWNrZWQsIGZpbHRlcmFibGUsXG4gICAgZmlsdGVyLCBsYWJlbCwgcGxhY2Vob2xkZXIsIGxlZnRUaXRsZSwgcmlnaHRUaXRsZVxufSA9IHNlbGYuZ2V0KCk7XG5cbmNvbnN0IGNsYXNzTmFtZU9iaiA9IHtcbiAgICAnay10cmFuc2Zlcic6IHRydWUsXG4gICAgW2NsYXNzTmFtZV06IGNsYXNzTmFtZSxcbn07XG5cbmNvbnN0IFBhbmVsID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IGtleXdvcmRzID0gc2VsZi5nZXQoYCR7cHJvcHMubW9kZWx9S2V5d29yZHNgKTtcbiAgICByZXR1cm4gaCgnZGl2JywgbnVsbCwgW2goJ2RpdicsIG51bGwsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtwcm9wcy50aXRsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnay10aXRsZScpLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZmlsdGVyYWJsZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpID8gaChJbnB1dCwgeydwbGFjZWhvbGRlcic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtwbGFjZWhvbGRlciBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2xlYXJhYmxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZmx1aWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdHJ1ZV1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdjaGlsZHJlbic6IG51bGwsICdfY29udGV4dCc6IHRoaXMsICdfYmxvY2tzJzogZnVuY3Rpb24oYmxvY2tzKSB7XG4gICAgdmFyIF9ibG9ja3MgPSB7fSwgX19ibG9ja3MgPSBleHRlbmQoe30sIGJsb2Nrcyk7XG4gICAgcmV0dXJuIChfYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge3JldHVybiBoKEJ1dHRvbiwgeydpY29uJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAndHlwZSc6ICdub25lJywgJ2NoaWxkcmVuJzogaCgnaScsIG51bGwsIG51bGwsICdpb24taW9zLXNlYXJjaCcpLCAnX2NvbnRleHQnOiB0aGlzfSk7fSkgJiYgKF9fYmxvY2tzLmFwcGVuZCA9IGZ1bmN0aW9uKHBhcmVudCkge1xudmFyIHNlbGYgPSB0aGlzO1xucmV0dXJuIGJsb2Nrcy5hcHBlbmQgPyBibG9ja3MuYXBwZW5kLmNhbGwodGhpcywgZnVuY3Rpb24oKSB7XG5yZXR1cm4gX2Jsb2Nrcy5hcHBlbmQuY2FsbChzZWxmLCBwYXJlbnQpO1xufSkgOiBfYmxvY2tzLmFwcGVuZC5jYWxsKHRoaXMsIHBhcmVudCk7XG59KSAmJiBfX2Jsb2Nrcztcbn0uY2FsbCh0aGlzLCB7fSksIHZhbHVlOiBfZ2V0TW9kZWwoc2VsZiwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Ake3Byb3BzLm1vZGVsfUtleXdvcmRzYCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbihfX2MsIF9fbikgeyBfc2V0TW9kZWwoc2VsZiwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Ake3Byb3BzLm1vZGVsfUtleXdvcmRzYCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBfX24pIH19KSA6IHVuZGVmaW5lZCwgaChBbmltYXRlLCB7J2NsYXNzTmFtZSc6ICdrLWxpc3QnLCAnY2hpbGRyZW4nOiBfVmR0LnV0aWxzLm1hcChmdW5jdGlvbigpIHt0cnkge3JldHVybiBba2V5d29yZHMgPyBcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMuZGF0YS5maWx0ZXIoaXRlbSA9PiBmaWx0ZXIoaXRlbSwga2V5d29yZHMpKSA6IFxuICAgICAgICAgICAgICAgICAgICBwcm9wcy5kYXRhIFxuICAgICAgICAgICAgICAgIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbnJldHVybiBoKEFuaW1hdGUsIHsnY2xhc3NOYW1lJzogX2NsYXNzTmFtZShmdW5jdGlvbigpIHt0cnkge3JldHVybiBbe1wiay1pdGVtXCI6IHRydWUsIFwiay1kaXNhYmxlZFwiOiB2YWx1ZS5kaXNhYmxlZH0gXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSksICdrZXknOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2E6dHJhbnNpdGlvbic6ICdmYWRlJywgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uQ2xpY2tMYWJlbCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKENoZWNrYm94LCB7J25hbWUnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbcHJvcHMubW9kZWwgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3RydWVWYWx1ZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt2YWx1ZSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnZGlzYWJsZWQnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUuZGlzYWJsZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX29uQ2hlY2tib3hDaGFuZ2UuYmluZChzZWxmLCBwcm9wcy5tb2RlbCwga2V5KSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbbGFiZWwuY2FsbChzZWxmLCB2YWx1ZSwga2V5LCBwcm9wcy5tb2RlbCkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ19jb250ZXh0JzogdGhpcywgdmFsdWU6IF9nZXRNb2RlbChzZWxmLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbYCR7cHJvcHMubW9kZWx9Q2hlY2tlZGAgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSksICdldi0kY2hhbmdlOnZhbHVlJzogZnVuY3Rpb24oX19jLCBfX24pIHsgX3NldE1vZGVsKHNlbGYsIGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtgJHtwcm9wcy5tb2RlbH1DaGVja2VkYCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBfX24pIH19KSwgJ19jb250ZXh0JzogdGhpc30pO1xufSwgdGhpcyksICdfY29udGV4dCc6IHRoaXN9KV0sICdrLXBhbmVsJylcbn07XG5cbnJldHVybiBoKCdkaXYnLCB7J3N0eWxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3N0eWxlIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyl9LCBbaChQYW5lbCwgeydkYXRhJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2RhdGEuZmlsdGVyKGl0ZW0gPT4gIX52YWx1ZS5pbmRleE9mKGl0ZW0pKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnbW9kZWwnOiAnbGVmdCcsICd0aXRsZSc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtsZWZ0VGl0bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogbnVsbCwgJ19jb250ZXh0JzogdGhpc30pLCBoKCdkaXYnLCBudWxsLCBbaChCdXR0b24sIHsnY2lyY2xlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnaWNvbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gWyFyaWdodENoZWNrZWQubGVuZ3RoIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdldi1jbGljayc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLl9yZW1vdmUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2NoaWxkcmVuJzogaCgnaScsIG51bGwsIG51bGwsICdrLWljb24gaW9uLWlvcy1hcnJvdy1sZWZ0JyksICdfY29udGV4dCc6IHRoaXN9KSwgaChCdXR0b24sIHsnY2lyY2xlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3RydWVdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnaWNvbic6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFt0cnVlXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2Rpc2FibGVkJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gWyFsZWZ0Q2hlY2tlZC5sZW5ndGggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ2V2LWNsaWNrJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuX2FkZCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBoKCdpJywgbnVsbCwgbnVsbCwgJ2staWNvbiBpb24taW9zLWFycm93LXJpZ2h0JyksICdfY29udGV4dCc6IHRoaXN9KV0sICdrLWFycm93cycpLCBoKFBhbmVsLCB7J2RhdGEnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbZGF0YS5maWx0ZXIoaXRlbSA9PiB+dmFsdWUuaW5kZXhPZihpdGVtKSkgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ21vZGVsJzogJ3JpZ2h0JywgJ3RpdGxlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2Ake3JpZ2h0VGl0bGV9ICgke3ZhbHVlLmxlbmd0aH0pYCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzfSldLCBfY2xhc3NOYW1lKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtjbGFzc05hbWVPYmogXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vY29tcG9uZW50cy90cmFuc2Zlci9pbmRleC52ZHQiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLWJyZWFkY3J1bWIge1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG4uay1icmVhZGNydW1iIC5rLWl0ZW0ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG4uay1icmVhZGNydW1iIC5rLWl0ZW06bGFzdC1vZi10eXBlIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cXG4uay1icmVhZGNydW1iIC5rLWl0ZW0tbGluayB7XFxuICBjb2xvcjogIzU5NTk1OTtcXG59XFxuLmstYnJlYWRjcnVtYiBhLmstaXRlbS1saW5rOmhvdmVyIHtcXG4gIGNvbG9yOiAjMTk1ZDlmO1xcbn1cXG4uay1icmVhZGNydW1iIC5rLXNlcGFyYXRvciB7XFxuICBtYXJnaW46IDAgMC41NzE0Mjg1NzE0Mjg1NzFyZW07XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9icmVhZGNydW1iL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1jaGVja2JveCB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5rLWNoZWNrYm94IC5rLXdyYXBwZXIge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDFyZW07XFxuICBoZWlnaHQ6IDFyZW07XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgYm9yZGVyOiAxcHggc29saWQgIzk3OTc5NztcXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2UtaW4tb3V0O1xcbn1cXG4uay1jaGVja2JveCAuay13cmFwcGVyOmJlZm9yZSB7XFxuICBjb250ZW50OiBcXFwiXFxcIjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDAuMjg1NzE0Mjg1NzE0Mjg2cmVtO1xcbiAgaGVpZ2h0OiAwLjU3MTQyODU3MTQyODU3MXJlbTtcXG4gIHRvcDogMC4wNzE0Mjg1NzE0Mjg1NzFyZW07XFxuICBsZWZ0OiAwLjI4NTcxNDI4NTcxNDI4NnJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XFxuICBib3JkZXItdG9wOiAwO1xcbiAgYm9yZGVyLWxlZnQ6IDA7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZSgwKTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDApO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGUoMCk7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcXG59XFxuLmstY2hlY2tib3ggaW5wdXQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBvcGFjaXR5OiAwO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uay1jaGVja2JveCAuay10ZXh0IHtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBtYXJnaW4tbGVmdDogMC41NzE0Mjg1NzE0Mjg1NzFlbTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuLmstY2hlY2tib3guay1jaGVja2VkIC5rLXdyYXBwZXIge1xcbiAgYm9yZGVyLWNvbG9yOiAjMGE1ZWVlO1xcbiAgYmFja2dyb3VuZDogIzBhNWVlZTtcXG59XFxuLmstY2hlY2tib3guay1jaGVja2VkIC5rLXdyYXBwZXI6YmVmb3JlIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHNjYWxlKDEpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgc2NhbGUoMSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKSBzY2FsZSgxKTtcXG59XFxuLmstY2hlY2tib3guay1kaXNhYmxlZCB7XFxuICBjb2xvcjogIzk5OTtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLWNoZWNrYm94LmstZGlzYWJsZWQgLmstd3JhcHBlciB7XFxuICBib3JkZXItY29sb3I6ICNkOWQ5ZDk7XFxuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xcbn1cXG4uay1jaGVja2JveC5rLWRpc2FibGVkIC5rLXdyYXBwZXI6YmVmb3JlIHtcXG4gIGJvcmRlci1jb2xvcjogIzk5OTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2NoZWNrYm94L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9jaGVja2JveC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstZGF0ZXBpY2tlciB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcbi5rLWRhdGVwaWNrZXIgLmstaW5uZXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYm9yZGVyLXJhZGl1czogMC4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMTkxLDE5MSwxOTEsMC41KTtcXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAycHggOHB4IDAgcmdiYSgxOTEsMTkxLDE5MSwwLjUpO1xcbiAgY29sb3I6ICM1OTU5NTk7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXksXFxuLmstZGF0ZXBpY2tlci1jb250ZW50IC5rLXdlZWtkYXkge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDIuNWVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luOiAwLjA4MzMzMzMzMzMzMzMzM2VtIDAuMTY2NjY2NjY2NjY2NjY3ZW07XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXkge1xcbiAgaGVpZ2h0OiAyLjVlbTtcXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDIuNWVtIC0gMnB4KTtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstZGF5OmhvdmVyIHtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXkuay1vdXQge1xcbiAgY29sb3I6ICM5OTk7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXkuay10b2RheSB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjY2FkMGRkO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstZGF5LmstYWN0aXZlIHtcXG4gIGJhY2tncm91bmQ6ICMwYTVlZWU7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmstZGF0ZXBpY2tlci1jb250ZW50IC5rLWRheS5rLWFjdGl2ZS5rLXRvZGF5IHtcXG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXkuay1kaXNhYmxlZCB7XFxuICBjb2xvcjogI2NjYztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1kYXkuay1kaXNhYmxlZDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstd2Vla2RheSB7XFxuICBjb2xvcjogIzk5OTtcXG59XFxuLmstZGF0ZXBpY2tlci1jb250ZW50IC5rLW1vbnRoIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDAgMCAwLjQxNjY2NjY2NjY2NjY2N2VtO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstbW9udGggLmstdGV4dCB7XFxuICBtYXJnaW46IDAgMC4yNWVtO1xcbiAgbGluZS1oZWlnaHQ6IDIuNWVtO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstbW9udGggLmstaWNvbiB7XFxuICBmb250LXNpemU6IDEuMTY2NjY2NjY2NjY2NjY3ZW07XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1tb250aCAuay1wcmV2IHtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstbW9udGggLmstbmV4dCB7XFxuICBmbG9hdDogcmlnaHQ7XFxufVxcbi5rLWRhdGVwaWNrZXItY29udGVudCAuay1tb250aCAuay10ZXh0LXdyYXBwZXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmsteWVhci1waWNrZXIge1xcbiAgd2lkdGg6IDE5LjgzMzMzMzMzMzMzMzMzMmVtO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstdGltZS1waWNrZXIge1xcbiAgd2lkdGg6IDE5LjgzMzMzMzMzMzMzMzMzMmVtO1xcbn1cXG4uay1kYXRlcGlja2VyLWNvbnRlbnQgLmstc2Nyb2xsLXNlbGVjdCB7XFxuICBoZWlnaHQ6IDE3LjVlbTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2RhdGVwaWNrZXIvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLWRpYWxvZy13cmFwcGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHotaW5kZXg6IDk5OTk7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbn1cXG4uay1kaWFsb2ctd3JhcHBlciAuay1vdmVybGF5IHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJhY2tncm91bmQ6ICMwMDA7XFxuICBvcGFjaXR5OiAwLjU7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2UtaW4tb3V0O1xcbn1cXG4uay1kaWFsb2ctd3JhcHBlciAuay1vdmVybGF5LmFuaW1hdGUtZW50ZXIsXFxuLmstZGlhbG9nLXdyYXBwZXIgLmstb3ZlcmxheS5hbmltYXRlLWxlYXZlIHtcXG4gIG9wYWNpdHk6IDA7XFxufVxcbi5rLWRpYWxvZyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogNDcuODU3MTQyODU3MTQyODU0cmVtO1xcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxuICBjb2xvcjogIzU5NTk1OTtcXG59XFxuLmstZGlhbG9nID4gLmstaGVhZGVyIHtcXG4gIHBhZGRpbmc6IDAgMi4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NhZDBkZDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmstZGlhbG9nID4gLmstaGVhZGVyIC5rLXRpdGxlIHtcXG4gIGhlaWdodDogNC4yODU3MTQyODU3MTQyODZlbTtcXG4gIGxpbmUtaGVpZ2h0OiA0LjI4NTcxNDI4NTcxNDI4NmVtO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgY29sb3I6ICM0MDQwNDA7XFxufVxcbi5rLWRpYWxvZyA+IC5rLWhlYWRlciAuay1jbG9zZSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMC4zNTcxNDI4NTcxNDI4NTdlbTtcXG4gIHRvcDogMC43MTQyODU3MTQyODU3MTRlbTtcXG59XFxuLmstZGlhbG9nID4gLmstaGVhZGVyIC5rLWNsb3NlLmstYnRuIC5rLWljb24ge1xcbiAgZm9udC1zaXplOiAyLjI4NTcxNDI4NTcxNDI4NmVtO1xcbn1cXG4uay1kaWFsb2cgPiAuay1ib2R5IHtcXG4gIHBhZGRpbmc6IDEuMjg1NzE0Mjg1NzE0Mjg2cmVtIDIuMTQyODU3MTQyODU3MTQzcmVtO1xcbn1cXG4uay1kaWFsb2cgPiAuay1mb290ZXIge1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICBwYWRkaW5nOiAxLjcxNDI4NTcxNDI4NTcxNHJlbSAyLjE0Mjg1NzE0Mjg1NzE0M3JlbTtcXG59XFxuLmstZGlhbG9nID4gLmstZm9vdGVyIC5rLWJ0biB7XFxuICBtYXJnaW4tbGVmdDogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLWRpYWxvZy5rLWRyYWdnaW5nIHtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcbi5rLWRpYWxvZy5hbmltYXRlLWVudGVyLWFjdGl2ZSxcXG4uay1kaWFsb2cuYW5pbWF0ZS1sZWF2ZS1hY3RpdmUge1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxufVxcbi5rLWRpYWxvZy5hbmltYXRlLWVudGVyLFxcbi5rLWRpYWxvZy5hbmltYXRlLWxlYXZlIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KSBzY2FsZSgxLjA1KTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KSBzY2FsZSgxLjA1KTtcXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0xMHB4KSBzY2FsZSgxLjA1KTtcXG4gIG9wYWNpdHk6IDA7XFxufVxcbi5rLWRpYWxvZy5rLXNtYWxsIHtcXG4gIHdpZHRoOiAzMi4xNDI4NTcxNDI4NTcxNDZyZW07XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9kaWFsb2cvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2RpYWxvZy9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstZHJvcGRvd24ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG4uay1kcm9wZG93bi1tZW51IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIG1pbi13aWR0aDogNy4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgYm9yZGVyLXJhZGl1czogMC4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMTkxLDE5MSwxOTEsMC41KTtcXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAycHggOHB4IDAgcmdiYSgxOTEsMTkxLDE5MSwwLjUpO1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N3JlbTtcXG4gIHotaW5kZXg6IDk5OTk7XFxuICB0b3A6IDA7XFxuICBsZWZ0OiAwO1xcbn1cXG4uay1kcm9wZG93bi1tZW51IC5rLWRyb3Bkb3duIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG4uay1kcm9wZG93bi1tZW51IC5rLWl0ZW0ge1xcbiAgcGFkZGluZzogMC42NjY2NjY2NjY2NjY2NjdlbSAxLjMzMzMzMzMzMzMzMzMzM2VtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uay1kcm9wZG93bi1tZW51IC5rLWl0ZW0uay1ob3ZlciB7XFxuICBiYWNrZ3JvdW5kOiAjMGE1ZWVlO1xcbiAgY29sb3I6ICNmZmY7XFxufVxcbi5rLWRyb3Bkb3duLW1lbnUgLmstaXRlbTpmaXJzdC1vZi10eXBlIHtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMTQyODU3MTQyODU3MTQzcmVtIDAuMTQyODU3MTQyODU3MTQzcmVtIDAgMDtcXG59XFxuLmstZHJvcGRvd24tbWVudSAuay1pdGVtOmxhc3Qtb2YtdHlwZSB7XFxuICBib3JkZXItcmFkaXVzOiAwIDAgMC4xNDI4NTcxNDI4NTcxNDNyZW0gMC4xNDI4NTcxNDI4NTcxNDNyZW07XFxufVxcbi5rLWRyb3Bkb3duLW1lbnUgLmstaXRlbS5rLWRpc2FibGVkIHtcXG4gIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XFxuICBjb2xvcjogIzk5OTtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLWRyb3Bkb3duLW1lbnUuZHJvcGRvd24tbGVhdmUtYWN0aXZlIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvZHJvcGRvd24vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2Ryb3Bkb3duL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1lZGl0YWJsZSB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBsaW5lLWhlaWdodDogMi4xNDI4NTcxNDI4NTcxNDNlbTtcXG59XFxuLmstZWRpdGFibGUgLmstZWRpdCB7XFxuICBmbG9hdDogcmlnaHQ7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBtYXJnaW46IDAgMCAwIDAuNTcxNDI4NTcxNDI4NTcxZW07XFxufVxcbi5rLWVkaXRhYmxlLmstaW52YWxpZCAuay1pbnB1dCAuay1pbm5lciB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZGIyODI4O1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvZWRpdGFibGUvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2VkaXRhYmxlL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1mb3JtLWl0ZW06bm90KDpsYXN0LW9mLXR5cGUpIHtcXG4gIG1hcmdpbjogMCAwIDEuNDI4NTcxNDI4NTcxNDI5ZW0gMDtcXG59XFxuLmstZm9ybS1pdGVtIHtcXG4gIGRpc3BsYXk6IHRhYmxlO1xcbn1cXG4uay1mb3JtLWl0ZW0gPiAuay1sYWJlbCB7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbiAgd2lkdGg6IDUuNzE0Mjg1NzE0Mjg1NzE0ZW07XFxuICB0ZXh0LWFsaWduOiByaWdodDtcXG4gIHBhZGRpbmctcmlnaHQ6IDAuNzE0Mjg1NzE0Mjg1NzE0ZW07XFxuICBsaW5lLWhlaWdodDogMi41NzE0Mjg1NzE0Mjg1NzJlbTtcXG59XFxuLmstZm9ybS1pdGVtID4gLmstY29udGVudCB7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGxpbmUtaGVpZ2h0OiAxO1xcbn1cXG4uay1mb3JtLWl0ZW0gLmstZXJyb3Ige1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgY29sb3I6ICNkYjI4Mjg7XFxuICBmb250LXNpemU6IDAuODU3MTQyODU3MTQyODU3cmVtO1xcbiAgbWFyZ2luOiAycHggMCAwIDA7XFxufVxcbi5rLWZvcm0taXRlbS5rLWludmFsaWQgLmstaW5wdXQgLmstaW5uZXIge1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RiMjgyODtcXG59XFxuLmstZm9ybS1pdGVtLmstaW52YWxpZCAuay1zZWxlY3QgLmstd3JhcHBlciB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjZGIyODI4O1xcbn1cXG4uay1mb3JtLWl0ZW0gLmstZm9ybS1pdGVtIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgd2lkdGg6IGF1dG87XFxufVxcbi5rLWZvcm0taXRlbSA+IC5rLWFwcGVuZCB7XFxuICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xcbiAgcGFkZGluZzogMCAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2Zvcm0vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLXJvdyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHpvb206IDE7XFxufVxcbi5rLXJvdzphZnRlciB7XFxuICBkaXNwbGF5OiB0YWJsZTtcXG4gIGNsZWFyOiBib3RoO1xcbiAgY29udGVudDogJyc7XFxuICBoZWlnaHQ6IDA7XFxufVxcbi5rLTEge1xcbiAgd2lkdGg6IDQuMTY2NjY2NjY2NjY2NjY2JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMSB7XFxuICBtYXJnaW4tbGVmdDogNC4xNjY2NjY2NjY2NjY2NjYlO1xcbn1cXG4uay0yIHtcXG4gIHdpZHRoOiA4LjMzMzMzMzMzMzMzMzMzMiU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTIge1xcbiAgbWFyZ2luLWxlZnQ6IDguMzMzMzMzMzMzMzMzMzMyJTtcXG59XFxuLmstMyB7XFxuICB3aWR0aDogMTIuNSU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTMge1xcbiAgbWFyZ2luLWxlZnQ6IDEyLjUlO1xcbn1cXG4uay00IHtcXG4gIHdpZHRoOiAxNi42NjY2NjY2NjY2NjY2NjQlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC00IHtcXG4gIG1hcmdpbi1sZWZ0OiAxNi42NjY2NjY2NjY2NjY2NjQlO1xcbn1cXG4uay01IHtcXG4gIHdpZHRoOiAyMC44MzMzMzMzMzMzMzMzMzYlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC01IHtcXG4gIG1hcmdpbi1sZWZ0OiAyMC44MzMzMzMzMzMzMzMzMzYlO1xcbn1cXG4uay02IHtcXG4gIHdpZHRoOiAyNSU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTYge1xcbiAgbWFyZ2luLWxlZnQ6IDI1JTtcXG59XFxuLmstNyB7XFxuICB3aWR0aDogMjkuMTY2NjY2NjY2NjY2NjY4JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtNyB7XFxuICBtYXJnaW4tbGVmdDogMjkuMTY2NjY2NjY2NjY2NjY4JTtcXG59XFxuLmstOCB7XFxuICB3aWR0aDogMzMuMzMzMzMzMzMzMzMzMzMlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC04IHtcXG4gIG1hcmdpbi1sZWZ0OiAzMy4zMzMzMzMzMzMzMzMzMyU7XFxufVxcbi5rLTkge1xcbiAgd2lkdGg6IDM3LjUlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC05IHtcXG4gIG1hcmdpbi1sZWZ0OiAzNy41JTtcXG59XFxuLmstMTAge1xcbiAgd2lkdGg6IDQxLjY2NjY2NjY2NjY2NjY3JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMTAge1xcbiAgbWFyZ2luLWxlZnQ6IDQxLjY2NjY2NjY2NjY2NjY3JTtcXG59XFxuLmstMTEge1xcbiAgd2lkdGg6IDQ1LjgzMzMzMzMzMzMzMzMzJTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMTEge1xcbiAgbWFyZ2luLWxlZnQ6IDQ1LjgzMzMzMzMzMzMzMzMzJTtcXG59XFxuLmstMTIge1xcbiAgd2lkdGg6IDUwJTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMTIge1xcbiAgbWFyZ2luLWxlZnQ6IDUwJTtcXG59XFxuLmstMTMge1xcbiAgd2lkdGg6IDU0LjE2NjY2NjY2NjY2NjY2NCU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTEzIHtcXG4gIG1hcmdpbi1sZWZ0OiA1NC4xNjY2NjY2NjY2NjY2NjQlO1xcbn1cXG4uay0xNCB7XFxuICB3aWR0aDogNTguMzMzMzMzMzMzMzMzMzM2JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMTQge1xcbiAgbWFyZ2luLWxlZnQ6IDU4LjMzMzMzMzMzMzMzMzMzNiU7XFxufVxcbi5rLTE1IHtcXG4gIHdpZHRoOiA2Mi41JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMTUge1xcbiAgbWFyZ2luLWxlZnQ6IDYyLjUlO1xcbn1cXG4uay0xNiB7XFxuICB3aWR0aDogNjYuNjY2NjY2NjY2NjY2NjYlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC0xNiB7XFxuICBtYXJnaW4tbGVmdDogNjYuNjY2NjY2NjY2NjY2NjYlO1xcbn1cXG4uay0xNyB7XFxuICB3aWR0aDogNzAuODMzMzMzMzMzMzMzMzQlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC0xNyB7XFxuICBtYXJnaW4tbGVmdDogNzAuODMzMzMzMzMzMzMzMzQlO1xcbn1cXG4uay0xOCB7XFxuICB3aWR0aDogNzUlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC0xOCB7XFxuICBtYXJnaW4tbGVmdDogNzUlO1xcbn1cXG4uay0xOSB7XFxuICB3aWR0aDogNzkuMTY2NjY2NjY2NjY2NjYlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC0xOSB7XFxuICBtYXJnaW4tbGVmdDogNzkuMTY2NjY2NjY2NjY2NjYlO1xcbn1cXG4uay0yMCB7XFxuICB3aWR0aDogODMuMzMzMzMzMzMzMzMzMzQlO1xcbiAgZmxvYXQ6IGxlZnQ7XFxufVxcbi5rLW9mZnNldC0yMCB7XFxuICBtYXJnaW4tbGVmdDogODMuMzMzMzMzMzMzMzMzMzQlO1xcbn1cXG4uay0yMSB7XFxuICB3aWR0aDogODcuNSU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTIxIHtcXG4gIG1hcmdpbi1sZWZ0OiA4Ny41JTtcXG59XFxuLmstMjIge1xcbiAgd2lkdGg6IDkxLjY2NjY2NjY2NjY2NjY2JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMjIge1xcbiAgbWFyZ2luLWxlZnQ6IDkxLjY2NjY2NjY2NjY2NjY2JTtcXG59XFxuLmstMjMge1xcbiAgd2lkdGg6IDk1LjgzMzMzMzMzMzMzMzM0JTtcXG4gIGZsb2F0OiBsZWZ0O1xcbn1cXG4uay1vZmZzZXQtMjMge1xcbiAgbWFyZ2luLWxlZnQ6IDk1LjgzMzMzMzMzMzMzMzM0JTtcXG59XFxuLmstMjQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBmbG9hdDogbGVmdDtcXG59XFxuLmstb2Zmc2V0LTI0IHtcXG4gIG1hcmdpbi1sZWZ0OiAxMDAlO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvZ3JpZC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvZ3JpZC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstaW5wdXQge1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDIxLjQyODU3MTQyODU3MTQyN3JlbTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcbi5rLWlucHV0IC5rLXdyYXBwZXIge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5rLWlucHV0IC5rLWlubmVyIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgaGVpZ2h0OiAyLjU3MTQyODU3MTQyODU3MnJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWQwZGQ7XFxuICBwYWRkaW5nOiAwIDAuNzE0Mjg1NzE0Mjg1NzE0cmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyIDAuMjVzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kIDAuMjVzIGVhc2UtaW4tb3V0LCAtd2Via2l0LWJveC1zaGFkb3cgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBib3JkZXIgMC4yNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQgMC4yNXMgZWFzZS1pbi1vdXQsIC13ZWJraXQtYm94LXNoYWRvdyAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGJvcmRlciAwLjI1cyBlYXNlLWluLW91dCwgYmFja2dyb3VuZCAwLjI1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGJvcmRlciAwLjI1cyBlYXNlLWluLW91dCwgYmFja2dyb3VuZCAwLjI1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjI1cyBlYXNlLWluLW91dCwgLXdlYmtpdC1ib3gtc2hhZG93IDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgb3V0bGluZTogbm9uZTtcXG59XFxuLmstaW5wdXQgLmstaW5uZXI6Zm9jdXMge1xcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhNWVlZTtcXG59XFxuLmstaW5wdXQuay1mbHVpZCB7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmstaW5wdXQgLmstdGV4dGFyZWEge1xcbiAgcGFkZGluZzogMC4zNTcxNDI4NTcxNDI4NTdyZW0gMC43MTQyODU3MTQyODU3MTRyZW07XFxuICBoZWlnaHQ6IGF1dG87XFxuICBsaW5lLWhlaWdodDogMS41O1xcbn1cXG4uay1pbnB1dC5rLXdpdGgtcHJlZml4IC5rLWlubmVyIHtcXG4gIHBhZGRpbmctbGVmdDogMi4xNDI4NTcxNDI4NTcxNDNyZW07XFxufVxcbi5rLWlucHV0Lmstd2l0aC1zdWZmaXggLmstaW5uZXIsXFxuLmstaW5wdXQuay1jbGVhcmFibGUgLmstaW5uZXIge1xcbiAgcGFkZGluZy1yaWdodDogMi4xNDI4NTcxNDI4NTcxNDNyZW07XFxufVxcbi5rLWlucHV0IC5rLXByZWZpeCxcXG4uay1pbnB1dCAuay1zdWZmaXgge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxufVxcbi5rLWlucHV0IC5rLXByZWZpeCB7XFxuICBsZWZ0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG59XFxuLmstaW5wdXQgLmstc3VmZml4IHtcXG4gIHJpZ2h0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG59XFxuLmstaW5wdXQgLmstY2xlYXIge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgb3BhY2l0eTogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuLmstaW5wdXQgLmstY2xlYXI6aG92ZXIge1xcbiAgY29sb3I6ICMwYTVlZWU7XFxufVxcbi5rLWlucHV0Lmstd2l0aC1zdWZmaXggLmstY2xlYXIge1xcbiAgbWFyZ2luLXJpZ2h0OiAwLjM1NzE0Mjg1NzE0Mjg1N3JlbTtcXG59XFxuLmstaW5wdXQuay13aXRoLXN1ZmZpeC5rLWNsZWFyYWJsZSAuay1pbm5lciB7XFxuICBwYWRkaW5nLXJpZ2h0OiAzLjIxNDI4NTcxNDI4NTcxNHJlbTtcXG59XFxuLmstaW5wdXQgLmstaW5uZXI6Zm9jdXMgKyAuay1zdWZmaXggLmstY2xlYXIuay1zaG93LFxcbi5rLWlucHV0OmhvdmVyIC5rLWNsZWFyLmstc2hvdyB7XFxuICBvcGFjaXR5OiAxO1xcbiAgcG9pbnRlci1ldmVudHM6IGFsbDtcXG59XFxuLmstaW5wdXQuay1ncm91cCB7XFxuICBkaXNwbGF5OiB0YWJsZTtcXG59XFxuLmstaW5wdXQgLmstcHJlcGVuZCxcXG4uay1pbnB1dCAuay1hcHBlbmQge1xcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcXG4gIHdpZHRoOiAxcHg7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgcGFkZGluZzogMCAwLjVlbTtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjY2FkMGRkO1xcbn1cXG4uay1pbnB1dCAuay1wcmVwZW5kIC5rLWJ0bixcXG4uay1pbnB1dCAuay1hcHBlbmQgLmstYnRuIHtcXG4gIG1hcmdpbjogLTFweCAtMC41NzE0Mjg1NzE0Mjg1NzFlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDA7XFxufVxcbi5rLWlucHV0IC5rLXByZXBlbmQge1xcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG59XFxuLmstaW5wdXQgLmstYXBwZW5kIHtcXG4gIGJvcmRlci1sZWZ0OiBub25lO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG59XFxuLmstaW5wdXQuay1kaXNhYmxlZCB7XFxuICBjb2xvcjogIzk5OTtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLWlucHV0LmstZGlzYWJsZWQgLmstaW5uZXIge1xcbiAgY29sb3I6ICM5OTk7XFxuICBib3JkZXItY29sb3I6ICNkOWQ5ZDk7XFxuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG59XFxuLmstaW5wdXQuay1zbWFsbCB7XFxuICBmb250LXNpemU6IDAuODU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1pbnB1dC5rLXNtYWxsIC5rLWlubmVyIHtcXG4gIGhlaWdodDogMi4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICBmb250LXNpemU6IDAuODU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1pbnB1dC5rLW1pbmkge1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N3JlbTtcXG59XFxuLmstaW5wdXQuay1taW5pIC5rLWlubmVyIHtcXG4gIGhlaWdodDogMS44NTcxNDI4NTcxNDI4NTdyZW07XFxuICBmb250LXNpemU6IDAuODU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1pbnB1dCAuay1mYWtlIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcXG4gIHRvcDogMDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcbi5rLWlucHV0LmstYXV0by13aWR0aCB7XFxuICB3aWR0aDogYXV0bztcXG59XFxuLmstaW5wdXQuay1hdXRvLXdpZHRoIC5rLWlubmVyIHtcXG4gIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XFxuICAgICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvaW5wdXQvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL2lucHV0L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1tZXNzYWdlcyB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0b3A6IDAuNzE0Mjg1NzE0Mjg1NzE0cmVtO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG4gIHotaW5kZXg6IDk5OTk7XFxufVxcbi5rLW1lc3NhZ2VzIC5hbmltYXRlLWVudGVyLFxcbi5rLW1lc3NhZ2VzIC5hbmltYXRlLWxlYXZlIHtcXG4gIG9wYWNpdHk6IDA7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMC41cmVtKTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjVyZW0pO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTAuNXJlbSk7XFxufVxcbi5rLW1lc3NhZ2VzIC5hbmltYXRlLWVudGVyLWFjdGl2ZSxcXG4uay1tZXNzYWdlcyAuYW5pbWF0ZS1sZWF2ZS1hY3RpdmUge1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxufVxcbi5rLW1lc3NhZ2VzIC5hbmltYXRlLW1vdmUge1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjVzIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAwLjI1cyBlYXNlLWluLW91dDtcXG59XFxuLmstbWVzc2FnZSB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmstbWVzc2FnZSA+IC5rLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMTkxLDE5MSwxOTEsMC41KTtcXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAycHggOHB4IDAgcmdiYSgxOTEsMTkxLDE5MSwwLjUpO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMjg1NzE0Mjg1NzE0Mjg2cmVtO1xcbiAgbWFyZ2luLWJvdHRvbTogMC43MTQyODU3MTQyODU3MTRyZW07XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbn1cXG4uay1tZXNzYWdlID4gLmstY29udGFpbmVyID4gLmstaWNvbiB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgcGFkZGluZy1sZWZ0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG4gIGNvbG9yOiAjMGE1ZWVlO1xcbn1cXG4uay1tZXNzYWdlID4gLmstY29udGFpbmVyID4gLmstaWNvbjpiZWZvcmUge1xcbiAgZm9udC1zaXplOiAxLjI4NTcxNDI4NTcxNDI4NnJlbTtcXG59XFxuLmstbWVzc2FnZSA+IC5rLWNvbnRhaW5lciA+IC5rLWNvbnRlbnQge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcGFkZGluZzogMC43MTQyODU3MTQyODU3MTRyZW07XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4uay1tZXNzYWdlID4gLmstY29udGFpbmVyID4gLmstY2xvc2Uge1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG59XFxuLmstbWVzc2FnZSA+IC5rLWNvbnRhaW5lciA+IC5rLWNsb3NlIC5rLWljb246YmVmb3JlIHtcXG4gIGZvbnQtc2l6ZTogMS43MTQyODU3MTQyODU3MTRyZW07XFxufVxcbi5rLW1lc3NhZ2Uuay1kYW5nZXIgPiAuay1jb250YWluZXIgPiAuay1pY29uIHtcXG4gIGNvbG9yOiAjZGIyODI4O1xcbn1cXG4uay1tZXNzYWdlLmstc3VjY2VzcyA+IC5rLWNvbnRhaW5lciA+IC5rLWljb24ge1xcbiAgY29sb3I6ICM0ZGI1MDA7XFxufVxcbi5rLW1lc3NhZ2Uuay13YXJuaW5nID4gLmstY29udGFpbmVyID4gLmstaWNvbiB7XFxuICBjb2xvcjogI2ZmOGEwMDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL21lc3NhZ2UvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL21lc3NhZ2UvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLXBhZ2luYXRpb24ge1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG4uay1wYWdpbmF0aW9uIC5rLXBhZ2VzLFxcbi5rLXBhZ2luYXRpb24gLmstbGltaXRzLFxcbi5rLXBhZ2luYXRpb24gLmstZ290byxcXG4uay1wYWdpbmF0aW9uIC5rLXRvdGFsIHtcXG4gIG1hcmdpbi1sZWZ0OiAxLjQyODU3MTQyODU3MTQyOWVtO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG4uay1wYWdpbmF0aW9uIC5rLXBhZ2VzIHtcXG4gIG1hcmdpbi1sZWZ0OiAwO1xcbn1cXG4uay1wYWdpbmF0aW9uIC5rLXBhZ2VzID4gZGl2IHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjYWQwZGQ7XFxuICBib3JkZXItcmFkaXVzOiAwLjE0Mjg1NzE0Mjg1NzE0M3JlbTtcXG4gIG1hcmdpbi1yaWdodDogMC43MTQyODU3MTQyODU3MTRlbTtcXG4gIG1pbi13aWR0aDogMi41NzE0Mjg1NzE0Mjg1NzJlbTtcXG4gIGhlaWdodDogMi41NzE0Mjg1NzE0Mjg1NzJlbTtcXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDIuNTcxNDI4NTcxNDI4NTcyZW0gLSAycHgpO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG59XFxuLmstcGFnaW5hdGlvbiAuay1wYWdlcyA+IGRpdjpub3QoLmstYWN0aXZlKTpub3QoLmstZGlzYWJsZWQpOmhvdmVyIHtcXG4gIGJvcmRlci1jb2xvcjogIzBhNWVlZTtcXG4gIGNvbG9yOiAjMGE1ZWVlO1xcbn1cXG4uay1wYWdpbmF0aW9uIC5rLXBhZ2VzID4gZGl2Omxhc3Qtb2YtdHlwZSB7XFxuICBtYXJnaW4tcmlnaHQ6IDA7XFxufVxcbi5rLXBhZ2luYXRpb24gLmstcGFnZXMgLmstYWN0aXZlIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMwYTVlZWU7XFxuICBib3JkZXItY29sb3I6ICMwYTVlZWU7XFxuICBjb2xvcjogI2ZmZjtcXG59XFxuLmstcGFnaW5hdGlvbiAuay1wYWdlcyAuay1kaXNhYmxlZCB7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbiAgY29sb3I6ICM5OTk7XFxuICBib3JkZXItY29sb3I6ICNkOWQ5ZDk7XFxufVxcbi5rLXBhZ2luYXRpb24gLmstZ290byAuay1pbnB1dCB7XFxuICBmb250LXNpemU6IGluaGVyaXQ7XFxuICB3aWR0aDogNC4yODU3MTQyODU3MTQyODZlbTtcXG4gIG1hcmdpbjogMCAwLjcxNDI4NTcxNDI4NTcxNGVtO1xcbn1cXG4uay1wYWdpbmF0aW9uIC5rLXNlbGVjdCB7XFxuICB3aWR0aDogYXV0bztcXG59XFxuLmstcGFnaW5hdGlvbi5rLXNtYWxsIHtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXBhZ2luYXRpb24uay1zbWFsbCAuay1wYWdlcyA+IGRpdiB7XFxuICBtYXJnaW4tcmlnaHQ6IDAuNDE2NjY2NjY2NjY2NjY3ZW07XFxuICBtaW4td2lkdGg6IDIuNWVtO1xcbiAgaGVpZ2h0OiAyLjVlbTtcXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDIuNWVtIC0gMnB4KTtcXG59XFxuLmstcGFnaW5hdGlvbi5rLW1pbmkge1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N3JlbTtcXG59XFxuLmstcGFnaW5hdGlvbi5rLW1pbmkgLmstcGFnZXMgPiBkaXYge1xcbiAgbWFyZ2luLXJpZ2h0OiAwLjQxNjY2NjY2NjY2NjY2N2VtO1xcbiAgbWluLXdpZHRoOiAyLjE2NjY2NjY2NjY2NjY2N2VtO1xcbiAgaGVpZ2h0OiAyLjE2NjY2NjY2NjY2NjY2N2VtO1xcbiAgbGluZS1oZWlnaHQ6IGNhbGMoMi4xNjY2NjY2NjY2NjY2NjdlbSAtIDJweCk7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9wYWdpbmF0aW9uL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9wYWdpbmF0aW9uL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1wcm9ncmVzcyB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBsaW5lLWhlaWdodDogMTtcXG59XFxuLmstcHJvZ3Jlc3Muay1iYXIge1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5rLXByb2dyZXNzLmstYmFyIC5rLWNvbnRhaW5lciB7XFxuICBoZWlnaHQ6IDFyZW07XFxuICBib3JkZXItcmFkaXVzOiAxcmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VhZWVmMjtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N2VtO1xcbiAgLXdlYmtpdC1ib3gtZmxleDogMTtcXG4gICAgICAtbXMtZmxleDogMTtcXG4gICAgICAgICAgZmxleDogMTtcXG59XFxuLmstcHJvZ3Jlc3Muay1iYXIgLmstY29udGVudCB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogMXJlbTtcXG59XFxuLmstcHJvZ3Jlc3Muay1iYXIgLmstYmcge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBhNWVlZTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGJvcmRlci1yYWRpdXM6IDFyZW07XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjZzIGVhc2U7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC42cyBlYXNlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhciAuay1pbm5lci10ZXh0IHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBjb2xvcjogI2ZmZjtcXG4gIG1hcmdpbjogMXB4IDNweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhci5rLXN1Y2Nlc3MgLmstYmcge1xcbiAgYmFja2dyb3VuZDogIzRkYjUwMDtcXG59XFxuLmstcHJvZ3Jlc3Muay1iYXIuay1lcnJvciAuay1iZyB7XFxuICBiYWNrZ3JvdW5kOiAjZGIyODI4O1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhci5rLWFjdGl2ZSAuay1iZzpiZWZvcmUge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDA7XFxuICBib3R0b206IDA7XFxuICByaWdodDogMDtcXG4gIGxlZnQ6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgLXdlYmtpdC1hbmltYXRpb246IHByb2dyZXNzLWJhci1hbmltYXRpb24gMnMgZWFzZSBpbmZpbml0ZTtcXG4gICAgICAgICAgYW5pbWF0aW9uOiBwcm9ncmVzcy1iYXItYW5pbWF0aW9uIDJzIGVhc2UgaW5maW5pdGU7XFxuICBib3JkZXItcmFkaXVzOiAxNHB4O1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhci5rLW1pbmkge1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N2VtO1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhci5rLW1pbmkgLmstY29udGFpbmVyIHtcXG4gIGhlaWdodDogMC4zNTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXByb2dyZXNzLmstYmFyLmstc21hbGwge1xcbiAgZm9udC1zaXplOiAwLjg1NzE0Mjg1NzE0Mjg1N2VtO1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhci5rLXNtYWxsIC5rLWNvbnRhaW5lciB7XFxuICBoZWlnaHQ6IDAuNzE0Mjg1NzE0Mjg1NzE0cmVtO1xcbn1cXG4uay1wcm9ncmVzcy5rLWJhciAuay10ZXh0IHtcXG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xcbiAgd2lkdGg6IDIuODU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1wcm9ncmVzcy5rLWNpcmNsZSB7XFxuICB3aWR0aDogNmVtO1xcbiAgaGVpZ2h0OiA2ZW07XFxuICBmb250LXNpemU6IDEuNDI4NTcxNDI4NTcxNDI5cmVtO1xcbn1cXG4uay1wcm9ncmVzcy5rLWNpcmNsZSAuay1jYW52YXMge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtOTBkZWcpO1xcbn1cXG4uay1wcm9ncmVzcy5rLWNpcmNsZSAuay1tZXRlcixcXG4uay1wcm9ncmVzcy5rLWNpcmNsZSAuay12YWx1ZSxcXG4uay1wcm9ncmVzcy5rLWNpcmNsZSAuay1hbmltYXRlIHtcXG4gIGZpbGw6IG5vbmU7XFxufVxcbi5rLXByb2dyZXNzLmstY2lyY2xlIC5rLW1ldGVyIHtcXG4gIHN0cm9rZTogI2VhZWVmMjtcXG59XFxuLmstcHJvZ3Jlc3Muay1jaXJjbGUgLmstdmFsdWUge1xcbiAgc3Ryb2tlOiAjMGE1ZWVlO1xcbiAgc3Ryb2tlLWxpbmVjYXA6IHJvdW5kO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC42cyBlYXNlO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuNnMgZWFzZTtcXG59XFxuLmstcHJvZ3Jlc3Muay1jaXJjbGUgLmstYW5pbWF0ZSB7XFxuICBzdHJva2U6ICNmZmY7XFxuICBzdHJva2UtbGluZWNhcDogcm91bmQ7XFxufVxcbi5rLXByb2dyZXNzLmstY2lyY2xlIC5rLXRleHQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG59XFxuLmstcHJvZ3Jlc3Muay1jaXJjbGUuay1zdWNjZXNzIC5rLXZhbHVlIHtcXG4gIHN0cm9rZTogIzRkYjUwMDtcXG59XFxuLmstcHJvZ3Jlc3Muay1jaXJjbGUuay1lcnJvciAuay12YWx1ZSB7XFxuICBzdHJva2U6ICNkYjI4Mjg7XFxufVxcbi5rLXByb2dyZXNzLmstY2lyY2xlLmstbWluaSB7XFxuICB3aWR0aDogMy4zMzMzMzMzMzMzMzMzMzNlbTtcXG4gIGhlaWdodDogMy4zMzMzMzMzMzMzMzMzMzNlbTtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXByb2dyZXNzLmstY2lyY2xlLmstc21hbGwge1xcbiAgd2lkdGg6IDVlbTtcXG4gIGhlaWdodDogNWVtO1xcbiAgZm9udC1zaXplOiAxLjE0Mjg1NzE0Mjg1NzE0M3JlbTtcXG59XFxuQC13ZWJraXQta2V5ZnJhbWVzIHByb2dyZXNzLWJhci1hbmltYXRpb24ge1xcbiAgZnJvbSB7XFxuICAgIG9wYWNpdHk6IDAuMjtcXG4gICAgd2lkdGg6IDFyZW07XFxuICAgIG1hcmdpbi1sZWZ0OiAtMXJlbTtcXG4gIH1cXG4gIHRvIHtcXG4gICAgb3BhY2l0eTogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICB9XFxufVxcbkBrZXlmcmFtZXMgcHJvZ3Jlc3MtYmFyLWFuaW1hdGlvbiB7XFxuICBmcm9tIHtcXG4gICAgb3BhY2l0eTogMC4yO1xcbiAgICB3aWR0aDogMXJlbTtcXG4gICAgbWFyZ2luLWxlZnQ6IC0xcmVtO1xcbiAgfVxcbiAgdG8ge1xcbiAgICBvcGFjaXR5OiAwO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gIH1cXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL3Byb2dyZXNzL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9wcm9ncmVzcy9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstcmFkaW8ge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG4uay1yYWRpbyAuay13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHdpZHRoOiAxcmVtO1xcbiAgaGVpZ2h0OiAxcmVtO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICM5Nzk3OTc7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmstcmFkaW8gLmstd3JhcHBlcjpiZWZvcmUge1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHdpZHRoOiAwLjU3MTQyODU3MTQyODU3MXJlbTtcXG4gIGhlaWdodDogMC41NzE0Mjg1NzE0Mjg1NzFyZW07XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIG1hcmdpbi1sZWZ0OiAtMC4yODU3MTQyODU3MTQyODZyZW07XFxuICBtYXJnaW4tdG9wOiAtMC4yODU3MTQyODU3MTQyODZyZW07XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGE1ZWVlO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxufVxcbi5rLXJhZGlvIGlucHV0IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgb3BhY2l0eTogMDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG59XFxuLmstcmFkaW8gLmstdGV4dCB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luLWxlZnQ6IDAuNTcxNDI4NTcxNDI4NTcxZW07XFxufVxcbi5rLXJhZGlvLmstY2hlY2tlZCAuay13cmFwcGVyIHtcXG4gIGJvcmRlci1jb2xvcjogIzBhNWVlZTtcXG59XFxuLmstcmFkaW8uay1jaGVja2VkIC5rLXdyYXBwZXI6YmVmb3JlIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG59XFxuLmstcmFkaW8uay1kaXNhYmxlZCB7XFxuICBjb2xvcjogIzk5OTtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLXJhZGlvLmstZGlzYWJsZWQgLmstd3JhcHBlciB7XFxuICBib3JkZXItY29sb3I6ICNkOWQ5ZDk7XFxuICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xcbn1cXG4uay1yYWRpby5rLWRpc2FibGVkIC5rLXdyYXBwZXI6YmVmb3JlIHtcXG4gIGJhY2tncm91bmQ6ICM5OTk7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9yYWRpby9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvcmFkaW8vaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLXNjcm9sbC1zZWxlY3Qge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIG1heC1oZWlnaHQ6IDEwMCU7XFxuICBoZWlnaHQ6IDguOTI4NTcxNDI4NTcxNDI5cmVtO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmstc2Nyb2xsLXNlbGVjdCAuay13cmFwcGVyIHtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjI1cyBlYXNlLWluLW91dCwgLXdlYmtpdC10cmFuc2Zvcm0gMC4yNXMgZWFzZS1pbi1vdXQ7XFxufVxcbi5rLXNjcm9sbC1zZWxlY3Quay1kcmFnZ2luZyAuay13cmFwcGVyIHtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogbm9uZTtcXG4gIHRyYW5zaXRpb246IG5vbmU7XFxufVxcbi5rLXNjcm9sbC1zZWxlY3Quay1kaXNhYmxlZCAuay1pdGVtIHtcXG4gIGNvbG9yOiAjY2NjO1xcbn1cXG4uay1zY3JvbGwtc2VsZWN0IC5rLWl0ZW0ge1xcbiAgbGluZS1oZWlnaHQ6IDEuNzg1NzE0Mjg1NzE0Mjg2cmVtO1xcbiAgY29sb3I6ICM5OTk7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5rLXNjcm9sbC1zZWxlY3QgLmstaXRlbS5rLWFjdGl2ZSB7XFxuICBjb2xvcjogIzBhNWVlZTtcXG4gIGZvbnQtc2l6ZTogMS4xZW07XFxufVxcbi5rLXNjcm9sbC1zZWxlY3QgPiAuay1hcHBlbmQge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiA1MCU7XFxuICByaWdodDogMDtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL3Njcm9sbFNlbGVjdC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvc2Nyb2xsU2VsZWN0L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1zZWxlY3Qge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHdpZHRoOiAxNC4yODU3MTQyODU3MTQyODZyZW07XFxufVxcbi5rLXNlbGVjdCA+IC5rLXdyYXBwZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtaW4taGVpZ2h0OiAyLjU3MTQyODU3MTQyODU3MnJlbTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhZDBkZDtcXG4gIHBhZGRpbmc6IDAgMi4xNDI4NTcxNDI4NTcxNDNyZW0gMCAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IGJvcmRlciAwLjI1cyBlYXNlLWluLW91dCwgYmFja2dyb3VuZCAwLjI1cyBlYXNlLWluLW91dCwgLXdlYmtpdC1ib3gtc2hhZG93IDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogYm9yZGVyIDAuMjVzIGVhc2UtaW4tb3V0LCBiYWNrZ3JvdW5kIDAuMjVzIGVhc2UtaW4tb3V0LCAtd2Via2l0LWJveC1zaGFkb3cgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBib3JkZXIgMC4yNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQgMC4yNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBib3JkZXIgMC4yNXMgZWFzZS1pbi1vdXQsIGJhY2tncm91bmQgMC4yNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4yNXMgZWFzZS1pbi1vdXQsIC13ZWJraXQtYm94LXNoYWRvdyAwLjI1cyBlYXNlLWluLW91dDtcXG59XFxuLmstc2VsZWN0IC5rLXN1ZmZpeCB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDUwJTtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcXG4gIHJpZ2h0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG59XFxuLmstc2VsZWN0LmstZmx1aWQge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5rLXNlbGVjdCAuay1jbGVhciB7XFxuICBtYXJnaW4tcmlnaHQ6IDAuMzU3MTQyODU3MTQyODU3cmVtO1xcbiAgb3BhY2l0eTogMDtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlLWluLW91dDtcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcXG59XFxuLmstc2VsZWN0IC5rLWNsZWFyOmhvdmVyIHtcXG4gIGNvbG9yOiAjMGE1ZWVlO1xcbn1cXG4uay1zZWxlY3Q6aG92ZXIgLmstY2xlYXIuay1zaG93IHtcXG4gIG9wYWNpdHk6IDE7XFxuICBwb2ludGVyLWV2ZW50czogYWxsO1xcbn1cXG4uay1zZWxlY3Quay1jbGVhcmFibGUgPiAuay13cmFwcGVyIHtcXG4gIHBhZGRpbmctcmlnaHQ6IDMuMjE0Mjg1NzE0Mjg1NzE0cmVtO1xcbn1cXG4uay1zZWxlY3QgLmstaW5wdXQgLmstaW5uZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IGNhbGMoMi41NzE0Mjg1NzE0Mjg1NzJyZW0gLSAycHgpO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuLmstc2VsZWN0IC5rLWlucHV0IC5rLWlubmVyOmZvY3VzIHtcXG4gIGJvcmRlcjogbm9uZTtcXG59XFxuLmstc2VsZWN0IC5rLXBsYWNlaG9sZGVyIHtcXG4gIGNvbG9yOiAjOTk5O1xcbn1cXG4uay1zZWxlY3QgLmstaW5wdXQsXFxuLmstc2VsZWN0IC5rLXBsYWNlaG9sZGVyLFxcbi5rLXNlbGVjdCAuay12YWx1ZSB7XFxuICBsaW5lLWhlaWdodDogY2FsYygyLjU3MTQyODU3MTQyODU3MnJlbSAtIDJweCk7XFxufVxcbi5rLXNlbGVjdCAuay1wbGFjZWhvbGRlcixcXG4uay1zZWxlY3QgLmstdmFsdWUge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbi5rLXNlbGVjdCAuay1hcnJvdyB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuMjVzIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgZWFzZS1pbi1vdXQsIC13ZWJraXQtdHJhbnNmb3JtIDAuMjVzIGVhc2UtaW4tb3V0O1xcbn1cXG4uay1zZWxlY3Quay1zaG93ID4gLmstd3JhcHBlciB7XFxuICBib3JkZXI6IDFweCBzb2xpZCAjMGE1ZWVlO1xcbn1cXG4uay1zZWxlY3Quay1zaG93IC5rLWFycm93IHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcXG4gICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcXG59XFxuLmstc2VsZWN0LmstZGlzYWJsZWQgPiAuay13cmFwcGVyIHtcXG4gIGNvbG9yOiAjOTk5O1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG4gIGJhY2tncm91bmQ6ICNmN2Y3Zjc7XFxuICBib3JkZXItY29sb3I6ICNkOWQ5ZDk7XFxufVxcbi5rLXNlbGVjdC5rLWRpc2FibGVkIC5rLWlucHV0IHtcXG4gIGNvbG9yOiAjOTk5O1xcbiAgYmFja2dyb3VuZDogI2Y3ZjdmNztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLXNlbGVjdCAuay12YWx1ZXMge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luLXRvcDogMC4zNTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXNlbGVjdCAuay12YWx1ZXMgLmstaW5wdXQge1xcbiAgbWFyZ2luLXRvcDogLTAuMzU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1zZWxlY3QgLmstdGFnIHtcXG4gIHBhZGRpbmc6IDAuMTQyODU3MTQyODU3MTQzcmVtIDAuMzU3MTQyODU3MTQyODU3cmVtO1xcbiAgYmFja2dyb3VuZDogI2Y3ZjdmNztcXG4gIGJvcmRlci1yYWRpdXM6IDAuMTQyODU3MTQyODU3MTQzcmVtO1xcbiAgbWFyZ2luOiAwIDAuMzU3MTQyODU3MTQyODU3cmVtIDAuMzU3MTQyODU3MTQyODU3cmVtIDA7XFxufVxcbi5rLXNlbGVjdCAuay10YWcsXFxuLmstc2VsZWN0IC5rLXRhZyAuay10ZXh0LFxcbi5rLXNlbGVjdCAuay10YWcgLmstaWNvbiB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4uay1zZWxlY3QgLmstdGFnIC5rLWljb24ge1xcbiAgbWFyZ2luLWxlZnQ6IDAuMzU3MTQyODU3MTQyODU3cmVtO1xcbn1cXG4uay1zZWxlY3QgLmstdGFnIC5rLWljb246YmVmb3JlIHtcXG4gIGZvbnQtc2l6ZTogMS40Mjg1NzE0Mjg1NzE0MjlyZW07XFxufVxcbi5rLXNlbGVjdC5rLXNtYWxsID4gLmstd3JhcHBlciB7XFxuICBtaW4taGVpZ2h0OiAyLjE0Mjg1NzE0Mjg1NzE0M3JlbTtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXNlbGVjdC5rLXNtYWxsID4gLmstd3JhcHBlciAuay1pbnB1dCxcXG4uay1zZWxlY3Quay1zbWFsbCA+IC5rLXdyYXBwZXIgLmstcGxhY2Vob2xkZXIsXFxuLmstc2VsZWN0Lmstc21hbGwgPiAuay13cmFwcGVyIC5rLXZhbHVlIHtcXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDIuMTQyODU3MTQyODU3MTQzcmVtIC0gMnB4KTtcXG59XFxuLmstc2VsZWN0Lmstc21hbGwgPiAuay13cmFwcGVyIC5rLWlucHV0IC5rLWlubmVyIHtcXG4gIGhlaWdodDogY2FsYygyLjE0Mjg1NzE0Mjg1NzE0M3JlbSAtIDJweCk7XFxufVxcbi5rLXNlbGVjdC5rLXNtYWxsID4gLmstd3JhcHBlciAuay12YWx1ZXMge1xcbiAgbWFyZ2luLXRvcDogMC4wNzE0Mjg1NzE0Mjg1NzFyZW07XFxufVxcbi5rLXNlbGVjdC5rLXNtYWxsID4gLmstd3JhcHBlciAuay12YWx1ZXMgLmstaW5wdXQge1xcbiAgbWFyZ2luLXRvcDogLTAuMDcxNDI4NTcxNDI4NTcxcmVtO1xcbn1cXG4uay1zZWxlY3Quay1zbWFsbCA+IC5rLXdyYXBwZXIgLmstdGFnIHtcXG4gIG1hcmdpbjogMCAwLjE0Mjg1NzE0Mjg1NzE0M3JlbSAwLjA3MTQyODU3MTQyODU3MXJlbSAwO1xcbn1cXG4uay1zZWxlY3Quay1taW5pID4gLmstd3JhcHBlciB7XFxuICBtaW4taGVpZ2h0OiAxLjg1NzE0Mjg1NzE0Mjg1N3JlbTtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxufVxcbi5rLXNlbGVjdC5rLW1pbmkgPiAuay13cmFwcGVyIC5rLWlucHV0LFxcbi5rLXNlbGVjdC5rLW1pbmkgPiAuay13cmFwcGVyIC5rLXBsYWNlaG9sZGVyLFxcbi5rLXNlbGVjdC5rLW1pbmkgPiAuay13cmFwcGVyIC5rLXZhbHVlIHtcXG4gIGxpbmUtaGVpZ2h0OiBjYWxjKDEuODU3MTQyODU3MTQyODU3cmVtIC0gMnB4KTtcXG59XFxuLmstc2VsZWN0LmstbWluaSA+IC5rLXdyYXBwZXIgLmstaW5wdXQgLmstaW5uZXIge1xcbiAgaGVpZ2h0OiBjYWxjKDEuODU3MTQyODU3MTQyODU3cmVtIC0gMnB4KTtcXG59XFxuLmstc2VsZWN0LmstbWluaSA+IC5rLXdyYXBwZXIgLmstdmFsdWVzIHtcXG4gIG1hcmdpbi10b3A6IDAuMDcxNDI4NTcxNDI4NTcxcmVtO1xcbn1cXG4uay1zZWxlY3Quay1taW5pID4gLmstd3JhcHBlciAuay12YWx1ZXMgLmstaW5wdXQge1xcbiAgbWFyZ2luLXRvcDogLTAuMDcxNDI4NTcxNDI4NTcxcmVtO1xcbn1cXG4uay1zZWxlY3Quay1taW5pID4gLmstd3JhcHBlciAuay10YWcge1xcbiAgbWFyZ2luOiAwIDAuMTQyODU3MTQyODU3MTQzcmVtIDAuMDcxNDI4NTcxNDI4NTcxcmVtIDA7XFxufVxcbi5rLXNlbGVjdC1kcm9wZG93biB7XFxuICBtaW4td2lkdGg6IGF1dG87XFxuICBtYXgtaGVpZ2h0OiAxNC4yODU3MTQyODU3MTQyODZyZW07XFxuICBvdmVyZmxvdzogYXV0bztcXG59XFxuLmstc2VsZWN0LWRyb3Bkb3duIC5rLWFjdGl2ZSB7XFxuICBjb2xvcjogIzBhNWVlZTtcXG59XFxuLmstc2VsZWN0LWRyb3Bkb3duIC5rLWdyb3VwID4gLmstbGFiZWwge1xcbiAgY29sb3I6ICM5OTk7XFxuICBwYWRkaW5nOiAwLjU3MTQyODU3MTQyODU3MXJlbTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWI/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlcj97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL3NlbGVjdC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvc2VsZWN0L2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay1zbGlkZXIge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XFxuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xcbiAgICAgIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XFxuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5rLXNsaWRlciAuay13cmFwcGVyIHtcXG4gIGhlaWdodDogMC41cmVtO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VhZWVmMjtcXG4gIGJvcmRlci1yYWRpdXM6IDAuNXJlbTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XFxuICAgICAgLW1zLWZsZXg6IDE7XFxuICAgICAgICAgIGZsZXg6IDE7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG4uay1zbGlkZXIgLmstd3JhcHBlciAuay1ib3gge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwLjVyZW07XFxuICBwYWRkaW5nOiA1cHggMnB4O1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5rLXNsaWRlciAuay13cmFwcGVyIC5rLWJveCA6bGFzdC1jaGlsZCB7XFxuICBmbG9hdDogcmlnaHQ7XFxufVxcbi5rLXNsaWRlciAuay13cmFwcGVyIC5rLWJhciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGE1ZWVlO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYm9yZGVyLXJhZGl1czogMC41cmVtO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxufVxcbi5rLXNsaWRlciAuay13cmFwcGVyIC5rLWhhbmRsZSB7XFxuICBoZWlnaHQ6IDFyZW07XFxuICB3aWR0aDogMXJlbTtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNTAlO1xcbiAgbWFyZ2luLXRvcDogLTAuNXJlbTtcXG4gIG1hcmdpbi1sZWZ0OiAtMC41cmVtO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZS1pbi1vdXQ7XFxuICBib3JkZXI6IDJweCBzb2xpZCAjMGE1ZWVlO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlLWluLW91dDtcXG59XFxuLmstc2xpZGVyIC5rLXdyYXBwZXIgLmstaGFuZGxlOmhvdmVyIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuNSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS41KTtcXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiO1xcbiAgY3Vyc29yOiBncmFiO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBhNWVlZTtcXG59XFxuLmstc2xpZGVyIC5rLXNwaW5uZXIge1xcbiAgbWFyZ2luLWxlZnQ6IDFyZW07XFxufVxcbi5rLXNsaWRlci5rLWRyYWdnaW5nIC5rLWJhciB7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IG5vbmU7XFxuICB0cmFuc2l0aW9uOiBub25lO1xcbn1cXG4uay1zbGlkZXIuay1kcmFnZ2luZyAuay1oYW5kbGUge1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBub25lO1xcbiAgdHJhbnNpdGlvbjogbm9uZTtcXG59XFxuLmstc2xpZGVyLmstZHJhZ2dpbmcgLmstaGFuZGxlLmstYWN0aXZlIHtcXG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcXG4gIGN1cnNvcjogZ3JhYmJpbmc7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS41KTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjUpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuNSk7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGE1ZWVlO1xcbn1cXG4uay1zbGlkZXIuay1kaXNhYmxlZCAuay13cmFwcGVyIHtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcbi5rLXNsaWRlci5rLWRpc2FibGVkIC5rLWJhciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5O1xcbn1cXG4uay1zbGlkZXIuay1kaXNhYmxlZCAuay1oYW5kbGUge1xcbiAgYm9yZGVyLWNvbG9yOiAjOTk5O1xcbn1cXG4uay1zbGlkZXIuay1kaXNhYmxlZCAuay1oYW5kbGU6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogbm9uZTtcXG4gICAgICAtbXMtdHJhbnNmb3JtOiBub25lO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IG5vbmU7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9zbGlkZXIvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz97XCJ1cmxcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanM/e1wicGx1Z2luc1wiOltudWxsXX0hLi9ub2RlX21vZHVsZXMvc3R5bHVzLWxvYWRlci9pbmRleC5qcz97XCJpbmNsdWRlIGNzc1wiOnRydWUsXCJzb3VyY2VNYXBcIjpmYWxzZX0hLi9jb21wb25lbnRzL3NsaWRlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstc3Bpbm5lciB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcbi5rLXNwaW5uZXIgLmstYnRuOmhvdmVyIHtcXG4gIHotaW5kZXg6IDE7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5rLXNwaW5uZXIgLmstbGVmdCB7XFxuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xcbiAgbWFyZ2luLXJpZ2h0OiAtMXB4O1xcbn1cXG4uay1zcGlubmVyIC5rLXJpZ2h0IHtcXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XFxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xcbiAgbWFyZ2luLWxlZnQ6IC0xcHg7XFxufVxcbi5rLXNwaW5uZXIgLmstaW5wdXQge1xcbiAgd2lkdGg6IDMuMjg1NzE0Mjg1NzE0Mjg2cmVtO1xcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcXG59XFxuLmstc3Bpbm5lciAuay1pbm5lciB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBwYWRkaW5nOiAwO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvc3Bpbm5lci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstc3RlcHMge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuLmstc3RlcHMgLmstc3RlcCB7XFxuICBmbG9hdDogbGVmdDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIC13ZWJraXQtYm94LWZsZXg6IDE7XFxuICAgICAgLW1zLWZsZXg6IDE7XFxuICAgICAgICAgIGZsZXg6IDE7XFxuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcXG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xcbiAgZGlzcGxheTogZmxleDtcXG59XFxuLmstc3RlcHMgLmstaGVhZCB7XFxuICBmbG9hdDogbGVmdDtcXG4gIHBhZGRpbmctcmlnaHQ6IDAuNzE0Mjg1NzE0Mjg1NzE0cmVtO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmstc3RlcHMgLmstaGVhZCAuay1pbm5lciB7XFxuICB3aWR0aDogMS40Mjg1NzE0Mjg1NzE0MjlyZW07XFxuICBoZWlnaHQ6IDEuNDI4NTcxNDI4NTcxNDI5cmVtO1xcbiAgbGluZS1oZWlnaHQ6IGNhbGMoMS40Mjg1NzE0Mjg1NzE0MjlyZW0gLSAycHgpO1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcXG4gIGNvbG9yOiAjOTk5O1xcbn1cXG4uay1zdGVwcyAuay1oZWFkIC5rLWljb246YmVmb3JlIHtcXG4gIGZvbnQtc2l6ZTogMS43MTQyODU3MTQyODU3MTRyZW07XFxuICBsaW5lLWhlaWdodDogY2FsYygxLjQyODU3MTQyODU3MTQyOXJlbSAtIDJweCk7XFxufVxcbi5rLXN0ZXBzIC5rLW1haW4ge1xcbiAgZmxvYXQ6IGxlZnQ7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBjb2xvcjogIzk5OTtcXG59XFxuLmstc3RlcHMgLmstdGl0bGUge1xcbiAgbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDI4NTcxNDI5cmVtO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBwYWRkaW5nLXJpZ2h0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbn1cXG4uay1zdGVwcyAuay1jb250ZW50IHtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxuICBtYXJnaW46IDAuMzU3MTQyODU3MTQyODU3cmVtIDAgMDtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxufVxcbi5rLXN0ZXBzIC5rLXRhaWwge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgbGVmdDogMDtcXG4gIHJpZ2h0OiAwLjcxNDI4NTcxNDI4NTcxNHJlbTtcXG4gIHRvcDogMC43MTQyODU3MTQyODU3MTRyZW07XFxuICBoZWlnaHQ6IDFweDtcXG4gIGJhY2tncm91bmQ6ICNkOWQ5ZDk7XFxufVxcbi5rLXN0ZXBzIC5rLXN0ZXA6bGFzdC1vZi10eXBlIHtcXG4gIC13ZWJraXQtYm94LWZsZXg6IDA7XFxuICAgICAgLW1zLWZsZXg6IDA7XFxuICAgICAgICAgIGZsZXg6IDA7XFxufVxcbi5rLXN0ZXBzIC5rLXN0ZXA6bGFzdC1vZi10eXBlIC5rLXRhaWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuLmstc3RlcHMgLmstc3RlcDpsYXN0LW9mLXR5cGUgLmstdGl0bGUge1xcbiAgcGFkZGluZy1yaWdodDogMDtcXG59XFxuLmstc3RlcHMgLmstZG9uZSAuay1pbm5lciB7XFxuICBjb2xvcjogIzBhNWVlZTtcXG4gIGJvcmRlci1jb2xvcjogIzBhNWVlZTtcXG59XFxuLmstc3RlcHMgLmstZG9uZSAuay10YWlsIHtcXG4gIGJhY2tncm91bmQ6ICMwYTVlZWU7XFxufVxcbi5rLXN0ZXBzIC5rLWFjdGl2ZSAuay1pbm5lciB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogIzBhNWVlZTtcXG4gIGJhY2tncm91bmQ6ICMwYTVlZWU7XFxufVxcbi5rLXN0ZXBzIC5rLWFjdGl2ZSAuay1tYWluIHtcXG4gIGNvbG9yOiAjNTk1OTU5O1xcbn1cXG4uay1zdGVwcyAuay1lcnJvciAuay1pbm5lciB7XFxuICBjb2xvcjogI2RiMjgyODtcXG4gIGJvcmRlci1jb2xvcjogI2RiMjgyODtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxufVxcbi5rLXN0ZXBzIC5rLWVycm9yIC5rLW1haW4ge1xcbiAgY29sb3I6ICNkYjI4Mjg7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy9zdGVwcy9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvc3RlcHMvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rLXRhYnMge1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjYWQwZGQ7XFxufVxcbi5rLXRhYnMgLmstdGFiIHtcXG4gIGhlaWdodDogNC4yMTQyODU3MTQyODU3MTRyZW07XFxuICBsaW5lLWhlaWdodDogY2FsYyg0LjIxNDI4NTcxNDI4NTcxNHJlbSAtIDJweCk7XFxuICBwYWRkaW5nOiAwIDAuNTcxNDI4NTcxNDI4NTcxcmVtO1xcbiAgbWFyZ2luOiAwIDAuNzE0Mjg1NzE0Mjg1NzE0cmVtO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgY29sb3I6ICM1OTU5NTk7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbn1cXG4uay10YWJzIC5rLXRhYi5rLWFjdGl2ZSB7XFxuICBjb2xvcjogIzBhNWVlZTtcXG59XFxuLmstdGFicyAuay10YWIuay1hY3RpdmU6YWZ0ZXIge1xcbiAgY29udGVudDogJyc7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGhlaWdodDogMC4xNDI4NTcxNDI4NTcxNDNyZW07XFxuICB3aWR0aDogMTAwJTtcXG4gIGJhY2tncm91bmQ6ICMwYTVlZWU7XFxuICBtYXJnaW4tbGVmdDogLTAuNTcxNDI4NTcxNDI4NTcxcmVtO1xcbiAgYm90dG9tOiAtMC4wNzE0Mjg1NzE0Mjg1NzFyZW07XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy90YWJzL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBpZCA9IC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXIvaW5kZXguanM/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy90YWJzL2luZGV4LnN0eWxcbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuay10b29sdGlwIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuLmstdG9vbHRpcC1jb250ZW50IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMnB4IDhweCAwIHJnYmEoMTkxLDE5MSwxOTEsMC41KTtcXG4gICAgICAgICAgYm94LXNoYWRvdzogMCAycHggOHB4IDAgcmdiYSgxOTEsMTkxLDE5MSwwLjUpO1xcbiAgcGFkZGluZzogMC4zNTcxNDI4NTcxNDI4NTdyZW0gMC43MTQyODU3MTQyODU3MTRyZW07XFxuICBib3JkZXItcmFkaXVzOiAwLjE0Mjg1NzE0Mjg1NzE0M3JlbTtcXG4gIGZvbnQtc2l6ZTogMC44NTcxNDI4NTcxNDI4NTdyZW07XFxuICBjb2xvcjogIzBhNWVlZTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XFxuICB6LWluZGV4OiA5OTk5O1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdzpiZWZvcmUsXFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBib3JkZXItc3R5bGU6IHNvbGlkO1xcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3c6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6ICcgJztcXG59XFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1jZW50ZXIge1xcbiAgbGVmdDogNTAlO1xcbiAgbWFyZ2luLWxlZnQ6IC02cHg7XFxufVxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstdG9wOmJlZm9yZSxcXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLWJvdHRvbTpiZWZvcmUsXFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay10b3AsXFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1ib3R0b20ge1xcbiAgYm9yZGVyLXdpZHRoOiA4cHggNnB4O1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLXRvcDpiZWZvcmUsXFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1ib3R0b206YmVmb3JlIHtcXG4gIGxlZnQ6IC02cHg7XFxufVxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstdG9wIHtcXG4gIHRvcDogLTE2cHg7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiByZ2JhKDE5MSwxOTEsMTkxLDAuMik7XFxufVxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstdG9wOmJlZm9yZSB7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiAjZmZmO1xcbiAgdG9wOiAtN3B4O1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLWJvdHRvbSB7XFxuICBib3R0b206IC0xNnB4O1xcbiAgYm9yZGVyLXRvcC1jb2xvcjogcmdiYSgxOTEsMTkxLDE5MSwwLjIpO1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLWJvdHRvbTpiZWZvcmUge1xcbiAgYm9yZGVyLXRvcC1jb2xvcjogI2ZmZjtcXG4gIGJvdHRvbTogLTdweDtcXG59XFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1taWRkbGUge1xcbiAgdG9wOiA1MCU7XFxuICBtYXJnaW4tdG9wOiAtNnB4O1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLWxlZnQ6YmVmb3JlLFxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstcmlnaHQ6YmVmb3JlLFxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstbGVmdCxcXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLXJpZ2h0IHtcXG4gIGJvcmRlci13aWR0aDogNnB4IDhweDtcXG59XFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1sZWZ0OmJlZm9yZSxcXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLXJpZ2h0OmJlZm9yZSB7XFxuICB0b3A6IC02cHg7XFxufVxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstbGVmdCB7XFxuICBsZWZ0OiAtMTZweDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogcmdiYSgxOTEsMTkxLDE5MSwwLjIpO1xcbn1cXG4uay10b29sdGlwLWNvbnRlbnQgPiAuay1hcnJvdy5rLWxlZnQ6YmVmb3JlIHtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZjtcXG4gIGxlZnQ6IC03cHg7XFxufVxcbi5rLXRvb2x0aXAtY29udGVudCA+IC5rLWFycm93LmstcmlnaHQge1xcbiAgcmlnaHQ6IC0xNnB4O1xcbiAgYm9yZGVyLWxlZnQtY29sb3I6IHJnYmEoMTkxLDE5MSwxOTEsMC4yKTtcXG59XFxuLmstdG9vbHRpcC1jb250ZW50ID4gLmstYXJyb3cuay1yaWdodDpiZWZvcmUge1xcbiAgYm9yZGVyLWxlZnQtY29sb3I6ICNmZmY7XFxuICByaWdodDogLTdweDtcXG59XFxuLmstdG9vbHRpcC1jb250ZW50LmstY2Fubm90LWhvdmVyIHtcXG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYj97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvdG9vbHRpcC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvdG9vbHRpcC9pbmRleC5zdHlsXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmstdHJhbnNmZXIgLmstcGFuZWwsXFxuLmstdHJhbnNmZXIgLmstYXJyb3dzIHtcXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxufVxcbi5rLXRyYW5zZmVyIC5rLXBhbmVsIHtcXG4gIHdpZHRoOiAyMS40Mjg1NzE0Mjg1NzE0MjdyZW07XFxufVxcbi5rLXRyYW5zZmVyIC5rLXRpdGxlIHtcXG4gIGNvbG9yOiAjNDA0MDQwO1xcbiAgbGluZS1oZWlnaHQ6IDIuMTQyODU3MTQyODU3MTQzcmVtO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG4uay10cmFuc2ZlciAuay1saXN0IHtcXG4gIGhlaWdodDogMjEuNDI4NTcxNDI4NTcxNDI3cmVtO1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2NhZDBkZDtcXG4gIGJvcmRlci1yYWRpdXM6IDAuMTQyODU3MTQyODU3MTQzcmVtO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcbi5rLXRyYW5zZmVyIC5rLWl0ZW0ge1xcbiAgY29sb3I6ICM1OTU5NTk7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgICAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xcbiAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG59XFxuLmstdHJhbnNmZXIgLmstaXRlbTpub3QoLmstZGlzYWJsZWQpOmhvdmVyIHtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxufVxcbi5rLXRyYW5zZmVyIC5rLWNoZWNrYm94IHtcXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcbi5rLXRyYW5zZmVyIC5rLWlucHV0IHtcXG4gIG1hcmdpbi1ib3R0b206IC0xcHg7XFxufVxcbi5rLXRyYW5zZmVyIC5rLWFycm93cyAuay1idG4ge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXJnaW46IDEwcHg7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1widXJsXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliP3tcInBsdWdpbnNcIjpbbnVsbF19IS4vbm9kZV9tb2R1bGVzL3N0eWx1cy1sb2FkZXI/e1wiaW5jbHVkZSBjc3NcIjp0cnVlLFwic291cmNlTWFwXCI6ZmFsc2V9IS4vY29tcG9uZW50cy90cmFuc2Zlci9pbmRleC5zdHlsXG4vLyBtb2R1bGUgaWQgPSAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInVybFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcz97XCJwbHVnaW5zXCI6W251bGxdfSEuL25vZGVfbW9kdWxlcy9zdHlsdXMtbG9hZGVyL2luZGV4LmpzP3tcImluY2x1ZGUgY3NzXCI6dHJ1ZSxcInNvdXJjZU1hcFwiOmZhbHNlfSEuL2NvbXBvbmVudHMvdHJhbnNmZXIvaW5kZXguc3R5bFxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Z+656GA55So5rOVXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4fmt7vliqA8Y29kZT50bzwvY29kZT7lsZ7mgKfvvIzmnaXlsZXnpLrotoXpk77mjqU8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0JyZWFkY3J1bWIsIEJyZWFkY3J1bWJJdGVtfSBmcm9tICdrcGMvY29tcG9uZW50cy9icmVhZGNydW1iJztcXG5cXG48QnJlYWRjcnVtYj5cXG4gICAgPEJyZWFkY3J1bWJJdGVtIHRvPVxcXCIvXFxcIj5pdGVtIDE8L0JyZWFkY3J1bWJJdGVtPlxcbiAgICA8QnJlYWRjcnVtYkl0ZW0gdG89XFxcIi9jb21wb25lbnRzL2JyZWFkY3J1bWIvXFxcIj5pdGVtIDI8L0JyZWFkY3J1bWJJdGVtPlxcbiAgICA8QnJlYWRjcnVtYkl0ZW0+aXRlbSAzPC9CcmVhZGNydW1iSXRlbT5cXG48L0JyZWFkY3J1bWI+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjAsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7QnJlYWRjcnVtYiwgQnJlYWRjcnVtYkl0ZW19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2JyZWFkY3J1bWInPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CcmVhZGNydW1iPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJyZWFkY3J1bWJJdGVtPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50bzwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiL1xcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDE8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYkl0ZW08L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCIvY29tcG9uZW50cy9icmVhZGNydW1iL1xcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDM8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnJlYWRjcnVtYjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9icmVhZGNydW1iL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2JyZWFkY3J1bWIvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5oyH5a6a5YiG6ZqU56ymXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5zZXBhcmF0b3I8L2NvZGU+5bGe5oCn5Y+v5Lul5oyH5a6a5YiG6ZqU56ym77yM6K+l5bGe5oCn5YC85Lya5L2/55SoPGNvZGU+aW5uZXJIVE1MPC9jb2RlPuWGmeWFpe+8jOaJgOS7peWPr+S7peS9v+eUqOS7u+aEj2h0bWzlrZfnrKbkuLLjgII8L3A+XFxuPGJsb2NrcXVvdGU+XFxuPHA+5L2/55SoPGNvZGU+aW5uZXJIVE1MPC9jb2RlPuWtmOWcqFhTU+mjjumZqe+8jOmcgOimgeiHquihjOinhOmBvzwvcD5cXG48L2Jsb2NrcXVvdGU+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0JyZWFkY3J1bWIsIEJyZWFkY3J1bWJJdGVtfSBmcm9tICdrcGMvY29tcG9uZW50cy9icmVhZGNydW1iJztcXG5cXG48QnJlYWRjcnVtYiBzZXBhcmF0b3I9XFxcIjxiIGNsYXNzPSdzZXBhcmF0b3InPj0+PC9iPlxcXCI+XFxuICAgIDxCcmVhZGNydW1iSXRlbSB0bz1cXFwiL1xcXCI+XFxuICAgICAgICA8aSBjbGFzcz1cXFwiaW9uLWhvbWVcXFwiIC8+IGl0ZW0gMVxcbiAgICA8L0JyZWFkY3J1bWJJdGVtPlxcbiAgICA8QnJlYWRjcnVtYkl0ZW0gdG89XFxcIi9jb21wb25lbnRzL2JyZWFkY3J1bWIvXFxcIj5cXG4gICAgICAgIDxpIGNsYXNzPVxcXCJpb24tZWFydGhcXFwiIC8+IGl0ZW0gMlxcbiAgICA8L0JyZWFkY3J1bWJJdGVtPlxcbiAgICA8QnJlYWRjcnVtYkl0ZW0+XFxuICAgICAgICA8aSBjbGFzcz1cXFwiaW9uLXBsYW5ldFxcXCIgLz4gaXRlbSAzXFxuICAgIDwvQnJlYWRjcnVtYkl0ZW0+XFxuPC9CcmVhZGNydW1iPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLnNlcGFyYXRvclxcbiAgICBjb2xvciAjZmZhMTMzXFxuaVxcbiAgICBtYXJnaW4tcmlnaHQgM3B4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtCcmVhZGNydW1iLCBCcmVhZGNydW1iSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvYnJlYWRjcnVtYic8L3NwYW4+O1xcblxcbiZsdDtCcmVhZGNydW1iIHNlcGFyYXRvcj1cXFwiJmx0O2IgY2xhc3M9J3NlcGFyYXRvcicmZ3Q7PSZndDsmbHQ7L2ImZ3Q7XFxcIiZndDtcXG4gICAgJmx0O0JyZWFkY3J1bWJJdGVtIHRvPVxcXCIvXFxcIiZndDtcXG4gICAgICAgICZsdDtpIGNsYXNzPVxcXCJpb24taG9tZVxcXCIgLyZndDsgaXRlbSAxXFxuICAgICZsdDsvQnJlYWRjcnVtYkl0ZW0mZ3Q7XFxuICAgICZsdDtCcmVhZGNydW1iSXRlbSB0bz1cXFwiL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9cXFwiJmd0O1xcbiAgICAgICAgJmx0O2kgY2xhc3M9XFxcImlvbi1lYXJ0aFxcXCIgLyZndDsgaXRlbSAyXFxuICAgICZsdDsvQnJlYWRjcnVtYkl0ZW0mZ3Q7XFxuICAgICZsdDtCcmVhZGNydW1iSXRlbSZndDtcXG4gICAgICAgICZsdDtpIGNsYXNzPVxcXCJpb24tcGxhbmV0XFxcIiAvJmd0OyBpdGVtIDNcXG4gICAgJmx0Oy9CcmVhZGNydW1iSXRlbSZndDtcXG4mbHQ7L0JyZWFkY3J1bWImZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LnNlcGFyYXRvcjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5jb2xvcjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4jZmZhMTMzPC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLXRhZ1xcXCI+aTwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+M3B4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2JyZWFkY3J1bWIvZGVtb3Mvc2VwYXJhdG9yL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2JyZWFkY3J1bWIvZGVtb3Mvc2VwYXJhdG9yL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuaMiemSruexu+Wei1wiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5pyJ5aaC5LiL5Yeg56eN57G75Z6L77ya6buY6K6k5oyJ6ZKu77yM5Li75oyJ6ZKu77yM6K2m5ZGK5oyJ6ZKu77yM5Y2x6Zmp5oyJ6ZKu77yM5paH5a2X5oyJ6ZKu44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IEJ1dHRvbiBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbjxkaXY+XFxuICAgIDxCdXR0b24+ZGVmYXVsdDwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiPnByaW1heTwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcIndhcm5pbmdcXFwiPndhcm5pbmc8L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiB0eXBlPVxcXCJkYW5nZXJcXFwiPmRhbmdlcjwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcIm5vbmVcXFwiPm5vbmU8L0J1dHRvbj5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWJ0blxcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifSx7XCJsYW5ndWFnZVwiOlwidnVlXCIsXCJjb250ZW50XCI6XCI8dGVtcGxhdGU+XFxuICAgIDxkaXY+XFxuICAgICAgICA8QnV0dG9uPmRlZmF1bHQ8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCI+cHJpbWF5PC9CdXR0b24+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcIndhcm5pbmdcXFwiPndhcm5pbmc8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwiZGFuZ2VyXFxcIj5kYW5nZXI8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwibm9uZVxcXCI+bm9uZTwvQnV0dG9uPlxcbiAgICA8L2Rpdj5cXG48L3RlbXBsYXRlPlxcbjxzdHlsZSBzcmM9XFxcIi4vaW5kZXguc3R5bFxcXCIgbGFuZz1cXFwic3R5bHVzXFxcIj48L3N0eWxlPlxcbjxzY3JpcHQ+XFxuaW1wb3J0IEJ1dHRvbiBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbmV4cG9ydCBkZWZhdWx0IHtcXG4gICAgY29tcG9uZW50czoge1xcbiAgICAgICAgQnV0dG9uXFxuICAgIH1cXG59XFxuPC9zY3JpcHQ+XCJ9XSxcImluZGV4XCI6MyxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+ZGVmYXVsdDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPnByaW1heTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJ3YXJuaW5nXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPndhcm5pbmc8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGFuZ2VyXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmRhbmdlcjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJub25lXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPm5vbmU8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1idG48L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwidnVlXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGh0bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnRlbXBsYXRlPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+ZGVmYXVsdDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5wcmltYXk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIndhcm5pbmdcXFwiPC9zcGFuPiZndDs8L3NwYW4+d2FybmluZzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGFuZ2VyXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmRhbmdlcjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibm9uZVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5ub25lPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnRlbXBsYXRlPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+c3R5bGU8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNyYzwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiLi9pbmRleC5zdHlsXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGFuZzwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic3R5bHVzXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJ1bmRlZmluZWRcXFwiPjwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+c3R5bGU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zY3JpcHQ8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiamF2YXNjcmlwdFxcXCI+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBCdXR0b24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvYnV0dG9uJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiB7XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNvbXBvbmVudHM8L3NwYW4+OiB7XFxuICAgICAgICBCdXR0b25cXG4gICAgfVxcbn1cXG48L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNjcmlwdDwvc3Bhbj4mZ3Q7PC9zcGFuPjwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2J1dHRvbi9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi56aB55So54q25oCBXCIsXCJvcmRlclwiOjV9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mt7vliqA8Y29kZT5kaXNhYmxlZDwvY29kZT7lsZ7mgKfvvIzlj6/ku6XnpoHnlKjmjInpkq48L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPEJ1dHRvbiBkaXNhYmxlZD5kaXNhYmxlZDwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIGRpc2FibGVkIHR5cGU9XFxcIm5vbmVcXFwiPmRpc2FibGVkIHRleHQ8L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiBkaXNhYmxlZCBpY29uIGNpcmNsZT48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjQsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBCdXR0b24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvYnV0dG9uJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+Jmd0Ozwvc3Bhbj5kaXNhYmxlZDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kaXNhYmxlZDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibm9uZVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5kaXNhYmxlZCB0ZXh0PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRpc2FibGVkPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pY29uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jaXJjbGU8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2Rpc2FibGVkL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2J1dHRvbi9kZW1vcy9kaXNhYmxlZC9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLmjInpkq7nu4RcIixcIm9yZGVyXCI6MX0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWwhjxjb2RlPkJ1dHRvbjwvY29kZT7kvZzkuLo8Y29kZT5CdXR0b25Hcm91cDwvY29kZT7nmoTlrZDlhYPntKDvvIzlj6/ku6XlsZXnpLrmjInpkq7nu4TjgILnu5k8Y29kZT5CdXR0b25Hcm91cDwvY29kZT7mt7vliqA8Y29kZT52ZXJ0aWNhbDwvY29kZT7lsZ7mgKfvvIzlj6/ku6XmmK/mjInpkq7nu4TnurXlkJHmjpLliJfjgILnu5k8Y29kZT5CdXR0b25Hcm91cDwvY29kZT7mt7vliqA8Y29kZT5jaGVja1R5cGU8L2NvZGU+5bGe5oCn77yM5Y+v5Lul5L2/5oyJ6ZKu57uE5oul5pyJ5Y2V6YCJ5oiW5aSN6YCJ6IO95Yqb44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtCdXR0b24sIEJ1dHRvbkdyb3VwfSBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbjxkaXY+XFxuICAgIDxCdXR0b25Hcm91cD5cXG4gICAgICAgIDxCdXR0b24+5byA5py6PC9CdXR0b24+XFxuICAgICAgICA8QnV0dG9uPuWFs+acujwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbj7ph43lkK88L0J1dHRvbj5cXG4gICAgPC9CdXR0b25Hcm91cD5cXG4gICAgPEJ1dHRvbkdyb3VwPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+5byA5py6PC9CdXR0b24+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj7lhbPmnLo8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPumHjeWQrzwvQnV0dG9uPlxcbiAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICA8QnV0dG9uR3JvdXA+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj5cXG4gICAgICAgICAgICA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3MtYXJyb3ctbGVmdFxcXCI+PC9pPuS4iuS4gOmhtVxcbiAgICAgICAgPC9CdXR0b24+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj5cXG4gICAgICAgICAgICDkuIvkuIDpobU8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3MtYXJyb3ctcmlnaHRcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICA8YnIgLz48YnIgLz5cXG4gICAgPHA+57q15ZCR5oyJ6ZKu57uEPC9wPlxcbiAgICA8QnV0dG9uR3JvdXAgdmVydGljYWw+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj7lvIDmnLo8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPuWFs+acujwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+6YeN5ZCvPC9CdXR0b24+XFxuICAgIDwvQnV0dG9uR3JvdXA+XFxuICAgIDxiciAvPjxiciAvPlxcbiAgICA8cD5yYWRpb+aMiemSrue7hDwvcD5cXG4gICAgPEJ1dHRvbkdyb3VwIGNoZWNrVHlwZT1cXFwicmFkaW9cXFwiIHYtbW9kZWw9XFxcImNpdHlcXFwiPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwiYmVpamluZ1xcXCIgdHlwZT1cXFwic21hbGxcXFwiPuWMl+S6rDwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwic2hhbmdoYWlcXFwiIHR5cGU9XFxcInNtYWxsXFxcIj7kuIrmtbc8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdmFsdWU9XFxcImd1YW5nemhvdVxcXCIgdHlwZT1cXFwic21hbGxcXFwiPuW5v+W3njwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwic2hlbnpoZW5cXFwiIHR5cGU9XFxcInNtYWxsXFxcIj7mt7HlnLM8L0J1dHRvbj5cXG4gICAgPC9CdXR0b25Hcm91cD5cXG4gICAgPHA+Y2hlY2tib3jmjInpkq7nu4Q8L3A+XFxuICAgIDxCdXR0b25Hcm91cCBjaGVja1R5cGU9XFxcImNoZWNrYm94XFxcIiB2LW1vZGVsPVxcXCJjaXRpZXNcXFwiPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwiYmVpamluZ1xcXCIgdHlwZT1cXFwic21hbGxcXFwiPuWMl+S6rDwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwic2hhbmdoYWlcXFwiIHR5cGU9XFxcInNtYWxsXFxcIj7kuIrmtbc8L0J1dHRvbj5cXG4gICAgICAgIDxCdXR0b24gdmFsdWU9XFxcImd1YW5nemhvdVxcXCIgdHlwZT1cXFwic21hbGxcXFwiPuW5v+W3njwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwic2hlbnpoZW5cXFwiIHR5cGU9XFxcInNtYWxsXFxcIj7mt7HlnLM8L0J1dHRvbj5cXG4gICAgPC9CdXR0b25Hcm91cD5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWJ0bnNcXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgY2l0eTogJ2JlaWppbmcnXFxuICAgICAgICB9O1xcbiAgICB9XFxufVwifSx7XCJsYW5ndWFnZVwiOlwidnVlXCIsXCJjb250ZW50XCI6XCI8dGVtcGxhdGU+XFxuICAgIDxkaXY+XFxuICAgICAgICA8QnV0dG9uR3JvdXA+XFxuICAgICAgICAgICAgPEJ1dHRvbj7lvIDmnLo8L0J1dHRvbj5cXG4gICAgICAgICAgICA8QnV0dG9uPuWFs+acujwvQnV0dG9uPlxcbiAgICAgICAgICAgIDxCdXR0b24+6YeN5ZCvPC9CdXR0b24+XFxuICAgICAgICA8L0J1dHRvbkdyb3VwPlxcbiAgICAgICAgPEJ1dHRvbkdyb3VwPlxcbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPuW8gOacujwvQnV0dG9uPlxcbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPuWFs+acujwvQnV0dG9uPlxcbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgc2l6ZT1cXFwic21hbGxcXFwiPumHjeWQrzwvQnV0dG9uPlxcbiAgICAgICAgPC9CdXR0b25Hcm91cD5cXG4gICAgICAgIDxCdXR0b25Hcm91cCB2ZXJ0aWNhbD5cXG4gICAgICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj7lvIDmnLo8L0J1dHRvbj5cXG4gICAgICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj7lhbPmnLo8L0J1dHRvbj5cXG4gICAgICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIj7ph43lkK88L0J1dHRvbj5cXG4gICAgICAgIDwvQnV0dG9uR3JvdXA+XFxuICAgIDwvZGl2PlxcbjwvdGVtcGxhdGU+XFxuPHN0eWxlIHNyYz1cXFwiLi9pbmRleC5zdHlsXFxcIiBsYW5nPVxcXCJzdHlsdXNcXFwiPjwvc3R5bGU+XFxuPHNjcmlwdD5cXG5pbXBvcnQge0J1dHRvbiwgQnV0dG9uR3JvdXB9IGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuZXhwb3J0IGRlZmF1bHQge1xcbiAgICBjb21wb25lbnRzOiB7XFxuICAgICAgICBCdXR0b24sIEJ1dHRvbkdyb3VwXFxuICAgIH1cXG59XFxuPC9zY3JpcHQ+XCJ9XSxcImluZGV4XCI6NSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtCdXR0b24sIEJ1dHRvbkdyb3VwfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPuW8gOacujxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPuWFs+acujxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPumHjeWQrzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7lvIDmnLo8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7lhbPmnLo8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7ph43lkK88c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b25Hcm91cDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b25Hcm91cDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24taW9zLWFycm93LWxlZnRcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj7kuIrkuIDpobVcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNpemU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIOS4i+S4gOmhtTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWlvcy1hcnJvdy1yaWdodFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+cDwvc3Bhbj4mZ3Q7PC9zcGFuPue6teWQkeaMiemSrue7hDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5wPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52ZXJ0aWNhbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5byA5py6PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5YWz5py6PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+6YeN5ZCvPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+cDwvc3Bhbj4mZ3Q7PC9zcGFuPnJhZGlv5oyJ6ZKu57uEPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNoZWNrVHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicmFkaW9cXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjaXR5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiYmVpamluZ1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuWMl+S6rDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNoYW5naGFpXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5LiK5rW3PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZ3Vhbmd6aG91XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5bm/5beePHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic2hlbnpoZW5cXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mt7HlnLM8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b25Hcm91cDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5wPC9zcGFuPiZndDs8L3NwYW4+Y2hlY2tib3jmjInpkq7nu4Q8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+cDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b25Hcm91cDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2hlY2tUeXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjaGVja2JveFxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImNpdGllc1xcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImJlaWppbmdcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7ljJfkuqw8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzaGFuZ2hhaVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuS4iua1tzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImd1YW5nemhvdVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuW5v+W3njxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNoZW56aGVuXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5rex5ZyzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWJ0bnM8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgZGVmYXVsdHMoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5yZXR1cm48L3NwYW4+IHtcXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jaXR5PC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nYmVpamluZyc8L3NwYW4+XFxuICAgICAgICB9O1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInZ1ZVwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBodG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj50ZW1wbGF0ZTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+5byA5py6PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPuWFs+acujxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj7ph43lkK88c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+5byA5py6PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNpemU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuWFs+acujxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7ph43lkK88c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52ZXJ0aWNhbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNpemU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuW8gOacujxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzbWFsbFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7lhbPmnLo8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+6YeN5ZCvPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+dGVtcGxhdGU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zdHlsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3JjPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCIuL2luZGV4LnN0eWxcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sYW5nPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJzdHlsdXNcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcInVuZGVmaW5lZFxcXCI+PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zdHlsZTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNjcmlwdDwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJqYXZhc2NyaXB0XFxcIj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtCdXR0b24sIEJ1dHRvbkdyb3VwfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IHtcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y29tcG9uZW50czwvc3Bhbj46IHtcXG4gICAgICAgIEJ1dHRvbiwgQnV0dG9uR3JvdXBcXG4gICAgfVxcbn1cXG48L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNjcmlwdDwvc3Bhbj4mZ3Q7PC9zcGFuPjwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2J1dHRvbi9kZW1vcy9ncm91cC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3MvZ3JvdXAvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Zu+5qCH5oyJ6ZKuXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7nu5k8Y29kZT5CdXR0b248L2NvZGU+5re75YqgPGNvZGU+aWNvbjwvY29kZT7lsZ7mgKfvvIzlj6/ku6XlsZXnpLrlm77moIfmjInpkq7jgILlm77moIfmjInpkq7ku4Xku4XmmK/kvb/mjInpkq7nmoTlrr3pq5jnm7jnrYnvvIzmraTml7bkvaDlj6/ku6XlsIbku7vmhI/lm77moIflhYPntKDkvZzkuLrlroPnmoTlrZDlhYPntKDjgII8Y29kZT5jaXJjbGU8L2NvZGU+5bGe5oCn5Y+v5Lul5bGV56S65ZyG5b2i5Zu+5qCH44CC5aaC5p6c5L2g5LiN6ZyA6KaB5a696auY55u4562J55qE5Zu+5qCH5oyJ6ZKu77yM6ICM5LuF5LuF5piv5bim5Zu+5qCH55qE5paH5a2X5oyJ6ZKu77yM5Y675o6JPGNvZGU+aWNvbjwvY29kZT7lsZ7mgKfljbPlj6/jgII8L3A+XFxuPGJsb2NrcXVvdGU+XFxuPHA+6K+357uZ5Zu+5qCH5YWD57Sg5re75YqgPGNvZGU+ay1pY29uPC9jb2RlPuexu+WQje+8jOeUqOS6juWumuS9jeWbvuagh+WFg+e0oO+8jOS7peS+v+aMiemSruWPmOS4ujxjb2RlPmxvYWRpbmc8L2NvZGU+54q25oCB5pe26IO95aSf5bCG5a6D5pu/5o2i5Li6bG9hZGluZ+WbvuaghzwvcD5cXG48L2Jsb2NrcXVvdGU+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPEJ1dHRvbiBpY29uPjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIGljb24gY2lyY2xlPjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvQnV0dG9uPlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiPjxpIGNsYXNzPVxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPjwvaT7mkJzntKI8L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiBjaXJjbGUgdHlwZT0ncHJpbWFyeSc+PGkgY2xhc3M9XFxcImstaWNvbiBpb24taW9zLXNlYXJjaFxcXCI+PC9pPuaQnOe0ojwvQnV0dG9uPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstYnRuXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pY29uPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImlvbi1pb3Mtc2VhcmNoXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmljb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNpcmNsZTwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJpb24taW9zLXNlYXJjaFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj7mkJzntKI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2lyY2xlPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidwcmltYXJ5Jzwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj7mkJzntKI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1idG48L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2ljb24vaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2ljb24vaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Yqg6L2954q25oCB5oyJ6ZKuXCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mt7vliqA8Y29kZT5sb2FkaW5nPC9jb2RlPuWxnuaAp++8jOWPr+S7peWwhuaMiemSruiuvuS4uuWKoOi9veeKtuaAge+8jOatpOaXtuaMiemSruS4jeWPr+eCueOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBCdXR0b24gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48ZGl2PlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGxvYWRpbmc+56Gu6K6kPC9CdXR0b24+XFxuICAgIDxCdXR0b24gaWNvbiBjaXJjbGUgbG9hZGluZz48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+XFxuICAgIDxiciAvPiA8YnIgLz5cXG4gICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBcXG4gICAgICAgIGxvYWRpbmc9e3sgc2VsZi5nZXQoJ2xvYWRpbmcxJykgfX1cXG4gICAgICAgIGV2LWNsaWNrPXt7IHNlbGYub25DbGljay5iaW5kKHNlbGYsICdsb2FkaW5nMScpIH19XFxuICAgID7ngrnlh7vliqDovb08L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBcXG4gICAgICAgIGxvYWRpbmc9e3sgc2VsZi5nZXQoJ2xvYWRpbmcyJykgfX1cXG4gICAgICAgIGV2LWNsaWNrPXt7IHNlbGYub25DbGljay5iaW5kKHNlbGYsICdsb2FkaW5nMicpIH19XFxuICAgID48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+54K55Ye75Yqg6L29PC9CdXR0b24+XFxuICAgIDxCdXR0b24gaWNvbiBjaXJjbGVcXG4gICAgICAgIGxvYWRpbmc9e3sgc2VsZi5nZXQoJ2xvYWRpbmczJykgfX1cXG4gICAgICAgIGV2LWNsaWNrPXt7IHNlbGYub25DbGljay5iaW5kKHNlbGYsICdsb2FkaW5nMycpIH19XFxuICAgID48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+XFxuICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCIgXFxuICAgICAgICBsb2FkaW5nPXt7IHNlbGYuZ2V0KCdsb2FkaW5nNCcpIH19XFxuICAgICAgICBldi1jbGljaz17eyBzZWxmLm9uQ2xpY2suYmluZChzZWxmLCAnbG9hZGluZzQnKSB9fVxcbiAgICA+5Zu+5qCH5Zyo5Y+z5L6nPGkgY2xhc3M9XFxcImstaWNvbiBpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvQnV0dG9uPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstYnRuXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgb25DbGljayhuYW1lKSB7XFxuICAgICAgICB0aGlzLnNldChuYW1lLCB0cnVlKTtcXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjo3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sb2FkaW5nPC9zcGFuPiZndDs8L3NwYW4+56Gu6K6kPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmljb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNpcmNsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bG9hZGluZzwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiBcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxvYWRpbmc8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuZ2V0PC9zcGFuPignPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bG9hZGluZzE8L3NwYW4+JykgfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWNsaWNrPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLm9uQ2xpY2suYmluZDwvc3Bhbj4oPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZjwvc3Bhbj4sICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sb2FkaW5nMTwvc3Bhbj4nKSB9fVxcbiAgICAmZ3Q7PC9zcGFuPueCueWHu+WKoOi9vTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sb2FkaW5nPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLmdldDwvc3Bhbj4oJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxvYWRpbmcyPC9zcGFuPicpIH19XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi1jbGljazwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5vbkNsaWNrLmJpbmQ8L3NwYW4+KDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGY8L3NwYW4+LCAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bG9hZGluZzI8L3NwYW4+JykgfX1cXG4gICAgJmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+54K55Ye75Yqg6L29PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmljb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNpcmNsZTwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxvYWRpbmc8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuZ2V0PC9zcGFuPignPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bG9hZGluZzM8L3NwYW4+JykgfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWNsaWNrPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLm9uQ2xpY2suYmluZDwvc3Bhbj4oPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZjwvc3Bhbj4sICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sb2FkaW5nMzwvc3Bhbj4nKSB9fVxcbiAgICAmZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+IFxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bG9hZGluZzwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sb2FkaW5nNDwvc3Bhbj4nKSB9fVxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYub25DbGljay5iaW5kPC9zcGFuPig8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmPC9zcGFuPiwgJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxvYWRpbmc0PC9zcGFuPicpIH19XFxuICAgICZndDs8L3NwYW4+5Zu+5qCH5Zyo5Y+z5L6nPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24taW9zLXNlYXJjaFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWJ0bjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBvbkNsaWNrKG5hbWUpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LnNldChuYW1lLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1saXRlcmFsXFxcIj50cnVlPC9zcGFuPik7XFxuICAgIH1cXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2xvYWRpbmcvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL2xvYWRpbmcvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5oyJ6ZKu5bC65a+4XCIsXCJvcmRlclwiOjR9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5zaXplPC9jb2RlPuWxnuaAp+WPr+S7peaMh+WumuaMiemSrueahOWwuuWvuO+8mjxjb2RlPmRlZmF1bHQ8L2NvZGU+LDxjb2RlPnNtYWxsPC9jb2RlPiwgPGNvZGU+bWluaTwvY29kZT7jgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPEJ1dHRvbj5kZWZhdWx0PC9CdXR0b24+XFxuICAgIDxCdXR0b24gdHlwZT1cXFwic21hbGxcXFwiPnNtYWxsPC9CdXR0b24+XFxuICAgIDxCdXR0b24gdHlwZT1cXFwibWluaVxcXCI+bWluaTwvQnV0dG9uPlxcbiAgICA8YnIgLz48YnIgLz5cXG4gICAgPEJ1dHRvbiBpY29uIGNpcmNsZT48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+XFxuICAgIDxCdXR0b24gaWNvbiBjaXJjbGUgc2l6ZT1cXFwic21hbGxcXFwiPjxpIGNsYXNzPVxcXCJrLWljb24gaW9uLWlvcy1zZWFyY2hcXFwiPjwvaT48L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiBpY29uIGNpcmNsZSBzaXplPVxcXCJtaW5pXFxcIj48aSBjbGFzcz1cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1idG5cXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo4LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5kZWZhdWx0PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPnNtYWxsPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1pbmlcXFwiPC9zcGFuPiZndDs8L3NwYW4+bWluaTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pY29uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jaXJjbGU8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1pb3Mtc2VhcmNoXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmljb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNpcmNsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic21hbGxcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24taW9zLXNlYXJjaFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pY29uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jaXJjbGU8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNpemU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1pbmlcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24taW9zLXNlYXJjaFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWJ0bjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3Mvc2l6ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9idXR0b24vZGVtb3Mvc2l6ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLmjIflrprmjInpkq50YWdOYW1lXCIsXCJvcmRlclwiOjV9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5CdXR0b248L2NvZGU+6buY6K6k5riy5p+T5oiQPGNvZGU+YnV0dG9uPC9jb2RlPuWFg+e0oO+8jOmAmui/hzxjb2RlPnRhZ05hbWU8L2NvZGU+77yM5oiR5Lus5Y+v5Lul5riy5p+T5oiQ5Lu75oSP5YWD57Sg5oiW57uE5Lu244CC5q2k5pe277yM5oiR5Lus5Y+v5Lul6YCa6L+HPGNvZGU+dGFnUHJvcHM8L2NvZGU+5bGe5oCn77yM57uZ5oyH5a6a55qEPGNvZGU+dGFnTmFtZTwvY29kZT7kvKDpgJLkuI48Y29kZT5CdXR0b248L2NvZGU+5bGe5oCn5ZCN55u45Yay56qB55qE5bGe5oCn44CCPC9wPlxcbjxibG9ja3F1b3RlPlxcbjxwPuW9k+e7mTxjb2RlPkJ1dHRvbjwvY29kZT7mjIflrpo8Y29kZT5ocmVmPC9jb2RlPuWxnuaAp+aXtu+8jOWImeWug+S8muW8uuWItua4suafk+aIkDxjb2RlPmE8L2NvZGU+5qCH562+PC9wPlxcbjwvYmxvY2txdW90ZT5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBCdXR0b24gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48ZGl2PlxcbiAgICA8QnV0dG9uIHRhZ05hbWU9XFxcImRpdlxcXCIgdHlwZT1cXFwicHJpbWFyeVxcXCI+ZGl25YWD57Sg5oyJ6ZKuPC9CdXR0b24+XFxuICAgIDxCdXR0b24gaHJlZj1cXFwiaHR0cHM6Ly93d3cua3N5dW4uY29tXFxcIiBcXG4gICAgICAgIHN0eWxlPVxcXCJtYXJnaW4tbGVmdDogMjBweDtcXFwiXFxuICAgICAgICB0YXJnZXQ9XFxcIl9ibGFua1xcXCJcXG4gICAgPui2hemTvuaOpeaMiemSrjwvQnV0dG9uPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo5LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRhZ05hbWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRpdlxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+ZGl25YWD57Sg5oyJ6ZKuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmhyZWY8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImh0dHBzOi8vd3d3LmtzeXVuLmNvbVxcXCI8L3NwYW4+IFxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1hcmdpbi1sZWZ0OiAyMHB4O1xcXCI8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50YXJnZXQ8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIl9ibGFua1xcXCI8L3NwYW4+XFxuICAgICZndDs8L3NwYW4+6LaF6ZO+5o6l5oyJ6ZKuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL3RhZ05hbWUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvYnV0dG9uL2RlbW9zL3RhZ05hbWUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Z+65pys55So5rOVXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5DaGVja2JveDwvY29kZT7nmoTln7rmnKznlKjms5XvvIzlj4rnpoHnlKjnirbmgIHjgILnlLHkuo48Y29kZT50cnVlVmFsdWU8L2NvZGU+55qE6buY6K6k5YC85Li6PGNvZGU+dHJ1ZTwvY29kZT7vvIzmiYDku6Xlj6/ku6Xnm7TmjqXkvKDlhaU8Y29kZT52YWx1ZT10cnVlPC9jb2RlPuadpeaMh+WumumAieS4reeKtuaAgeOAgjwvcD5cXG48YmxvY2txdW90ZT5cXG48cD7pgInkuK3nirbmgIHnmoTliKTlrprmnaHku7bmmK88Y29kZT52YWx1ZSA9PT0gdHJ1ZVZhbHVlIHx8IHZhbHVlLmluZGV4T2YodHJ1ZVZhbHVlKTwvY29kZT7vvIzlr7nkuo7lgLzkuLrlr7nosaHnmoTmg4XlhrXopoHms6jmhI/jgII8L3A+XFxuPC9ibG9ja3F1b3RlPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IENoZWNrYm94IGZyb20gJ2twYy9jb21wb25lbnRzL2NoZWNrYm94JztcXG5cXG48ZGl2PlxcbiAgICA8Q2hlY2tib3g+Y2hlY2tib3g8L0NoZWNrYm94PlxcbiAgICA8Q2hlY2tib3ggZGlzYWJsZWQ+ZGlzYWJsZWQgY2hlY2tib3g8L0NoZWNrYm94PlxcbiAgICA8Q2hlY2tib3ggdmFsdWU9e3sgdHJ1ZSB9fSBkaXNhYmxlZD5kaXNhYmxlZCBjaGVja2VkIGNoZWNrYm94PC9DaGVja2JveD5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWNoZWNrYm94XFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MTEsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBDaGVja2JveCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9jaGVja2JveCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5DaGVja2JveDwvc3Bhbj4mZ3Q7PC9zcGFuPmNoZWNrYm94PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kaXNhYmxlZDwvc3Bhbj4mZ3Q7PC9zcGFuPmRpc2FibGVkIGNoZWNrYm94PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHJ1ZTwvc3Bhbj4gfX0gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+Jmd0Ozwvc3Bhbj5kaXNhYmxlZCBjaGVja2VkIGNoZWNrYm94PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1jaGVja2JveDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCJDaGVja2JveOe7hFwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5ZKM5rWP6KeI5Zmo5Y6f55Sf6KGM5Li65LiA5qC377yM57uZPGNvZGU+Q2hlY2tib3g8L2NvZGU+5oyH5a6a55u45ZCM55qEPGNvZGU+bmFtZTwvY29kZT7vvIzlroPku6zkvr/nu4TmiJDkuoblpI3pgInmoYbnu4TjgII8L3A+XFxuPGJsb2NrcXVvdGU+XFxuPHA+5q2k5pe25b+F6aG75Yid5aeL5YyW57uR5a6a55qE5bGe5oCn5Li65pWw57uE77yM5ZCm5YiZPGNvZGU+Q2hlY2tib3g8L2NvZGU+5bCG57G75Ly8PGNvZGU+cmFkaW88L2NvZGU+5LiA5qC35Y+q6IO95Y2V6YCJPC9wPlxcbjwvYmxvY2txdW90ZT5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBDaGVja2JveCBmcm9tICdrcGMvY29tcG9uZW50cy9jaGVja2JveCc7XFxuXFxuPGRpdj5cXG4gICAgPENoZWNrYm94IG5hbWU9XFxcImxhbmd1YWdlc1xcXCIgdHJ1ZVZhbHVlPVxcXCJKYXZhc2NyaXB0XFxcIiB2LW1vZGVsPVxcXCJsYW5ndWFnZXNcXFwiPkphdmFzY3JpcHQ8L0NoZWNrYm94PlxcbiAgICA8Q2hlY2tib3ggbmFtZT1cXFwibGFuZ3VhZ2VzXFxcIiB0cnVlVmFsdWU9XFxcIkMrK1xcXCIgdi1tb2RlbD1cXFwibGFuZ3VhZ2VzXFxcIj5DKys8L0NoZWNrYm94PlxcbiAgICA8Q2hlY2tib3ggbmFtZT1cXFwibGFuZ3VhZ2VzXFxcIiB0cnVlVmFsdWU9XFxcIlBIUFxcXCIgdi1tb2RlbD1cXFwibGFuZ3VhZ2VzXFxcIj5QSFA8L0NoZWNrYm94PlxcbiAgICBZb3VyIHNlbGVjdGVkOiB7eyBKU09OLnN0cmluZ2lmeShzZWxmLmdldCgnbGFuZ3VhZ2VzJykpIH19XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1jaGVja2JveFxcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICAvLyDlv4XpobvliJ3lp4vljJbkuLrmlbDnu4RcXG4gICAgICAgICAgICBsYW5ndWFnZXM6IFtdXFxuICAgICAgICB9O1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjEyLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQ2hlY2tib3ggPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvY2hlY2tib3gnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q2hlY2tib3g8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm5hbWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlc1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWVWYWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiSmF2YXNjcmlwdFxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlc1xcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5KYXZhc2NyaXB0PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5uYW1lPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJsYW5ndWFnZXNcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIkMrK1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlc1xcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5DKys8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q2hlY2tib3g8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q2hlY2tib3g8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm5hbWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlc1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWVWYWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiUEhQXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibGFuZ3VhZ2VzXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlBIUDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5DaGVja2JveDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICBZb3VyIHNlbGVjdGVkOiB7eyBKU09OLnN0cmluZ2lmeShzZWxmLmdldCgnbGFuZ3VhZ2VzJykpIH19XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1jaGVja2JveDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWNvbW1lbnRcXFwiPi8vIOW/hemhu+WIneWni+WMluS4uuaVsOe7hDwvc3Bhbj5cXG4gICAgICAgICAgICBsYW5ndWFnZXM6IFtdXFxuICAgICAgICB9O1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2NoZWNrYm94L2RlbW9zL2dyb3VwL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2NoZWNrYm94L2RlbW9zL2dyb3VwL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuaMh+WumumAieS4reWSjOmdnumAieS4reeahOWPluWAvFwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+PGNvZGU+Q2hlY2tib3g8L2NvZGU+6buY6K6k6YCJ5Lit55qE5YC85Li6PGNvZGU+dHJ1ZTwvY29kZT7vvIzpnZ7pgInkuK3nmoTlgLzkuLo8Y29kZT5mYWxzZTwvY29kZT7vvIzpgJrov4c8Y29kZT50cnVlVmFsdWU8L2NvZGU+5ZKMPGNvZGU+ZmFsc2VWYWx1ZTwvY29kZT7lsZ7mgKfvvIzmiJHku6zlj6/ku6XmjIflrprpgInkuK3lkozpnZ7pgInkuK3nmoTlgLzjgII8L3A+XFxuPGJsb2NrcXVvdGU+XFxuPHA+5b2T5oyH5a6a5YC85Li65a+56LGh5pe277yM5LiN6KaB5Zyo5qih5p2/5Lit55u05o6l5a6a5LmJ5a+56LGh5a2X6Z2i6YeP77yI5aaC77yadHJ1ZVZhbHVlPXt7IHthOiAxfSB9fe+8ie+8jOWboOS4uuWcqOaooeadv+S4reWIm+W7uueahOWvueixoeavj+asoeaJp+ihjOaooeadv+mDveS8mueUn+aIkOS4gOS7veaWsOaVsOaNru+8jOS9v+WFqOetieWIpOaWrSg8Y29kZT49PT08L2NvZGU+KeWkseaViOOAguatpOaXtuW6lOivpeWcqGpz5Lit5a6a5LmJ6K+l5a+56LGh77yM54S25ZCO5qih5p2/5Lit5byV55So5a6D44CCPC9wPlxcbjwvYmxvY2txdW90ZT5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBDaGVja2JveCBmcm9tICdrcGMvY29tcG9uZW50cy9jaGVja2JveCc7XFxuXFxuPGRpdj5cXG4gICAgPENoZWNrYm94IHYtbW9kZWw9XFxcInZhbHVlMVxcXCI+6buY6K6k5YC8OiB7eyBKU09OLnN0cmluZ2lmeShzZWxmLmdldCgndmFsdWUxJykpIH19PC9DaGVja2JveD5cXG4gICAgPENoZWNrYm94IHYtbW9kZWw9XFxcInZhbHVlMlxcXCIgdHJ1ZVZhbHVlPVxcXCJjaGVja2VkXFxcIj5cXG4gICAgICAgIOaMh+WumumAieS4reaXtuWPluWAvOS4ulxcXCJjaGVja2VkXFxcIjoge3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMicpKSB9fVxcbiAgICA8L0NoZWNrYm94PlxcbiAgICA8Q2hlY2tib3ggdi1tb2RlbD1cXFwidmFsdWUzXFxcIiB0cnVlVmFsdWU9e3sgMCB9fSBmYWxzZVZhbHVlPXt7IHNlbGYuZ2V0KFxcXCJ1bmNoZWNrZWRWYWx1ZVxcXCIpIH19PlxcbiAgICAgICAg5oyH5a6a6Z2e6YCJ5Lit5pe25Y+W5YC85Li65a+56LGh77yae3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMycpKSB9fVxcbiAgICA8L0NoZWNrYm94PlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstY2hlY2tib3hcXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgdW5jaGVja2VkVmFsdWU6IHtcXG4gICAgICAgICAgICAgICAgdW5jaGVja2VkOiB0cnVlXFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfTtcXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjoxMyxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IENoZWNrYm94IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2NoZWNrYm94Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJ2YWx1ZTFcXFwiPC9zcGFuPiZndDs8L3NwYW4+6buY6K6k5YC8OiB7eyBKU09OLnN0cmluZ2lmeShzZWxmLmdldCgndmFsdWUxJykpIH19PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJ2YWx1ZTJcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImNoZWNrZWRcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICDmjIflrprpgInkuK3ml7blj5blgLzkuLpcXFwiY2hlY2tlZFxcXCI6IHt7IEpTT04uc3RyaW5naWZ5KHNlbGYuZ2V0KCd2YWx1ZTInKSkgfX1cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNoZWNrYm94PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJ2YWx1ZTNcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPjA8L3NwYW4+IH19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmZhbHNlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuZ2V0PC9zcGFuPihcXFwiPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dW5jaGVja2VkVmFsdWU8L3NwYW4+XFxcIikgfX0mZ3Q7PC9zcGFuPlxcbiAgICAgICAg5oyH5a6a6Z2e6YCJ5Lit5pe25Y+W5YC85Li65a+56LGh77yae3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMycpKSB9fVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q2hlY2tib3g8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWNoZWNrYm94PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4yMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dW5jaGVja2VkVmFsdWU8L3NwYW4+OiB7XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnVuY2hlY2tlZDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLWxpdGVyYWxcXFwiPnRydWU8L3NwYW4+XFxuICAgICAgICAgICAgfVxcbiAgICAgICAgfTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy92YWx1ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9jaGVja2JveC9kZW1vcy92YWx1ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rmnKznlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWfuuacrOeUqOazleWSjOemgeeUqOeKtuaAgTwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBEYXRlcGlja2VyIGZyb20gJ2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInO1xcblxcbjxkaXY+XFxuICAgIDxEYXRlcGlja2VyIHYtbW9kZWw9XFxcImRhdGVcXFwiIC8+XFxuICAgIDxEYXRlcGlja2VyIGRpc2FibGVkIHZhbHVlPVxcXCIyMDE4LTAxLTAxXFxcIi8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1kYXRlcGlja2VyXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MTUsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBEYXRlcGlja2VyIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInPC9zcGFuPjtcXG5cXG4mbHQ7ZGl2Jmd0O1xcbiAgICAmbHQ7RGF0ZXBpY2tlciB2LW1vZGVsPVxcXCJkYXRlXFxcIiAvJmd0O1xcbiAgICAmbHQ7RGF0ZXBpY2tlciBkaXNhYmxlZCB2YWx1ZT1cXFwiMjAxOC0wMS0wMVxcXCIvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWRhdGVwaWNrZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kYXRlcGlja2VyL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWPr+a4heepulwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5re75YqgPGNvZGU+Y2xlYXJhYmxlPC9jb2RlPuWxnuaAp++8jOWPr+S7pea4heepuuW9k+WJjeaXpeacn+OAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBEYXRlcGlja2VyIGZyb20gJ2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInO1xcblxcbjxEYXRlcGlja2VyIGNsZWFyYWJsZSB2LW1vZGVsPVxcXCJkYXRlXFxcIiAvPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjoxNixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IERhdGVwaWNrZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZGF0ZXBpY2tlcic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRhdGVwaWNrZXI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsZWFyYWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGF0ZVxcXCI8L3NwYW4+IC8mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9kYXRlcGlja2VyL2RlbW9zL2NsZWFyYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kYXRlcGlja2VyL2RlbW9zL2NsZWFyYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLpgInmi6nml7bpl7RcIixcIm9yZGVyXCI6NX0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWwhjxjb2RlPnR5cGU8L2NvZGU+5bGe5oCn5oyH5a6a5Li6PGNvZGU+ZGF0ZXRpbWU8L2NvZGU+77yM5Y2z5Y+v6K6p5pel5pyf5pSv5oyB6YCJ5oup5pe26Ze044CC6YCa6L+HPGNvZGU+ZGlzYWJsZWRIb3VycyAmYW1wOyBkaXNhYmxlZE1pbnV0ZXMgJmFtcDsgZGlzYWJsZWRTZWNvbmRzPC9jb2RlPuWPr+S7peemgeeUqOaXtuWIhuenkueahOmAieaLqeOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBEYXRlcGlja2VyIGZyb20gJ2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInO1xcblxcbjxkaXY+XFxuICAgIDxEYXRlcGlja2VyIHR5cGU9XFxcImRhdGV0aW1lXFxcIiB2LW1vZGVsPVxcXCJkYXRldGltZTFcXFwiIC8+XFxuICAgIDxEYXRlcGlja2VyIHR5cGU9XFxcImRhdGV0aW1lXFxcIiB2LW1vZGVsPVxcXCJkYXRldGltZTJcXFwiIFxcbiAgICAgICAgcGxhY2Vob2xkZXI9XFxcIuaXtumXtOeyvuehruWIsOWwj+aXtlxcXCJcXG4gICAgICAgIGRpc2FibGVkTWludXRlc1xcbiAgICAgICAgZGlzYWJsZWRTZWNvbmRzXFxuICAgIC8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1kYXRlcGlja2VyXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MTcsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBEYXRlcGlja2VyIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInPC9zcGFuPjtcXG5cXG4mbHQ7ZGl2Jmd0O1xcbiAgICAmbHQ7RGF0ZXBpY2tlciB0eXBlPVxcXCJkYXRldGltZVxcXCIgdi1tb2RlbD1cXFwiZGF0ZXRpbWUxXFxcIiAvJmd0O1xcbiAgICAmbHQ7RGF0ZXBpY2tlciB0eXBlPVxcXCJkYXRldGltZVxcXCIgdi1tb2RlbD1cXFwiZGF0ZXRpbWUyXFxcIiBcXG4gICAgICAgIHBsYWNlaG9sZGVyPVxcXCLml7bpl7Tnsr7noa7liLDlsI/ml7ZcXFwiXFxuICAgICAgICBkaXNhYmxlZE1pbnV0ZXNcXG4gICAgICAgIGRpc2FibGVkU2Vjb25kc1xcbiAgICAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWRhdGVwaWNrZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9kYXRldGltZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kYXRlcGlja2VyL2RlbW9zL2RhdGV0aW1lL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuemgeeUqOaMh+WumuaXpeacn1wiLFwib3JkZXJcIjozfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+6YCa6L+HPGNvZGU+ZGlzYWJsZWREYXRlPC9jb2RlPuWxnuaAp++8jOWPr+S7peWumuS5ieS4quaWueazle+8jOadpeaMh+WumuWTquS6m+aXpeacn+iiq+emgeatoumAieaLqeOAgue7hOS7tuS8muWwhuS4gOS4quaXpeacn+Wtl+espuS4suS9nOS4uuaWueazleeahOWPguaVsO+8jOWmguaenOaWueazlei/lOWbnuKAnOecn+KAneWImeemgeeUqOaOieivpeaXpeacn++8jOWQpuWImeS4jeemgeeUqOOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBEYXRlcGlja2VyIGZyb20gJ2twYy9jb21wb25lbnRzL2RhdGVwaWNrZXInO1xcblxcbjxEYXRlcGlja2VyIGRpc2FibGVkRGF0ZT17eyAoZGF0ZSkgPT4ge1xcbiAgICAvLyDnpoHnlKjmjokyMDE4LTAyLTA15ZKMMjAxOC0wMy0wNVxcbiAgICByZXR1cm4gflsnMjAxOC0wMi0wNScsICcyMDE4LTAzLTA1J10uaW5kZXhPZihkYXRlKTtcXG59IH19IC8+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjE4LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRGF0ZXBpY2tlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9kYXRlcGlja2VyJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RGF0ZXBpY2tlcjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWREYXRlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiAoPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0ZTwvc3Bhbj4pID0mZ3Q7PC9zcGFuPiB7XFxuICAgIC8vIOemgeeUqOaOiTIwMTgtMDItMDXlkowyMDE4LTAzLTA1XFxuICAgIHJldHVybiB+WycyMDE4LTAyLTA1JywgJzIwMTgtMDMtMDUnXS5pbmRleE9mKGRhdGUpO1xcbn0gfX0gLyZndDs8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9kaXNhYmxlZERhdGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9kaXNhYmxlZERhdGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5pyA5aSn5ZKM5pyA5bCP5pel5pyfXCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5tYXhEYXRlPC9jb2RlPuWSjDxjb2RlPm1pbkRhdGU8L2NvZGU+5Y+v5Lul57uZ57uE5Lu25oyH5a6a5pyA5aSn5ZKM5pyA5bCP6YCJ5oup5pel5pyf44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IERhdGVwaWNrZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvZGF0ZXBpY2tlcic7XFxuXFxuPGRpdj5cXG4gICAgPERhdGVwaWNrZXIgdi1tb2RlbD1cXFwiZnJvbVxcXCIgcGxhY2Vob2xkZXI9XFxcIuW8gOWni+aXpeacn1xcXCJcXG4gICAgICAgIG1heERhdGU9e3sgc2VsZi5nZXQoJ3RvJykgfX1cXG4gICAgICAgIG1pbkRhdGU9e3sgbmV3IERhdGUoKSB9fVxcbiAgICAvPlxcbiAgICA8RGF0ZXBpY2tlciB2LW1vZGVsPVxcXCJ0b1xcXCIgcGxhY2Vob2xkZXI9XFxcIue7k+adn+aXpeacn1xcXCJcXG4gICAgICAgIG1pbkRhdGU9e3sgc2VsZi5nZXQoJ2Zyb20nKSB9fVxcbiAgICAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstZGF0ZXBpY2tlclxcbiAgICBtYXJnaW4tcmlnaHQgMTBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjE5LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRGF0ZXBpY2tlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9kYXRlcGlja2VyJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O0RhdGVwaWNrZXIgdi1tb2RlbD1cXFwiZnJvbVxcXCIgcGxhY2Vob2xkZXI9XFxcIuW8gOWni+aXpeacn1xcXCJcXG4gICAgICAgIG1heERhdGU9e3sgc2VsZi5nZXQoJ3RvJykgfX1cXG4gICAgICAgIG1pbkRhdGU9e3sgbmV3IERhdGUoKSB9fVxcbiAgICAvJmd0O1xcbiAgICAmbHQ7RGF0ZXBpY2tlciB2LW1vZGVsPVxcXCJ0b1xcXCIgcGxhY2Vob2xkZXI9XFxcIue7k+adn+aXpeacn1xcXCJcXG4gICAgICAgIG1pbkRhdGU9e3sgc2VsZi5nZXQoJ2Zyb20nKSB9fVxcbiAgICAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWRhdGVwaWNrZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjEwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9tYXhNaW4vaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9tYXhNaW4vaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5pel5pyf5aSa6YCJXCIsXCJvcmRlclwiOjR9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mt7vliqA8Y29kZT5tdWx0aXBsZTwvY29kZT7lsZ7mgKfvvIzljbPlj6/mlK/mjIHml6XmnJ/lpJrpgInjgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgRGF0ZXBpY2tlciBmcm9tICdrcGMvY29tcG9uZW50cy9kYXRlcGlja2VyJztcXG5cXG48ZGl2PlxcbiAgICA8RGF0ZXBpY2tlciBtdWx0aXBsZSB2LW1vZGVsPVxcXCJkYXRlXFxcIiAvPlxcbiAgICBZb3Ugc2VsZWN0ZWQ6IHt7IEpTT04uc3RyaW5naWZ5KHNlbGYuZ2V0KCdkYXRlJykpIH19XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjIwLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRGF0ZXBpY2tlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9kYXRlcGlja2VyJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRhdGVwaWNrZXI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm11bHRpcGxlPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJkYXRlXFxcIjwvc3Bhbj4gLyZndDs8L3NwYW4+XFxuICAgIFlvdSBzZWxlY3RlZDoge3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ2RhdGUnKSkgfX1cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2RhdGVwaWNrZXIvZGVtb3MvbXVsdGlwbGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9kZW1vcy9tdWx0aXBsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rmnKznlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWumuS5ieS4gOS4quW8ueeql++8jOeEtuWQjumAmui/hzxjb2RlPnYtbW9kZWw8L2NvZGU+5bu656uL57uR5a6a77yM5b2T6K+l57uR5a6a55qE5YC85Li6PGNvZGU+dHJ1ZTwvY29kZT7ml7bvvIzlsZXnpLrlvLnnqpfjgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuaW1wb3J0IERpYWxvZyBmcm9tICdrcGMvY29tcG9uZW50cy9kaWFsb2cnO1xcblxcbjxkaXY+XFxuICAgIDxCdXR0b24gZXYtY2xpY2s9e3sgc2VsZi5zZXQuYmluZChzZWxmLCAnc2hvdycsIHRydWUpIH19XFxuICAgICAgICB0eXBlPVxcXCJwcmltYXJ5XFxcIlxcbiAgICA+U2hvdyBEaWFsb2c8L0J1dHRvbj5cXG4gICAgPERpYWxvZyB2LW1vZGVsPVxcXCJzaG93XFxcIiB0aXRsZT1cXFwiRGlhbG9nIFRpdGxlXFxcIj5cXG4gICAgICAgIERpYWxvZyBCb2R5IFxcbiAgICA8L0RpYWxvZz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MjIsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBCdXR0b24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvYnV0dG9uJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBEaWFsb2cgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZGlhbG9nJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuc2V0LmJpbmQ8L3NwYW4+KDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGY8L3NwYW4+LCAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2hvdzwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlPC9zcGFuPikgfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPlxcbiAgICAmZ3Q7PC9zcGFuPlNob3cgRGlhbG9nPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5EaWFsb2c8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNob3dcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50aXRsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiRGlhbG9nIFRpdGxlXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgRGlhbG9nIEJvZHkgXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5EaWFsb2c8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kaWFsb2cvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5a6a5LmJ5aS06YOo5ZKM5bqV6YOoXCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7nu4Tku7bmj5DkvpvkuoY8Y29kZT5oZWFkZXI8L2NvZGU+5ZKMPGNvZGU+Zm9vdGVyPC9jb2RlPuaJqeWxleeCue+8iGJsb2Nr77yJ77yM6YCa6L+H5a6D5Lus5Y+v5Lul6Ieq5a6a5LmJ5aS06YOo5ZKM5bqV6YOo44CCPC9wPlxcbjxibG9ja3F1b3RlPlxcbjxwPuWPr+S7pemAmui/hzxjb2RlPnBhcmVudCgpPC9jb2RlPuW8leeUqOWIsOe7hOS7tuWumuS5ieeahOm7mOiupOWGheWuuTwvcD5cXG48L2Jsb2NrcXVvdGU+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuaW1wb3J0IERpYWxvZyBmcm9tICdrcGMvY29tcG9uZW50cy9kaWFsb2cnO1xcblxcbjxkaXY+XFxuICAgIDxCdXR0b24gZXYtY2xpY2s9e3sgc2VsZi5zZXQuYmluZChzZWxmLCAnc2hvdycsIHRydWUpIH19XFxuICAgICAgICB0eXBlPVxcXCJwcmltYXJ5XFxcIlxcbiAgICA+U2hvdyBEaWFsb2c8L0J1dHRvbj5cXG4gICAgPERpYWxvZyB2LW1vZGVsPVxcXCJzaG93XFxcIj5cXG4gICAgICAgIDxiOmhlYWRlcj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVxcXCJrLXRpdGxlXFxcIj5cXG4gICAgICAgICAgICAgICAgPGkgY2xhc3M9XFxcImlvbi1wZXJzb25cXFwiPjwvaT5cXG4gICAgICAgICAgICAgICAgQ3VzdG9tIEhlYWRlclxcbiAgICAgICAgICAgIDwvZGl2PlxcbiAgICAgICAgPC9iOmhlYWRlcj5cXG5cXG4gICAgICAgIERpYWxvZyBCb2R5IFxcblxcbiAgICAgICAgPGI6Zm9vdGVyPlxcbiAgICAgICAgICAgIEN1c3RvbSBGb290ZXJcXG4gICAgICAgICAgICB7eyBwYXJlbnQoKSB9fVxcbiAgICAgICAgPC9iOmZvb3Rlcj5cXG4gICAgPC9EaWFsb2c+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjIzLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRGlhbG9nIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2RpYWxvZyc8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtCdXR0b24gZXYtY2xpY2s9e3sgc2VsZi5zZXQuYmluZChzZWxmLCAnc2hvdycsIHRydWUpIH19XFxuICAgICAgICB0eXBlPVxcXCJwcmltYXJ5XFxcIlxcbiAgICAmZ3Q7U2hvdyBEaWFsb2cmbHQ7L0J1dHRvbiZndDtcXG4gICAgJmx0O0RpYWxvZyB2LW1vZGVsPVxcXCJzaG93XFxcIiZndDtcXG4gICAgICAgICZsdDtiOmhlYWRlciZndDtcXG4gICAgICAgICAgICAmbHQ7ZGl2IGNsYXNzPVxcXCJrLXRpdGxlXFxcIiZndDtcXG4gICAgICAgICAgICAgICAgJmx0O2kgY2xhc3M9XFxcImlvbi1wZXJzb25cXFwiJmd0OyZsdDsvaSZndDtcXG4gICAgICAgICAgICAgICAgQ3VzdG9tIEhlYWRlclxcbiAgICAgICAgICAgICZsdDsvZGl2Jmd0O1xcbiAgICAgICAgJmx0Oy9iOmhlYWRlciZndDtcXG5cXG4gICAgICAgIERpYWxvZyBCb2R5IFxcblxcbiAgICAgICAgJmx0O2I6Zm9vdGVyJmd0O1xcbiAgICAgICAgICAgIEN1c3RvbSBGb290ZXJcXG4gICAgICAgICAgICB7eyBwYXJlbnQoKSB9fVxcbiAgICAgICAgJmx0Oy9iOmZvb3RlciZndDtcXG4gICAgJmx0Oy9EaWFsb2cmZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZGlhbG9nL2RlbW9zL2Jsb2NrL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9ibG9jay9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLkuovku7blm57osINcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuW8ueeql+eCueWHu+KAnOehruiupOKAneWSjOKAnOWPlua2iOKAneaXtu+8jOWIhuWIq+S8mua0vuWPkeWHujxjb2RlPm9rPC9jb2RlPuWSjDxjb2RlPmNhbmNlbDwvY29kZT7kuovku7bvvIzpgJrov4flroPku6zlj6/ku6XmiafooYznm7jlupTnmoTlm57osIPpgLvovpHjgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuaW1wb3J0IERpYWxvZyBmcm9tICdrcGMvY29tcG9uZW50cy9kaWFsb2cnO1xcblxcbjxkaXY+XFxuICAgIDxCdXR0b24gZXYtY2xpY2s9e3sgc2VsZi5zZXQuYmluZChzZWxmLCAnc2hvdycsIHRydWUpIH19XFxuICAgICAgICB0eXBlPVxcXCJwcmltYXJ5XFxcIlxcbiAgICA+U2hvdyBEaWFsb2c8L0J1dHRvbj5cXG4gICAgPERpYWxvZyB2LW1vZGVsPVxcXCJzaG93XFxcIiB0aXRsZT1cXFwiRGlhbG9nIFRpdGxlXFxcIlxcbiAgICAgICAgZXYtb2s9e3sgc2VsZi5vbk9rIH19XFxuICAgICAgICBldi1jYW5jZWw9e3sgc2VsZi5vbkNhbmNlbCB9fVxcbiAgICA+RGlhbG9nIEJvZHk8L0RpYWxvZz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5pbXBvcnQgTWVzc2FnZSBmcm9tICdrcGMvY29tcG9uZW50cy9tZXNzYWdlJztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgb25PaygpIHtcXG4gICAgICAgIE1lc3NhZ2Uuc3VjY2VzcygnWW91IGNsaWNrZWQgb2sgYnV0dG9uLicpO1xcbiAgICB9XFxuXFxuICAgIG9uQ2FuY2VsKCkge1xcbiAgICAgICAgTWVzc2FnZS5lcnJvcignWW91IGNsaWNrZWQgY2FuY2VsIGJ1dHRvbi4nKTtcXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjoyNCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IERpYWxvZyA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9kaWFsb2cnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi1jbGljazwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5zZXQuYmluZDwvc3Bhbj4oPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZjwvc3Bhbj4sICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaG93PC9zcGFuPicsIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWU8L3NwYW4+KSB9fVxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+XFxuICAgICZndDs8L3NwYW4+U2hvdyBEaWFsb2c8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRpYWxvZzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwic2hvd1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRpdGxlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJEaWFsb2cgVGl0bGVcXFwiPC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtb2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYub25Pazwvc3Bhbj4gfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWNhbmNlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5vbkNhbmNlbDwvc3Bhbj4gfX1cXG4gICAgJmd0Ozwvc3Bhbj5EaWFsb2cgQm9keTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5EaWFsb2c8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBNZXNzYWdlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL21lc3NhZ2UnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgb25PaygpIHtcXG4gICAgICAgIE1lc3NhZ2Uuc3VjY2Vzcyg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidZb3UgY2xpY2tlZCBvayBidXR0b24uJzwvc3Bhbj4pO1xcbiAgICB9XFxuXFxuICAgIG9uQ2FuY2VsKCkge1xcbiAgICAgICAgTWVzc2FnZS5lcnJvcig8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidZb3UgY2xpY2tlZCBjYW5jZWwgYnV0dG9uLic8L3NwYW4+KTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9kaWFsb2cvZGVtb3MvZXZlbnRzL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9ldmVudHMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi57un5om/5by556qXXCIsXCJvcmRlclwiOjN9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7lnKjlrp7pmYXlupTnlKjkuK3vvIzlvLnnqpfnmoTpgLvovpHkuIDoiKzpg73lvojlpI3mnYLvvIzpgJrov4fnu6fmib/vvIzmiJHku6zlj6/ku6XmjqfliLblvLnnqpfnmoTlkITkuKrnu4boioLvvIzkvovlpoLvvJrngrnlh7vnoa7lrprml7bov5vooYzooajljZXpqozor4HvvIzlj5HpgIHor7fmsYLvvIzlu7bov5/lhbPpl63nrYnnrYnjgILlsIbov5nkupvkuJrliqHpgLvovpHlsIHoo4XlnKjljZXni6znmoTmqKHlnZfkuK3vvIzmmK/mjqjojZDnmoTlgZrms5XjgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8dDpwYXJlbnQ+XFxuICAgIDxiOmJvZHk+XFxuICAgICAgICBIZWxsb1xcbiAgICA8L2I6Ym9keT5cXG48L3Q6cGFyZW50PlwiLFwiZmlsZVwiOlwiZGlhbG9nLnZkdFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBEaWFsb2cgZnJvbSAna3BjL2NvbXBvbmVudHMvZGlhbG9nJztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9kaWFsb2cudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIERpYWxvZyB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgZGVmYXVsdHMoKSB7XFxuICAgICAgICByZXR1cm4gey4uLnN1cGVyLmRlZmF1bHRzKCksIHRpdGxlOiAnRXh0ZW5kcyBEaWFsb2cnfTtcXG4gICAgfVxcblxcbiAgICBvaygpIHtcXG4gICAgICAgIHRoaXMuc2hvd0xvYWRpbmcoKTtcXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcXG4gICAgICAgICAgICB0aGlzLnRyaWdnZXIoXFxcIm9rXFxcIiwgJ3Rlc3QnKTtcXG4gICAgICAgIH0sIDIwMDApO1xcbiAgICB9XFxufVwiLFwiZmlsZVwiOlwiZGlhbG9nLmpzXCJ9LHtcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBCdXR0b24gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGV2LWNsaWNrPXt7IHNlbGYuc2hvd0RpYWxvZyB9fT5TaG93IERpYWxvZzwvQnV0dG9uPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmltcG9ydCBEaWFsb2cgZnJvbSAnLi9kaWFsb2cnO1xcbmltcG9ydCBNZXNzYWdlIGZyb20gJ2twYy9jb21wb25lbnRzL21lc3NhZ2UnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBzaG93RGlhbG9nKCkge1xcbiAgICAgICAgY29uc3QgZGlhbG9nID0gbmV3IERpYWxvZygpO1xcbiAgICAgICAgZGlhbG9nLnNob3coKTtcXG4gICAgICAgIGRpYWxvZy5vbignb2snLCAoZGF0YSkgPT4ge1xcbiAgICAgICAgICAgIE1lc3NhZ2UuaW5mbyhgZGF0YSBmcm9tIGRpYWxvZzogJHtkYXRhfWApO1xcbiAgICAgICAgfSk7XFxuICAgIH1cXG59XCJ9XSxcImluZGV4XCI6MjUsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+Jmx0O3Q6cGFyZW50Jmd0O1xcbiAgICA8c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5iOmJvZHk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIEhlbGxvXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5iOmJvZHk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+dDpwYXJlbnQ8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwiLFwiZmlsZVwiOlwiZGlhbG9nLnZkdFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRGlhbG9nIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2RpYWxvZyc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9kaWFsb2cudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5EaWFsb2c8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7Li4uc3VwZXIuZGVmYXVsdHMoKSwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dGl0bGU8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidFeHRlbmRzIERpYWxvZyc8L3NwYW4+fTtcXG4gICAgfVxcblxcbiAgICBvaygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LnNob3dMb2FkaW5nKCk7XFxuICAgICAgICBzZXRUaW1lb3V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLWZ1bmN0aW9uXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1wYXJhbXNcXFwiPigpPC9zcGFuPiA9Jmd0Ozwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LmNsb3NlKCk7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4udHJpZ2dlcig8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJva1xcXCI8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPid0ZXN0Jzwvc3Bhbj4pO1xcbiAgICAgICAgfSwgPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4yMDAwPC9zcGFuPik7XFxuICAgIH1cXG59PC9jb2RlPjwvcHJlPlwiLFwiZmlsZVwiOlwiZGlhbG9nLmpzXCJ9LHtcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi1jbGljazwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5zaG93RGlhbG9nPC9zcGFuPiB9fSZndDs8L3NwYW4+U2hvdyBEaWFsb2c8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBEaWFsb2cgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9kaWFsb2cnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IE1lc3NhZ2UgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvbWVzc2FnZSc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBzaG93RGlhbG9nKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y29uc3Q8L3NwYW4+IGRpYWxvZyA9IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPm5ldzwvc3Bhbj4gRGlhbG9nKCk7XFxuICAgICAgICBkaWFsb2cuc2hvdygpO1xcbiAgICAgICAgZGlhbG9nLm9uKDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J29rJzwvc3Bhbj4sIChkYXRhKSA9Jmd0OyB7XFxuICAgICAgICAgICAgTWVzc2FnZS5pbmZvKDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+YGRhdGEgZnJvbSBkaWFsb2c6IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN1YnN0XFxcIj4ke2RhdGF9PC9zcGFuPmA8L3NwYW4+KTtcXG4gICAgICAgIH0pO1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9leHRlbmRzL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2RpYWxvZy9kZW1vcy9leHRlbmRzL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuehgOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5LiA5Liq5a6M5pW055qE6I+c5Y2V6ZyA6KaB55So5YiwPGNvZGU+RHJvcGRvd248L2NvZGU+77yMPGNvZGU+RHJvcGRvd25NZW51PC9jb2RlPuWSjDxjb2RlPkRyb3Bkb3duSXRlbTwvY29kZT7kuInkuKrnu4Tku7bjgII8Y29kZT5Ecm9wZG93bjwvY29kZT7kvJrlsIbnrKzkuIDkuKrlrZDlhYPntKDkvZzkuLrop6blj5HlmajvvIznrKzkuozkuKrlhYPntKDkuLroj5zljZU8Y29kZT5Ecm9wZG93bk1lbnU8L2NvZGU+44CCPC9wPlxcbjxibG9ja3F1b3RlPlxcbjxwPjxjb2RlPkRyb3Bkb3duPC9jb2RlPuS8mui/lOWbnuS4pOS4quWFg+e0oO+8iOinpuWPkeWZqOWSjOiPnOWNle+8ie+8jOiAjOS4jeaYr+WwhuWug+S7rOWMheijuei1t+adpe+8jOS9nOS4uuS4gOS4quWFg+e0oOi/lOWbnuaJgOS7peS4jeimgeWwhuWug+S9nOS4uuaooeadv+eahOmhtue6p+WFg+e0oO+8jOS+i+WmguacrOS+i+S4re+8jOeUqDxjb2RlPiZsdDtkaXYmZ3Q7PC9jb2RlPuWwhuS5i+WMheijuei1t+adpeaJjeiDveS9nOS4uuaooeadv+WFg+e0oOi/lOWbnuOAgjwvcD5cXG48L2Jsb2NrcXVvdGU+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gZnJvbSAna3BjL2NvbXBvbmVudHMvZHJvcGRvd24nO1xcbmltcG9ydCBCdXR0b24gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48ZGl2PlxcbiAgICA8RHJvcGRvd24+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiPlxcbiAgICAgICAgICAgIGhvdmVyIDxpIGNsYXNzPVxcXCJrLWljb24gaW9uLWFycm93LWRvd24tYlxcXCI+PC9pPlxcbiAgICAgICAgPC9CdXR0b24+XFxuICAgICAgICA8RHJvcGRvd25NZW51PlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAxPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDI8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMzwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgPC9Ecm9wZG93bk1lbnU+XFxuICAgIDwvRHJvcGRvd24+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjI3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZHJvcGRvd24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICBob3ZlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2Ryb3Bkb3duL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2Ryb3Bkb3duL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuemgeeUqOiPnOWNle+8iOmhue+8iVwiLFwib3JkZXJcIjozfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+6YCa6L+H57uZPGNvZGU+RHJvcGRvd248L2NvZGU+5ZKMPGNvZGU+RHJvcGRvd25JdGVtPC9jb2RlPua3u+WKoDxjb2RlPmRpc2FibGVkPC9jb2RlPuWxnuaAp++8jOWPr+S7peWIhuWIq+emgeeUqOiPnOWNleWSjOiPnOWNlemhueOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7RHJvcGRvd24sIERyb3Bkb3duTWVudSwgRHJvcGRvd25JdGVtfSBmcm9tICdrcGMvY29tcG9uZW50cy9kcm9wZG93bic7XFxuaW1wb3J0IEJ1dHRvbiBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbjxkaXY+XFxuICAgIDxEcm9wZG93biBkaXNhYmxlZD5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCI+XFxuICAgICAgICAgICAgZGlzYWJsZWQgPGkgY2xhc3M9XFxcImstaWNvbiBpb24tYXJyb3ctZG93bi1iXFxcIj48L2k+XFxuICAgICAgICA8L0J1dHRvbj5cXG4gICAgICAgIDxEcm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDE8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMjwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAzPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgPC9Ecm9wZG93bj5cXG5cXG4gICAgPERyb3Bkb3duPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIj5cXG4gICAgICAgICAgICBkaXNhYmxlZCBpdGVtPGkgY2xhc3M9XFxcImstaWNvbiBpb24tYXJyb3ctZG93bi1iXFxcIj48L2k+XFxuICAgICAgICA8L0J1dHRvbj5cXG4gICAgICAgIDxEcm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDE8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtIGRpc2FibGVkPml0ZW0gMjwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAzPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgPC9Ecm9wZG93bj5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWJ0blxcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjI4LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZHJvcGRvd24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRpc2FibGVkPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgZGlzYWJsZWQgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24tYXJyb3ctZG93bi1iXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDE8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAyPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiZndDs8L3NwYW4+XFxuXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgZGlzYWJsZWQgaXRlbTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWFycm93LWRvd24tYlxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAxPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWJ0bjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy9kaXNhYmxlZC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy9kaXNhYmxlZC9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLltYzlpZfoj5zljZVcIixcIm9yZGVyXCI6NH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPjxjb2RlPkRyb3Bkb3duPC9jb2RlPuWPr+S7peW1jOWll+S9v+eUqO+8jOWunueOsOe6p+iBlOiPnOWNleOAguWtkOiPnOWNlemcgOimgeaMh+WumuWxleekuueahOS9jee9rjxjb2RlPnBvc2l0aW9uPC9jb2RlPuOAguaIkeS7rOi/mOWPr+S7pemAmui/hzxjb2RlPnRyaWdnZXI8L2NvZGU+5Y2V54us5a2Q6I+c5Y2V6Kem5Y+R5pa55byP44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtEcm9wZG93biwgRHJvcGRvd25NZW51LCBEcm9wZG93bkl0ZW19IGZyb20gJ2twYy9jb21wb25lbnRzL2Ryb3Bkb3duJztcXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPERyb3Bkb3duPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIj5cXG4gICAgICAgICAgICBob3ZlciA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDM8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICA8RHJvcGRvd24gcG9zaXRpb249e3sge215OiAnbGVmdCB0b3AnLCBhdDogJ3JpZ2h0IHRvcCd9IH19PlxcbiAgICAgICAgICAgICAgICA8RHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImMtbWlkZGxlXFxcIiBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiAxMHB4XFxcIj5ob3Zlcjwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVxcXCJjLW1pZGRsZSBpb24taW9zLWFycm93LXJpZ2h0XFxcIj48L2k+XFxuICAgICAgICAgICAgICAgIDwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgICAgICA8RHJvcGRvd25NZW51PlxcbiAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duIHBvc2l0aW9uPXt7IHtteTogJ2xlZnQgdG9wJywgYXQ6ICdyaWdodCB0b3AnfSB9fT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiYy1taWRkbGVcXFwiIHN0eWxlPVxcXCJtYXJnaW4tcmlnaHQ6IDEwcHhcXFwiPmhvdmVyPC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiYy1taWRkbGUgaW9uLWlvcy1hcnJvdy1yaWdodFxcXCI+PC9pPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAxPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duPlxcbiAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDE8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICAgICAgPC9Ecm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgPC9Ecm9wZG93bj5cXG4gICAgICAgICAgICA8RHJvcGRvd24gdHJpZ2dlcj1cXFwiY2xpY2tcXFwiIHBvc2l0aW9uPXt7IHtteTogJ2xlZnQgdG9wJywgYXQ6ICdyaWdodCB0b3AnfSB9fT5cXG4gICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJjLW1pZGRsZVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI+Y2xpY2s8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cXFwiYy1taWRkbGUgaW9uLWlvcy1hcnJvdy1yaWdodFxcXCI+PC9pPlxcbiAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICAgICAgICAgIDxEcm9wZG93biB0cmlnZ2VyPVxcXCJjbGlja1xcXCIgcG9zaXRpb249e3sge215OiAnbGVmdCB0b3AnLCBhdDogJ3JpZ2h0IHRvcCd9IH19PlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJjLW1pZGRsZVxcXCIgc3R5bGU9XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI+Y2xpY2s8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVxcXCJjLW1pZGRsZSBpb24taW9zLWFycm93LXJpZ2h0XFxcIj48L2k+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDE8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDI8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgICAgICAgICAgICAgICAgIDwvRHJvcGRvd24+XFxuICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8L0Ryb3Bkb3duPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAzPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgPC9Ecm9wZG93bj5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5pb24taW9zLWFycm93LXJpZ2h0XFxuICAgIGZsb2F0IHJpZ2h0XFxuICAgICY6YmVmb3JlXFxuICAgICAgICBmb250LXNpemUgaW5oZXJpdFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjI5LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZHJvcGRvd24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICBob3ZlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wb3NpdGlvbjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm15Ojwvc3Bhbj4gJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxlZnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hdDo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dG9wPC9zcGFuPid9IH19Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zcGFuPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiYy1taWRkbGVcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zdHlsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibWFyZ2luLXJpZ2h0OiAxMHB4XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmhvdmVyPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNwYW48L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjLW1pZGRsZSBpb24taW9zLWFycm93LXJpZ2h0XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cG9zaXRpb248L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5teTo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sZWZ0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50b3A8L3NwYW4+JywgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YXQ6PC9zcGFuPiAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nfSB9fSZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNwYW48L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjLW1pZGRsZVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnN0eWxlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJtYXJnaW4tcmlnaHQ6IDEwcHhcXFwiPC9zcGFuPiZndDs8L3NwYW4+aG92ZXI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+c3Bhbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiYy1taWRkbGUgaW9uLWlvcy1hcnJvdy1yaWdodFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAxPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDE8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHJpZ2dlcjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiY2xpY2tcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wb3NpdGlvbjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm15Ojwvc3Bhbj4gJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxlZnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hdDo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dG9wPC9zcGFuPid9IH19Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zcGFuPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiYy1taWRkbGVcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zdHlsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibWFyZ2luLXJpZ2h0OiAxMHB4XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmNsaWNrPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNwYW48L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjLW1pZGRsZSBpb24taW9zLWFycm93LXJpZ2h0XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHJpZ2dlcjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiY2xpY2tcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wb3NpdGlvbjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm15Ojwvc3Bhbj4gJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxlZnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hdDo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dG9wPC9zcGFuPid9IH19Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+c3Bhbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImMtbWlkZGxlXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5jbGljazxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zcGFuPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJjLW1pZGRsZSBpb24taW9zLWFycm93LXJpZ2h0XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDE8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uaW9uLWlvcy1hcnJvdy1yaWdodDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5mbG9hdDwvc3Bhbj4gcmlnaHRcXG4gICAgJmFtcDs6YmVmb3JlXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmZvbnQtc2l6ZTwvc3Bhbj4gaW5oZXJpdDwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2Ryb3Bkb3duL2RlbW9zL25lc3RlZC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy9uZXN0ZWQvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6I+c5Y2V5L2N572uXCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5wb3NpdGlvbjwvY29kZT7lsZ7mgKfvvIzlj6/ku6XlrprkuYnoj5zljZXnm7jlr7nop6blj5HlmajnmoTkvY3nva7jgILkvY3nva7lr7nosaHkuK08Y29kZT5teTwvY29kZT7mjIfoj5zljZXvvIw8Y29kZT5hdDwvY29kZT7mjIfop6blj5Hlmag8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gZnJvbSAna3BjL2NvbXBvbmVudHMvZHJvcGRvd24nO1xcbmltcG9ydCBCdXR0b24gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48ZGl2PlxcbiAgICA8RHJvcGRvd24gcG9zaXRpb249e3sge215OiAnbGVmdCB0b3AnLCBhdDogJ2xlZnQgYm90dG9tKzUnfSB9fT5cXG4gICAgICAgIDxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCI+XFxuICAgICAgICAgICAgbGVmdCA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDM8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgIDwvRHJvcGRvd25NZW51PlxcbiAgICA8L0Ryb3Bkb3duPlxcblxcbiAgICA8RHJvcGRvd24gcG9zaXRpb249e3sge215OiAncmlnaHQgdG9wJywgYXQ6ICdyaWdodCBib3R0b20rNSd9IH19PlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIj5cXG4gICAgICAgICAgICByaWdodCA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDM8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgIDwvRHJvcGRvd25NZW51PlxcbiAgICA8L0Ryb3Bkb3duPlxcblxcbiAgICA8RHJvcGRvd24gcG9zaXRpb249e3sge215OiAnY2VudGVyIGJvdHRvbS01JywgYXQ6ICdjZW50ZXIgdG9wJ30gfX0+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiPlxcbiAgICAgICAgICAgIHRvcCBjZW50ZXIgPGkgY2xhc3M9XFxcImstaWNvbiBpb24tYXJyb3ctZG93bi1iXFxcIj48L2k+XFxuICAgICAgICA8L0J1dHRvbj5cXG4gICAgICAgIDxEcm9wZG93bk1lbnU+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDE8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMjwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAzPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICA8L0Ryb3Bkb3duTWVudT5cXG4gICAgPC9Ecm9wZG93bj5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWJ0blxcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjMwLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Ryb3Bkb3duLCBEcm9wZG93bk1lbnUsIERyb3Bkb3duSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZHJvcGRvd24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBvc2l0aW9uPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bXk6PC9zcGFuPiAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGVmdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dG9wPC9zcGFuPicsIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmF0Ojwvc3Bhbj4gJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxlZnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmJvdHRvbTwvc3Bhbj4rPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+NTwvc3Bhbj4nfSB9fSZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgbGVmdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBvc2l0aW9uPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bXk6PC9zcGFuPiAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hdDo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Ym90dG9tPC9zcGFuPis8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj41PC9zcGFuPid9IH19Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwicHJpbWFyeVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICByaWdodCA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBvc2l0aW9uPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bXk6PC9zcGFuPiAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2VudGVyPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ib3R0b20tNTwvc3Bhbj4nLCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hdDo8L3NwYW4+ICc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jZW50ZXI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvcDwvc3Bhbj4nfSB9fSZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgdG9wIGNlbnRlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAzPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duTWVudTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWJ0bjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy9wb3NpdGlvbi9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy9wb3NpdGlvbi9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLop6blj5HmlrnlvI9cIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPjxjb2RlPkRyb3Bkb3duPC9jb2RlPuaPkOS+m+S6huS4pOenjeinpuWPkeaWueW8j+adpeW8ueeql+iPnOWNle+8jDxjb2RlPmhvdmVyPC9jb2RlPuaCrOWBnOinpuWPke+8iOm7mOiupO+8ie+8jDxjb2RlPmNsaWNrPC9jb2RlPueCueWHu+inpuWPkeOAgumAmui/hzxjb2RlPnRyaWdnZXI8L2NvZGU+5bGe5oCn5p2l5oyH5a6a5a6D5Lus44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtEcm9wZG93biwgRHJvcGRvd25NZW51LCBEcm9wZG93bkl0ZW19IGZyb20gJ2twYy9jb21wb25lbnRzL2Ryb3Bkb3duJztcXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPERyb3Bkb3duPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIj5cXG4gICAgICAgICAgICBob3ZlciA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDM8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgIDwvRHJvcGRvd25NZW51PlxcbiAgICA8L0Ryb3Bkb3duPlxcblxcbiAgICA8RHJvcGRvd24gdHJpZ2dlcj1cXFwiY2xpY2tcXFwiPlxcbiAgICAgICAgPEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIj5cXG4gICAgICAgICAgICBjbGljayA8aSBjbGFzcz1cXFwiay1pY29uIGlvbi1hcnJvdy1kb3duLWJcXFwiPjwvaT5cXG4gICAgICAgIDwvQnV0dG9uPlxcbiAgICAgICAgPERyb3Bkb3duTWVudT5cXG4gICAgICAgICAgICA8RHJvcGRvd25JdGVtPml0ZW0gMTwvRHJvcGRvd25JdGVtPlxcbiAgICAgICAgICAgIDxEcm9wZG93bkl0ZW0+aXRlbSAyPC9Ecm9wZG93bkl0ZW0+XFxuICAgICAgICAgICAgPERyb3Bkb3duSXRlbT5pdGVtIDM8L0Ryb3Bkb3duSXRlbT5cXG4gICAgICAgIDwvRHJvcGRvd25NZW51PlxcbiAgICA8L0Ryb3Bkb3duPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstYnRuXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6MzEsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7RHJvcGRvd24sIERyb3Bkb3duTWVudSwgRHJvcGRvd25JdGVtfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9kcm9wZG93bic8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIGhvdmVyIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsYXNzPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJrLWljb24gaW9uLWFycm93LWRvd24tYlxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAxPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDM8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25NZW51PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcblxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHJpZ2dlcjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiY2xpY2tcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInByaW1hcnlcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgY2xpY2sgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImstaWNvbiBpb24tYXJyb3ctZG93bi1iXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5pdGVtIDE8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RHJvcGRvd25JdGVtPC9zcGFuPiZndDs8L3NwYW4+aXRlbSAyPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duSXRlbTwvc3Bhbj4mZ3Q7PC9zcGFuPml0ZW0gMzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bkl0ZW08L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Ecm9wZG93bk1lbnU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkRyb3Bkb3duPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1idG48L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZHJvcGRvd24vZGVtb3MvdHJpZ2dlci9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9kcm9wZG93bi9kZW1vcy90cmlnZ2VyL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuehgOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5L2/55SoPGNvZGU+di1tb2RlbDwvY29kZT7lu7rnq4vpnIDopoHnvJbovpHnmoTmlofmnKznmoTlj4zlkJHmlbDmja7nu5HlrprvvJvkvb/nlKg8Y29kZT5kaXNhYmxlZDwvY29kZT7lj6/ku6XnpoHnlKjmlofmnKznvJbovpE8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgRWRpdGFibGUgZnJvbSAna3BjL2NvbXBvbmVudHMvZWRpdGFibGUnO1xcblxcbjxkaXY+XFxuICAgIDxFZGl0YWJsZSB2LW1vZGVsPVxcXCJ0ZXh0XFxcIiByZWY9XFxcImFcXFwiPlxcbiAgICAgICAgPGkgY2xhc3M9XFxcImlvbi1pb3MtbG9jYXRpb25cXFwiPjwvaT5cXG4gICAgICAgIDxhIGhyZWY9XFxcIlxcXCI+e3sgc2VsZi5nZXQoJ3RleHQnKSB9fTwvYT5cXG4gICAgPC9FZGl0YWJsZT5cXG4gICAgPGJyIC8+XFxuICAgIDxFZGl0YWJsZSB2YWx1ZT1cXFwiZGlzYWJsZWQgZWRpdGFibGUgdGV4dFxcXCIgZGlzYWJsZWQ+XFxuICAgICAgICA8aSBjbGFzcz1cXFwiaW9uLWlvcy1sb2NhdGlvblxcXCI+PC9pPlxcbiAgICAgICAgPGEgaHJlZj1cXFwiXFxcIj5kaXNhYmxlZCBlZGl0YWJsZSB0ZXh0PC9hPlxcbiAgICA8L0VkaXRhYmxlPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmlvbi1pb3MtbG9jYXRpb25cXG4gICAgbWFyZ2luLXJpZ2h0IDEwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHdpbmRvdy5fX2FhYSA9IHRoaXM7XFxuICAgICAgICByZXR1cm4ge1xcbiAgICAgICAgICAgIHRleHQ6ICdlZGl0YWJsZSB0ZXh0J1xcbiAgICAgICAgfVxcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjMzLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gRWRpdGFibGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZWRpdGFibGUnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RWRpdGFibGU8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInRleHRcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5yZWY8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImFcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5pPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jbGFzczwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiaW9uLWlvcy1sb2NhdGlvblxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+aHJlZjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPnt7IHNlbGYuZ2V0KCd0ZXh0JykgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RWRpdGFibGU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5FZGl0YWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRpc2FibGVkIGVkaXRhYmxlIHRleHRcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kaXNhYmxlZDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+aTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImlvbi1pb3MtbG9jYXRpb25cXFwiPC9zcGFuPiZndDs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmk8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmE8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmhyZWY8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5kaXNhYmxlZCBlZGl0YWJsZSB0ZXh0PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmE8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkVkaXRhYmxlPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uaW9uLWlvcy1sb2NhdGlvbjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWJ1aWx0X2luXFxcIj53aW5kb3c8L3NwYW4+Ll9fYWFhID0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj47XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5yZXR1cm48L3NwYW4+IHtcXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50ZXh0PC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nZWRpdGFibGUgdGV4dCc8L3NwYW4+XFxuICAgICAgICB9XFxuICAgIH1cXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZWRpdGFibGUvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvZWRpdGFibGUvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6aqM6K+B6L6T5YWlXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7kvb/nlKg8Y29kZT52YWxpZGF0ZTwvY29kZT7lsZ7mgKfvvIzmjIflrprovpPlhaXpqozor4Hop4TliJnvvIzmlLnlgLzlj6/ku6XmmK/lh73mlbAv5q2j5YiZL+ato+WImeWtl+espuS4suOAgumqjOivgeWksei0pe+8jOi+k+WFpeahhuS8mua3u+WKoGNsYXNzTmFtZTogPGNvZGU+ay1pbnZhbGlkPC9jb2RlPu+8jOeUqOS7peaUueWPmOagt+W8j+OAguaIkeS7rOi/mOWPr+S7pee7keWumjxjb2RlPmVycm9yPC9jb2RlPuS6i+S7tuW8ueWHuuabtOWkmumUmeivr+aPkOekuuOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBFZGl0YWJsZSBmcm9tICdrcGMvY29tcG9uZW50cy9lZGl0YWJsZSc7XFxuXFxuPGRpdj5cXG4gICAgPEVkaXRhYmxlIHYtbW9kZWw9XFxcInZhbHVlXFxcIiB2YWxpZGF0ZT17eyB2YWx1ZSA9PiAvXFxcXGQrLy50ZXN0KHZhbHVlKSB9fT57eyBzZWxmLmdldCgndmFsdWUnKSB9fTwvRWRpdGFibGU+XFxuICAgIDxiciAvPlxcbiAgICA8RWRpdGFibGUgdi1tb2RlbD1cXFwidmFsdWVcXFwiIHZhbGlkYXRlPXt7IC9cXFxcZCsvIH19Pnt7IHNlbGYuZ2V0KCd2YWx1ZScpIH19PC9FZGl0YWJsZT5cXG4gICAgPGJyIC8+XFxuICAgIDxFZGl0YWJsZSB2LW1vZGVsPVxcXCJ2YWx1ZVxcXCIgdmFsaWRhdGU9XFxcIlxcXFxkK1xcXCJcXG4gICAgICAgIGV2LWVycm9yPXt7IHNlbGYuX3Nob3dFcnJvclRpcCB9fVxcbiAgICA+e3sgc2VsZi5nZXQoJ3ZhbHVlJykgfX08L0VkaXRhYmxlPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmltcG9ydCBNZXNzYWdlIGZyb20gJ2twYy9jb21wb25lbnRzL21lc3NhZ2UnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7dmFsdWU6IDEwMH07XFxuICAgIH1cXG5cXG4gICAgX3Nob3dFcnJvclRpcChjLCB2YWx1ZSkge1xcbiAgICAgICAgTWVzc2FnZS5lcnJvcignUGxlYXNlIGVudGVyIGRpZ2l0cy4nKTtcXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjozNCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEVkaXRhYmxlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2VkaXRhYmxlJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkVkaXRhYmxlPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJ2YWx1ZVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbGlkYXRlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj4gPSZndDs8L3NwYW4+IC9cXFxcZCsvLnRlc3QodmFsdWUpIH19Jmd0O3t7IHNlbGYuZ2V0KCd2YWx1ZScpIH19PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkVkaXRhYmxlPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RWRpdGFibGU8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInZhbHVlXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsaWRhdGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IC9cXFxcPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZDwvc3Bhbj4rLyB9fSZndDs8L3NwYW4+e3sgc2VsZi5nZXQoJ3ZhbHVlJykgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RWRpdGFibGU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YnI8L3NwYW4+IC8mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5FZGl0YWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwidmFsdWVcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWxpZGF0ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiXFxcXGQrXFxcIjwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWVycm9yPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLl9zaG93RXJyb3JUaXA8L3NwYW4+IH19XFxuICAgICZndDs8L3NwYW4+e3sgc2VsZi5nZXQoJ3ZhbHVlJykgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+RWRpdGFibGU8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBNZXNzYWdlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL21lc3NhZ2UnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgZGVmYXVsdHMoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5yZXR1cm48L3NwYW4+IHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTAwPC9zcGFuPn07XFxuICAgIH1cXG5cXG4gICAgX3Nob3dFcnJvclRpcChjLCB2YWx1ZSkge1xcbiAgICAgICAgTWVzc2FnZS5lcnJvcig8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidQbGVhc2UgZW50ZXIgZGlnaXRzLic8L3NwYW4+KTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9lZGl0YWJsZS9kZW1vcy92YWxpZGF0ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9lZGl0YWJsZS9kZW1vcy92YWxpZGF0ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rmnKznlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuihqOWNlemcgOimgTxjb2RlPkZvcm08L2NvZGU+5bWM5aWXPGNvZGU+Rm9ybUl0ZW08L2NvZGU+6L+b6KGM5L2/55So77yMPGNvZGU+Rm9ybUl0ZW08L2NvZGU+5Lit5Y+v5Lul5YyF5ZCr5Lu75oSP57uE5Lu25oiW5Y6f55Sf5YWD57Sg44CC5ZCM5pe25oiR5Lus5Y+v5Lul5oyH5a6aPGNvZGU+Rm9ybUl0ZW08L2NvZGU+55qE6KGo5Y2V6aqM6K+B6KeE5YiZ77yaPC9wPlxcbjxvbD5cXG48bGk+57uZPGNvZGU+Rm9ybUl0ZW08L2NvZGU+5re75YqgPGNvZGU+bW9kZWw8L2NvZGU+5bGe5oCn77yM5oyH5a6a6ZyA6KaB6aqM6K+B55qE5a2X5q615ZCN44CC5aaC5p6c5LiN5oyH5a6a77yM5YiZ5LiN5Lya6L+b6KGM5Lu75L2V6aqM6K+BPC9saT5cXG48bGk+57uZPGNvZGU+Rm9ybUl0ZW08L2NvZGU+5re75YqgPGNvZGU+cnVsZXM8L2NvZGU+5bGe5oCn77yM5oyH5a6a6ZyA6KaB6aqM6K+B55qE6KeE5YiZ44CC5aaC5p6c5LiN5oyH5a6a77yM5YiZ5LiN5Lya6L+b6KGM5Lu75L2V6aqM6K+B44CC5YaF572u55qE6aqM6K+B6KeE5YiZ5aaC5LiL77yaPG9sPlxcbjxsaT48Y29kZT5yZXF1aXJlZCB7Qm9vbGVhbn08L2NvZGU+77ya5b+F6aG75aGr5YaZPC9saT5cXG48bGk+PGNvZGU+ZGlnaXRzIHtCb29sZWFufTwvY29kZT7vvJog6K+36L6T5YWl5pWw5a2XPC9saT5cXG48bGk+PGNvZGU+ZW1haWwge0Jvb2xlYW59PC9jb2RlPjog6K+36L6T5YWl5q2j56Gu55qE6YKu566x5Zyw5Z2APC9saT5cXG48bGk+PGNvZGU+dXJsIHtCb29sZWFufTwvY29kZT46IOivt+i+k+WFpeato+ehrueahOe9keWdgDwvbGk+XFxuPGxpPjxjb2RlPmRhdGUge0Jvb2xlYW59PC9jb2RlPu+8muivt+i+k+WFpeato+ehrueahOaXpeacnzwvbGk+XFxuPGxpPjxjb2RlPmRhdGVJU08ge0Jvb2xlYW59PC9jb2RlPu+8muivt+i+k+WFpeato+ehrueahOaXpeacn++8iFlZWVktTU0tRETvvIk8L2xpPlxcbjxsaT48Y29kZT5udW1iZXIge0Jvb2xlYW59PC9jb2RlPu+8muivt+i+k+WFpeato+ehrueahOaVsDwvbGk+XFxuPGxpPjxjb2RlPm1heExlbmd0aCB7TnVtYmVyfTwvY29kZT7vvJrlpoLmnpzmo4DpqoznmoTlgLzmmK/mlbDnu4TvvJrmnIDlpJrpgInmi6lu6aG577yb5aaC5p6c5qOA6aqM55qE5YC85piv5a2X56ym5Liy77ya5pyA5aSa6L6T5YWlbuS4quWtl+espjwvbGk+XFxuPGxpPjxjb2RlPm1pbkxlbmd0aCB7TnVtYmVyfTwvY29kZT7vvJrlkIzkuIrvvIjmo4DpqozmnIDlsJHplb/luqbvvIk8L2xpPlxcbjxsaT48Y29kZT5yYW5nZUxlbmd0aCB7QXJyYXkmbHQ7TnVtYmVyJmd0O308L2NvZGU+77ya5ZCM5LiK77yM5qOA6aqM6ZW/5bqm55qE6IyD5Zu0PC9saT5cXG48bGk+PGNvZGU+bWF4IHtOdW1iZXJ9PC9jb2RlPu+8muivt+i+k+WFpeS4jeWkp+S6jm7nmoTmlbA8L2xpPlxcbjxsaT48Y29kZT5taW4ge051bWJlcn08L2NvZGU+77ya6K+36L6T5YWl5LiN5bCP5LqObueahOaVsDwvbGk+XFxuPGxpPjxjb2RlPnJhbmdlIHtBcnJheSZsdDtOdW1iZXImZ3Q7fTwvY29kZT7vvJror7fovpPlhaVtaW7liLBtYXjkuYvpl7TnmoTmlbA8L2xpPlxcbjxsaT48Y29kZT5zdGVwIHtOdW1iZXJ9PC9jb2RlPu+8muivt+i+k+WFpeatpemVv+S4um7nmoTmlbA8L2xpPlxcbjxsaT48Y29kZT5lcXVhbFRvIHtTdHJpbmd9PC9jb2RlPu+8muS4pOasoei+k+WFpeS4jeS4gOiHtDwvbGk+XFxuPC9vbD5cXG48L2xpPlxcbjxsaT7nu5k8Y29kZT5Gb3JtSXRlbTwvY29kZT7mt7vliqA8Y29kZT5tZXNzYWdlczwvY29kZT7lsZ7mgKfvvIzmjIflrprpqozor4HlpLHotKXml7blsZXnpLrnmoTplJnor6/lhoXlrrnjgILpu5jorqTlhoXlrrnlpoLkuIrmiYDnpLo8L2xpPlxcbjxsaT7nu5k8Y29kZT5Gb3JtSXRlbTwvY29kZT7mt7vliqA8Y29kZT5jbGFzc05hbWVzPC9jb2RlPuWxnuaAp++8jOaMh+WumumqjOivgeWksei0peaXtumUmeivr+WFg+e0oOmcgOimgemineWklua3u+WKoOeahGNsYXNzTmFtZe+8jOm7mOiupOS4jea3u+WKoDwvbGk+XFxuPC9vbD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7Rm9ybSwgRm9ybUl0ZW19IGZyb20gJ2twYy9jb21wb25lbnRzL2Zvcm0nO1xcbmltcG9ydCB7SW5wdXR9IGZyb20gJ2twYy9jb21wb25lbnRzL2lucHV0JztcXG5pbXBvcnQge1NlbGVjdCwgT3B0aW9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9zZWxlY3QnO1xcbmltcG9ydCB7Q2hlY2tib3h9IGZyb20gJ2twYy9jb21wb25lbnRzL2NoZWNrYm94JztcXG5pbXBvcnQge1JhZGlvfSBmcm9tICdrcGMvY29tcG9uZW50cy9yYWRpbyc7XFxuaW1wb3J0IHtCdXR0b25Hcm91cCwgQnV0dG9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcbmltcG9ydCB7U3dpdGNofSBmcm9tICdrcGMvY29tcG9uZW50cy9zd2l0Y2gnO1xcbmltcG9ydCB7U2xpZGVyfSBmcm9tICdrcGMvY29tcG9uZW50cy9zbGlkZXInO1xcblxcbjxGb3JtIGV2LXN1Ym1pdD17eyBzZWxmLnN1Ym1pdCB9fSByZWY9XFxcImZvcm1cXFwiPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIklucHV0XFxcIiBtb2RlbD1cXFwibW9kZWwuaW5wdXRcXFwiIHJ1bGVzPXt7IHtyZXF1aXJlZDogdHJ1ZX0gfX0+XFxuICAgICAgICA8SW5wdXQgdi1tb2RlbD1cXFwibW9kZWwuaW5wdXRcXFwiIC8+XFxuICAgIDwvRm9ybUl0ZW0+XFxuICAgIDxGb3JtSXRlbSBsYWJlbD1cXFwiU2VsZWN0XFxcIiBtb2RlbD1cXFwibW9kZWwuc2VsZWN0XFxcIiBcXG4gICAgICAgIHJ1bGVzPXt7IHtyZXF1aXJlZDogdHJ1ZX0gfX0gXFxuICAgICAgICBtZXNzYWdlcz17eyB7cmVxdWlyZWQ6ICflv4XpobvpgInmi6knfSB9fVxcbiAgICA+XFxuICAgICAgICA8U2VsZWN0IHYtbW9kZWw9XFxcIm1vZGVsLnNlbGVjdFxcXCI+XFxuICAgICAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiSmF2YXNjcmlwdFxcXCI+SmF2YXNjcmlwdDwvT3B0aW9uPlxcbiAgICAgICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlBIUFxcXCI+UEhQPC9PcHRpb24+XFxuICAgICAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiQysrXFxcIj5DKys8L09wdGlvbj5cXG4gICAgICAgIDwvU2VsZWN0PlxcbiAgICA8L0Zvcm1JdGVtPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIkNoZWNrYm94XFxcIiBtb2RlbD1cXFwibW9kZWwuY2hlY2tib3hcXFwiIFxcbiAgICAgICAgcnVsZXM9e3sge3JlcXVpcmVkOiB0cnVlLCBtYXhMZW5ndGg6IDJ9IH19XFxuICAgICAgICBtZXNzYWdlcz17eyB7cmVxdWlyZWQ6ICflv4XpobvpgInmi6knfSB9fVxcbiAgICA+XFxuICAgICAgICA8Q2hlY2tib3ggdHJ1ZVZhbHVlPVxcXCJKYXZhc2NyaXB0XFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5jaGVja2JveFxcXCI+SmF2YXNjcmlwdDwvQ2hlY2tib3g+XFxuICAgICAgICA8Q2hlY2tib3ggdHJ1ZVZhbHVlPVxcXCJQSFBcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLmNoZWNrYm94XFxcIj5QSFA8L0NoZWNrYm94PlxcbiAgICAgICAgPENoZWNrYm94IHRydWVWYWx1ZT1cXFwiQysrXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5jaGVja2JveFxcXCI+QysrPC9DaGVja2JveD5cXG4gICAgPC9Gb3JtSXRlbT5cXG4gICAgPEZvcm1JdGVtIGxhYmVsPVxcXCJSYWRpb1xcXCIgbW9kZWw9XFxcIm1vZGVsLnJhZGlvXFxcIlxcbiAgICAgICAgcnVsZXM9e3sge3JlcXVpcmVkOiB0cnVlfSB9fSBcXG4gICAgICAgIG1lc3NhZ2VzPXt7IHtyZXF1aXJlZDogJ+W/hemhu+mAieaLqSd9IH19XFxuICAgID5cXG4gICAgICAgIDxSYWRpbyB0cnVlVmFsdWU9XFxcIkphdmFzY3JpcHRcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLnJhZGlvXFxcIj5KYXZhc2NyaXB0PC9SYWRpbz5cXG4gICAgICAgIDxSYWRpbyB0cnVlVmFsdWU9XFxcIlBIUFxcXCIgdi1tb2RlbD1cXFwibW9kZWwucmFkaW9cXFwiPlBIUDwvUmFkaW8+XFxuICAgICAgICA8UmFkaW8gdHJ1ZVZhbHVlPVxcXCJDKytcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLnJhZGlvXFxcIj5DKys8L1JhZGlvPlxcbiAgICA8L0Zvcm1JdGVtPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIlJhZGlvIEJ1dHRvbkdyb3VwXFxcIiBtb2RlbD1cXFwibW9kZWwuYnV0dG9uR3JvdXBcXFwiXFxuICAgICAgICBydWxlcz17eyB7cmVxdWlyZWQ6IHRydWV9IH19IFxcbiAgICAgICAgbWVzc2FnZXM9e3sge3JlcXVpcmVkOiAn5b+F6aG76YCJ5oupJ30gfX1cXG4gICAgPlxcbiAgICAgICAgPEJ1dHRvbkdyb3VwIGNoZWNrVHlwZT1cXFwicmFkaW9cXFwiIHYtbW9kZWw9XFxcIm1vZGVsLmJ1dHRvbkdyb3VwXFxcIj5cXG4gICAgICAgICAgICA8QnV0dG9uIHZhbHVlPVxcXCJKYXZhc2NyaXB0XFxcIj5KYXZhc2NyaXB0PC9CdXR0b24+XFxuICAgICAgICAgICAgPEJ1dHRvbiB2YWx1ZT1cXFwiUEhQXFxcIj5QSFA8L0J1dHRvbj5cXG4gICAgICAgICAgICA8QnV0dG9uIHZhbHVlPVxcXCJDKytcXFwiPkMrKzwvQnV0dG9uPlxcbiAgICAgICAgPC9CdXR0b25Hcm91cD5cXG4gICAgPC9Gb3JtSXRlbT5cXG4gICAgPEZvcm1JdGVtIGxhYmVsPVxcXCJTd2l0Y2hcXFwiPlxcbiAgICAgICAgPFN3aXRjaCB2LW1vZGVsPVxcXCJtb2RlbC5zd2l0Y2hcXFwiIC8+XFxuICAgIDwvRm9ybUl0ZW0+XFxuICAgIDxGb3JtSXRlbSBsYWJlbD1cXFwiU2xpZGVyXFxcIj5cXG4gICAgICAgIDxTbGlkZXIgdi1tb2RlbD1cXFwibW9kZWwuc2xpZGVyXFxcIiBpc1Nob3dJbnB1dD17eyBmYWxzZSB9fSAvPlxcbiAgICA8L0Zvcm1JdGVtPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIlRleHRhcmVhXFxcIiBtb2RlbD1cXFwibW9kZWwudGV4dGFyZWFcXFwiPlxcbiAgICAgICAgPElucHV0IHR5cGU9XFxcInRleHRhcmVhXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC50ZXh0YXJlYVxcXCIgLz5cXG4gICAgPC9Gb3JtSXRlbT5cXG4gICAgPEZvcm1JdGVtIGxhYmVsPVxcXCJQYXNzd29yZFxcXCIgbW9kZWw9XFxcIm1vZGVsLnBhc3N3b3JkXFxcIlxcbiAgICAgICAgcnVsZXM9e3sge3JlcXVpcmVkOiB0cnVlfSB9fVxcbiAgICA+XFxuICAgICAgICA8SW5wdXQgdHlwZT1cXFwicGFzc3dvcmRcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLnBhc3N3b3JkXFxcIiAvPlxcbiAgICA8L0Zvcm1JdGVtPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIkNvbmZpcm0gUGFzc3dvcmRcXFwiIG1vZGVsPVxcXCJtb2RlbC5jb25maXJtUGFzc3dvcmRcXFwiXFxuICAgICAgICBydWxlcz17eyB7cmVxdWlyZWQ6IHRydWUsIGVxdWFsVG86ICdtb2RlbC5wYXNzd29yZCd9IH19XFxuICAgID5cXG4gICAgICAgIDxJbnB1dCB0eXBlPVxcXCJwYXNzd29yZFxcXCIgdi1tb2RlbD1cXFwibW9kZWwuY29uZmlybVBhc3N3b3JkXFxcIiAvPlxcbiAgICA8L0Zvcm1JdGVtPlxcbiAgICA8Rm9ybUl0ZW0+XFxuICAgICAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGh0bWxUeXBlPVxcXCJzdWJtaXRcXFwiPuaPkOS6pDwvQnV0dG9uPlxcbiAgICAgICAgPEJ1dHRvbiBzdHlsZT1cXFwibWFyZ2luLWxlZnQ6IDIwcHhcXFwiIGV2LWNsaWNrPXt7IHNlbGYucmVzZXQgfX0+6YeN572uPC9CdXR0b24+XFxuICAgIDwvRm9ybUl0ZW0+XFxuPC9Gb3JtPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstZm9ybS1pdGVtXFxuICAgID4gLmstbGFiZWxcXG4gICAgICAgIHdpZHRoIDE1MHB4XFxuLmstc2xpZGVyXFxuLmstc2VsZWN0XFxuICAgIHdpZHRoIDMwMHB4XFxuLmstcmFkaW9cXG4uay1jaGVja2JveFxcbiAgICBtYXJnaW4tcmlnaHQgMTBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuaW1wb3J0IE1lc3NhZ2UgZnJvbSAna3BjL2NvbXBvbmVudHMvbWVzc2FnZSc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICBtb2RlbDoge1xcbiAgICAgICAgICAgICAgICBjaGVja2JveDogW11cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9O1xcbiAgICB9XFxuXFxuICAgIHN1Ym1pdCgpIHtcXG4gICAgICAgIE1lc3NhZ2Uuc3VjY2Vzcygn6aqM6K+B6YCa6L+H77yM5byA5aeL5o+Q5LqkJyk7XFxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmdldCgnbW9kZWwnKSk7XFxuICAgIH1cXG5cXG4gICAgcmVzZXQoKSB7XFxuICAgICAgICB0aGlzLnJlZnMuZm9ybS5yZXNldCgpO1xcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5nZXQoJ21vZGVsJykpO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjM2LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Zvcm0sIEZvcm1JdGVtfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9mb3JtJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7SW5wdXR9IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2lucHV0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7U2VsZWN0LCBPcHRpb259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3NlbGVjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0NoZWNrYm94fSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9jaGVja2JveCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1JhZGlvfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9yYWRpbyc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0J1dHRvbkdyb3VwLCBCdXR0b259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1N3aXRjaH0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc3dpdGNoJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7U2xpZGVyfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9zbGlkZXInPC9zcGFuPjtcXG5cXG4mbHQ7Rm9ybSBldi1zdWJtaXQ9e3sgc2VsZi5zdWJtaXQgfX0gcmVmPVxcXCJmb3JtXFxcIiZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCJJbnB1dFxcXCIgbW9kZWw9XFxcIm1vZGVsLmlucHV0XFxcIiBydWxlcz17eyB7cmVxdWlyZWQ6IHRydWV9IH19Jmd0O1xcbiAgICAgICAgJmx0O0lucHV0IHYtbW9kZWw9XFxcIm1vZGVsLmlucHV0XFxcIiAvJmd0O1xcbiAgICAmbHQ7L0Zvcm1JdGVtJmd0O1xcbiAgICAmbHQ7Rm9ybUl0ZW0gbGFiZWw9XFxcIlNlbGVjdFxcXCIgbW9kZWw9XFxcIm1vZGVsLnNlbGVjdFxcXCIgXFxuICAgICAgICBydWxlcz17eyB7cmVxdWlyZWQ6IHRydWV9IH19IFxcbiAgICAgICAgbWVzc2FnZXM9e3sge3JlcXVpcmVkOiAn5b+F6aG76YCJ5oupJ30gfX1cXG4gICAgJmd0O1xcbiAgICAgICAgJmx0O1NlbGVjdCB2LW1vZGVsPVxcXCJtb2RlbC5zZWxlY3RcXFwiJmd0O1xcbiAgICAgICAgICAgICZsdDtPcHRpb24gdmFsdWU9XFxcIkphdmFzY3JpcHRcXFwiJmd0O0phdmFzY3JpcHQmbHQ7L09wdGlvbiZndDtcXG4gICAgICAgICAgICAmbHQ7T3B0aW9uIHZhbHVlPVxcXCJQSFBcXFwiJmd0O1BIUCZsdDsvT3B0aW9uJmd0O1xcbiAgICAgICAgICAgICZsdDtPcHRpb24gdmFsdWU9XFxcIkMrK1xcXCImZ3Q7QysrJmx0Oy9PcHRpb24mZ3Q7XFxuICAgICAgICAmbHQ7L1NlbGVjdCZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCJDaGVja2JveFxcXCIgbW9kZWw9XFxcIm1vZGVsLmNoZWNrYm94XFxcIiBcXG4gICAgICAgIHJ1bGVzPXt7IHtyZXF1aXJlZDogdHJ1ZSwgbWF4TGVuZ3RoOiAyfSB9fVxcbiAgICAgICAgbWVzc2FnZXM9e3sge3JlcXVpcmVkOiAn5b+F6aG76YCJ5oupJ30gfX1cXG4gICAgJmd0O1xcbiAgICAgICAgJmx0O0NoZWNrYm94IHRydWVWYWx1ZT1cXFwiSmF2YXNjcmlwdFxcXCIgdi1tb2RlbD1cXFwibW9kZWwuY2hlY2tib3hcXFwiJmd0O0phdmFzY3JpcHQmbHQ7L0NoZWNrYm94Jmd0O1xcbiAgICAgICAgJmx0O0NoZWNrYm94IHRydWVWYWx1ZT1cXFwiUEhQXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5jaGVja2JveFxcXCImZ3Q7UEhQJmx0Oy9DaGVja2JveCZndDtcXG4gICAgICAgICZsdDtDaGVja2JveCB0cnVlVmFsdWU9XFxcIkMrK1xcXCIgdi1tb2RlbD1cXFwibW9kZWwuY2hlY2tib3hcXFwiJmd0O0MrKyZsdDsvQ2hlY2tib3gmZ3Q7XFxuICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICZsdDtGb3JtSXRlbSBsYWJlbD1cXFwiUmFkaW9cXFwiIG1vZGVsPVxcXCJtb2RlbC5yYWRpb1xcXCJcXG4gICAgICAgIHJ1bGVzPXt7IHtyZXF1aXJlZDogdHJ1ZX0gfX0gXFxuICAgICAgICBtZXNzYWdlcz17eyB7cmVxdWlyZWQ6ICflv4XpobvpgInmi6knfSB9fVxcbiAgICAmZ3Q7XFxuICAgICAgICAmbHQ7UmFkaW8gdHJ1ZVZhbHVlPVxcXCJKYXZhc2NyaXB0XFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5yYWRpb1xcXCImZ3Q7SmF2YXNjcmlwdCZsdDsvUmFkaW8mZ3Q7XFxuICAgICAgICAmbHQ7UmFkaW8gdHJ1ZVZhbHVlPVxcXCJQSFBcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLnJhZGlvXFxcIiZndDtQSFAmbHQ7L1JhZGlvJmd0O1xcbiAgICAgICAgJmx0O1JhZGlvIHRydWVWYWx1ZT1cXFwiQysrXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5yYWRpb1xcXCImZ3Q7QysrJmx0Oy9SYWRpbyZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCJSYWRpbyBCdXR0b25Hcm91cFxcXCIgbW9kZWw9XFxcIm1vZGVsLmJ1dHRvbkdyb3VwXFxcIlxcbiAgICAgICAgcnVsZXM9e3sge3JlcXVpcmVkOiB0cnVlfSB9fSBcXG4gICAgICAgIG1lc3NhZ2VzPXt7IHtyZXF1aXJlZDogJ+W/hemhu+mAieaLqSd9IH19XFxuICAgICZndDtcXG4gICAgICAgICZsdDtCdXR0b25Hcm91cCBjaGVja1R5cGU9XFxcInJhZGlvXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5idXR0b25Hcm91cFxcXCImZ3Q7XFxuICAgICAgICAgICAgJmx0O0J1dHRvbiB2YWx1ZT1cXFwiSmF2YXNjcmlwdFxcXCImZ3Q7SmF2YXNjcmlwdCZsdDsvQnV0dG9uJmd0O1xcbiAgICAgICAgICAgICZsdDtCdXR0b24gdmFsdWU9XFxcIlBIUFxcXCImZ3Q7UEhQJmx0Oy9CdXR0b24mZ3Q7XFxuICAgICAgICAgICAgJmx0O0J1dHRvbiB2YWx1ZT1cXFwiQysrXFxcIiZndDtDKysmbHQ7L0J1dHRvbiZndDtcXG4gICAgICAgICZsdDsvQnV0dG9uR3JvdXAmZ3Q7XFxuICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICZsdDtGb3JtSXRlbSBsYWJlbD1cXFwiU3dpdGNoXFxcIiZndDtcXG4gICAgICAgICZsdDtTd2l0Y2ggdi1tb2RlbD1cXFwibW9kZWwuc3dpdGNoXFxcIiAvJmd0O1xcbiAgICAmbHQ7L0Zvcm1JdGVtJmd0O1xcbiAgICAmbHQ7Rm9ybUl0ZW0gbGFiZWw9XFxcIlNsaWRlclxcXCImZ3Q7XFxuICAgICAgICAmbHQ7U2xpZGVyIHYtbW9kZWw9XFxcIm1vZGVsLnNsaWRlclxcXCIgaXNTaG93SW5wdXQ9e3sgZmFsc2UgfX0gLyZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCJUZXh0YXJlYVxcXCIgbW9kZWw9XFxcIm1vZGVsLnRleHRhcmVhXFxcIiZndDtcXG4gICAgICAgICZsdDtJbnB1dCB0eXBlPVxcXCJ0ZXh0YXJlYVxcXCIgdi1tb2RlbD1cXFwibW9kZWwudGV4dGFyZWFcXFwiIC8mZ3Q7XFxuICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICZsdDtGb3JtSXRlbSBsYWJlbD1cXFwiUGFzc3dvcmRcXFwiIG1vZGVsPVxcXCJtb2RlbC5wYXNzd29yZFxcXCJcXG4gICAgICAgIHJ1bGVzPXt7IHtyZXF1aXJlZDogdHJ1ZX0gfX1cXG4gICAgJmd0O1xcbiAgICAgICAgJmx0O0lucHV0IHR5cGU9XFxcInBhc3N3b3JkXFxcIiB2LW1vZGVsPVxcXCJtb2RlbC5wYXNzd29yZFxcXCIgLyZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCJDb25maXJtIFBhc3N3b3JkXFxcIiBtb2RlbD1cXFwibW9kZWwuY29uZmlybVBhc3N3b3JkXFxcIlxcbiAgICAgICAgcnVsZXM9e3sge3JlcXVpcmVkOiB0cnVlLCBlcXVhbFRvOiAnbW9kZWwucGFzc3dvcmQnfSB9fVxcbiAgICAmZ3Q7XFxuICAgICAgICAmbHQ7SW5wdXQgdHlwZT1cXFwicGFzc3dvcmRcXFwiIHYtbW9kZWw9XFxcIm1vZGVsLmNvbmZpcm1QYXNzd29yZFxcXCIgLyZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtJmd0O1xcbiAgICAgICAgJmx0O0J1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBodG1sVHlwZT1cXFwic3VibWl0XFxcIiZndDvmj5DkuqQmbHQ7L0J1dHRvbiZndDtcXG4gICAgICAgICZsdDtCdXR0b24gc3R5bGU9XFxcIm1hcmdpbi1sZWZ0OiAyMHB4XFxcIiBldi1jbGljaz17eyBzZWxmLnJlc2V0IH19Jmd0O+mHjee9riZsdDsvQnV0dG9uJmd0O1xcbiAgICAmbHQ7L0Zvcm1JdGVtJmd0O1xcbiZsdDsvRm9ybSZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1mb3JtLWl0ZW08L3NwYW4+XFxuICAgICZndDsgPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWxhYmVsPC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj53aWR0aDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xNTBweDwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+Lmstc2xpZGVyPC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1zZWxlY3Q8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+d2lkdGg8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MzAwcHg8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXJhZGlvPC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1jaGVja2JveDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tcmlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gTWVzc2FnZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9tZXNzYWdlJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bW9kZWw8L3NwYW4+OiB7XFxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNoZWNrYm94PC9zcGFuPjogW11cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9O1xcbiAgICB9XFxuXFxuICAgIHN1Ym1pdCgpIHtcXG4gICAgICAgIE1lc3NhZ2Uuc3VjY2Vzcyg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifpqozor4HpgJrov4fvvIzlvIDlp4vmj5DkuqQnPC9zcGFuPik7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1idWlsdF9pblxcXCI+Y29uc29sZTwvc3Bhbj4ubG9nKDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LmdldCg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidtb2RlbCc8L3NwYW4+KSk7XFxuICAgIH1cXG5cXG4gICAgcmVzZXQoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5yZWZzLmZvcm0ucmVzZXQoKTtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWJ1aWx0X2luXFxcIj5jb25zb2xlPC9zcGFuPi5sb2coPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uZ2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J21vZGVsJzwvc3Bhbj4pKTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9mb3JtL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2Zvcm0vZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5a6a5LmJ6aqM6K+B6KeE5YiZXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7lvZPlhoXnva7nmoTpqozor4Hop4TliJnkuI3og73mu6HotrPpnIDmsYLml7bvvIzmiJHku6zov5jlj6/ku6Xoh6rlrprkuYnpqozor4Hop4TliJnjgILmnInlpoLkuIvkuKTnp43mlrnlvI/mt7vliqDop4TliJnvvJo8L3A+XFxuPG9sPlxcbjxsaT7pgJrov4c8Y29kZT5Gb3JtLmFkZE1ldGhvZCgpPC9jb2RlPumdmeaAgeaWueazlea3u+WKoOWFqOWxgOmqjOivgeinhOWIme+8jOeUseS6juaYr+WFqOWxgOeahO+8jOaIkeS7rOWPr+S7peWcqOS7u+aEj+WcsOaWueeahFxcbjxjb2RlPkZvcm1JdGVtPC9jb2RlPuS4reS9v+eUqOivpeinhOWImeOAguS9v+eUqOaWueazleingUFQSeivtOaYjjwvbGk+XFxuPGxpPumAmui/hzxjb2RlPkZvcm1JdGVtPC9jb2RlPueahDxjb2RlPnJ1bGVzPC9jb2RlPuWxnuaAp++8jOWumuS5ieWxgOmDqOinhOWIme+8jOivpeinhOWImeWPquWvueivpTxjb2RlPkZvcm1JdGVtPC9jb2RlPuacieaViDwvbGk+XFxuPC9vbD5cXG48cD7mnKzkvovkuK3vvIzmiJHku6zmt7vliqDkuIDmnaHlhajlsYDop4TliJk8Y29kZT5sZXR0ZXI8L2NvZGU+55So5p2l6aqM6K+B5Y+q6IO96L6T5YWl5a2X5q+N77yM5ZCM5pe25re75Yqg5LiA5p2h5bGA6YOo6KeE5YiZPGNvZGU+dW5pcXVlPC9jb2RlPuadpemqjOivgeaJgOaciei+k+WFpeW/hemhu+S4jeWQjDwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7Rm9ybSwgRm9ybUl0ZW19IGZyb20gJ2twYy9jb21wb25lbnRzL2Zvcm0nO1xcbmltcG9ydCB7SW5wdXR9IGZyb20gJ2twYy9jb21wb25lbnRzL2lucHV0JztcXG5pbXBvcnQge0J1dHRvbn0gZnJvbSAna3BjL2NvbXBvbmVudHMvYnV0dG9uJztcXG5cXG48Rm9ybT5cXG4gICAgPEZvcm1JdGVtIGxhYmVsPVxcXCLmj4/ov7BcXFwiPlxcbiAgICAgICAgPEZvcm1JdGVtIHYtZm9yPXt7IHNlbGYuZ2V0KCdkZXNjcmlwdGlvbnMnKSB9fVxcbiAgICAgICAgICAgIG1vZGVsPXt7IGBkZXNjcmlwdGlvbnMuJHtrZXl9YCB9fVxcbiAgICAgICAgICAgIGhpZGVMYWJlbFxcbiAgICAgICAgICAgIHJ1bGVzPXt7IHtcXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsIFxcbiAgICAgICAgICAgICAgICAvLyDoh6rlrprkuYnlhajlsYDop4TliJlcXG4gICAgICAgICAgICAgICAgbGV0dGVyOiB0cnVlLFxcbiAgICAgICAgICAgICAgICAvLyDoh6rlrprkuYnlsYDpg6jop4TliJnvvIzmiYDmnInmj4/ov7Dlv4XpobvkuI3ph43lpI1cXG4gICAgICAgICAgICAgICAgdW5pcXVlKHZhbHVlKSB7XFxuICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXQoJ2Rlc2NyaXB0aW9ucycpLmZpbmQoaXRlbSA9PiB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT09IHZhbHVlKSBjb3VudCsrO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3VudCA+IDE7XFxuICAgICAgICAgICAgICAgICAgICB9KTtcXG5cXG4gICAgICAgICAgICAgICAgICAgIC8vIOebtOaOpei/lOWbnumUmeivr+aWh+ahiO+8jOaIluiAheS5n+WPr+S7peWNleeLrOWumuS5iW1lc3NhZ2Vz5Li6e3VuaXF1ZTogJ+S4jeiDveebuOWQjCd9XFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY291bnQgPT09IDEgfHwgJ+S4jeiDveebuOWQjCc7XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9IH19XFxuICAgICAgICA+XFxuICAgICAgICAgICAgPElucHV0IHYtbW9kZWw9e3sgYGRlc2NyaXB0aW9ucy4ke2tleX1gIH19IC8+ICAgIFxcbiAgICAgICAgICAgIDxiOmFwcGVuZD5cXG4gICAgICAgICAgICAgICAgPEJ1dHRvbiBldi1jbGljaz17eyBzZWxmLmRlbGV0ZS5iaW5kKHNlbGYsIGtleSkgfX0+5Yig6ZmkPC9CdXR0b24+XFxuICAgICAgICAgICAgPC9iOmFwcGVuZD5cXG4gICAgICAgIDwvRm9ybUl0ZW0+XFxuICAgICAgICA8QnV0dG9uIGV2LWNsaWNrPXt7IHNlbGYuYWRkIH19Pua3u+WKoDwvQnV0dG9uPlxcbiAgICA8L0Zvcm1JdGVtPlxcbjwvRm9ybT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWZvcm0taXRlbVxcbiAgICAuay1mb3JtLWl0ZW1cXG4gICAgICAgIG1hcmdpbi1ib3R0b20gMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuaW1wb3J0IHtGb3JtfSBmcm9tICdrcGMvY29tcG9uZW50cy9mb3JtJztcXG5cXG4vLyDmt7vliqDlhajlsYDop4TliJlcXG5Gb3JtLmFkZE1ldGhvZCgnbGV0dGVyJywgKHZhbHVlLCBpdGVtLCBwYXJhbSkgPT4ge1xcbiAgICBjb25zb2xlLmxvZygnYXJndW1lbnRzJywgdmFsdWUsIGl0ZW0sIHBhcmFtKTtcXG4gICAgcmV0dXJuIC9eW2EtenxBLVpdKyQvLnRlc3QodmFsdWUpO1xcbn0sICflj6rog73ovpPlhaXlrZfmr40nKTtcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgZGVmYXVsdHMoKSB7XFxuICAgICAgICByZXR1cm4ge1xcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uczogWycnXVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIGFkZCgpIHtcXG4gICAgICAgIHRoaXMuc2V0KCdkZXNjcmlwdGlvbnMnLCB0aGlzLmdldCgnZGVzY3JpcHRpb25zJykuY29uY2F0KCcnKSk7XFxuICAgIH1cXG5cXG4gICAgZGVsZXRlKGluZGV4KSB7XFxuICAgICAgICBjb25zdCBkZXNjcmlwdGlvbnMgPSB0aGlzLmdldCgnZGVzY3JpcHRpb25zJykuc2xpY2UoMCk7XFxuICAgICAgICBkZXNjcmlwdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcXG4gICAgICAgIHRoaXMuc2V0KCdkZXNjcmlwdGlvbnMnLCBkZXNjcmlwdGlvbnMpO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjM3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Zvcm0sIEZvcm1JdGVtfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9mb3JtJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7SW5wdXR9IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2lucHV0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7QnV0dG9ufSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG4mbHQ7Rm9ybSZndDtcXG4gICAgJmx0O0Zvcm1JdGVtIGxhYmVsPVxcXCLmj4/ov7BcXFwiJmd0O1xcbiAgICAgICAgJmx0O0Zvcm1JdGVtIHYtZm9yPXt7IHNlbGYuZ2V0KCdkZXNjcmlwdGlvbnMnKSB9fVxcbiAgICAgICAgICAgIG1vZGVsPXt7IGBkZXNjcmlwdGlvbnMuJHtrZXl9YCB9fVxcbiAgICAgICAgICAgIGhpZGVMYWJlbFxcbiAgICAgICAgICAgIHJ1bGVzPXt7IHtcXG4gICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsIFxcbiAgICAgICAgICAgICAgICAvLyDoh6rlrprkuYnlhajlsYDop4TliJlcXG4gICAgICAgICAgICAgICAgbGV0dGVyOiB0cnVlLFxcbiAgICAgICAgICAgICAgICAvLyDoh6rlrprkuYnlsYDpg6jop4TliJnvvIzmiYDmnInmj4/ov7Dlv4XpobvkuI3ph43lpI1cXG4gICAgICAgICAgICAgICAgdW5pcXVlKHZhbHVlKSB7XFxuICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSAwO1xcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5nZXQoJ2Rlc2NyaXB0aW9ucycpLmZpbmQoaXRlbSA9Jmd0OyB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0gPT09IHZhbHVlKSBjb3VudCsrO1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3VudCAmZ3Q7IDE7XFxuICAgICAgICAgICAgICAgICAgICB9KTtcXG5cXG4gICAgICAgICAgICAgICAgICAgIC8vIOebtOaOpei/lOWbnumUmeivr+aWh+ahiO+8jOaIluiAheS5n+WPr+S7peWNleeLrOWumuS5iW1lc3NhZ2Vz5Li6e3VuaXF1ZTogJ+S4jeiDveebuOWQjCd9XFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY291bnQgPT09IDEgfHwgJ+S4jeiDveebuOWQjCc7XFxuICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICB9IH19XFxuICAgICAgICAmZ3Q7XFxuICAgICAgICAgICAgJmx0O0lucHV0IHYtbW9kZWw9e3sgYGRlc2NyaXB0aW9ucy4ke2tleX1gIH19IC8mZ3Q7ICAgIFxcbiAgICAgICAgICAgICZsdDtiOmFwcGVuZCZndDtcXG4gICAgICAgICAgICAgICAgJmx0O0J1dHRvbiBldi1jbGljaz17eyBzZWxmLmRlbGV0ZS5iaW5kKHNlbGYsIGtleSkgfX0mZ3Q75Yig6ZmkJmx0Oy9CdXR0b24mZ3Q7XFxuICAgICAgICAgICAgJmx0Oy9iOmFwcGVuZCZndDtcXG4gICAgICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICAgICAmbHQ7QnV0dG9uIGV2LWNsaWNrPXt7IHNlbGYuYWRkIH19Jmd0O+a3u+WKoCZsdDsvQnV0dG9uJmd0O1xcbiAgICAmbHQ7L0Zvcm1JdGVtJmd0O1xcbiZsdDsvRm9ybSZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1mb3JtLWl0ZW08L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1mb3JtLWl0ZW08L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1ib3R0b208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0Zvcm19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2Zvcm0nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1jb21tZW50XFxcIj4vLyDmt7vliqDlhajlsYDop4TliJk8L3NwYW4+XFxuRm9ybS5hZGRNZXRob2QoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nbGV0dGVyJzwvc3Bhbj4sICh2YWx1ZSwgaXRlbSwgcGFyYW0pID0mZ3Q7IHtcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYnVpbHRfaW5cXFwiPmNvbnNvbGU8L3NwYW4+LmxvZyg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidhcmd1bWVudHMnPC9zcGFuPiwgdmFsdWUsIGl0ZW0sIHBhcmFtKTtcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1yZWdleHBcXFwiPi9eW2EtenxBLVpdKyQvPC9zcGFuPi50ZXN0KHZhbHVlKTtcXG59LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPiflj6rog73ovpPlhaXlrZfmr40nPC9zcGFuPik7XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGVzY3JpcHRpb25zPC9zcGFuPjogWzxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jyc8L3NwYW4+XVxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIGFkZCgpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LnNldCg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidkZXNjcmlwdGlvbnMnPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uZ2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2Rlc2NyaXB0aW9ucyc8L3NwYW4+KS5jb25jYXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nJzwvc3Bhbj4pKTtcXG4gICAgfVxcblxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWxldGU8L3NwYW4+KGluZGV4KSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jb25zdDwvc3Bhbj4gZGVzY3JpcHRpb25zID0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uZ2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2Rlc2NyaXB0aW9ucyc8L3NwYW4+KS5zbGljZSg8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjA8L3NwYW4+KTtcXG4gICAgICAgIGRlc2NyaXB0aW9ucy5zcGxpY2UoaW5kZXgsIDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTwvc3Bhbj4pO1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uc2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2Rlc2NyaXB0aW9ucyc8L3NwYW4+LCBkZXNjcmlwdGlvbnMpO1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL2Zvcm0vZGVtb3MvY3VzdG9tL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2Zvcm0vZGVtb3MvY3VzdG9tL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuiHquWumuS5iWxhYmVsXCIsXCJvcmRlclwiOjN9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5sYWJlbDwvY29kZT7mianlsZXngrnvvIzmiJHku6zlj6/ku6XlrprkuYnmm7TlpI3mnYLnmoQ8Y29kZT5sYWJlbDwvY29kZT7vvIzogIzkuI3ku4Xku4Xlj6rmmK/mlofmnKw8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0Zvcm0sIEZvcm1JdGVtfSBmcm9tICdrcGMvY29tcG9uZW50cy9mb3JtJztcXG5pbXBvcnQge0lucHV0fSBmcm9tICdrcGMvY29tcG9uZW50cy9pbnB1dCc7XFxuXFxuPEZvcm0+XFxuICAgIDxGb3JtSXRlbT5cXG4gICAgICAgIDxiOmxhYmVsPjxpIHN0eWxlPVxcXCJjb2xvcjogcmVkXFxcIj4qPC9pPiDlp5PlkI08L2I6bGFiZWw+XFxuICAgICAgICA8SW5wdXQgLz5cXG4gICAgPC9Gb3JtSXRlbT5cXG4gICAgPEZvcm1JdGVtPlxcbiAgICAgICAgPGI6bGFiZWw+PGkgY2xhc3M9XFxcImlvbi1wZXJzb25cXFwiLz4g5aeT5ZCNPC9iOmxhYmVsPlxcbiAgICAgICAgPElucHV0IC8+XFxuICAgIDwvRm9ybUl0ZW0+XFxuPC9Gb3JtPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjozOCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtGb3JtLCBGb3JtSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZm9ybSc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0lucHV0fSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9pbnB1dCc8L3NwYW4+O1xcblxcbiZsdDtGb3JtJmd0O1xcbiAgICAmbHQ7Rm9ybUl0ZW0mZ3Q7XFxuICAgICAgICAmbHQ7YjpsYWJlbCZndDsmbHQ7aSBzdHlsZT1cXFwiY29sb3I6IHJlZFxcXCImZ3Q7KiZsdDsvaSZndDsg5aeT5ZCNJmx0Oy9iOmxhYmVsJmd0O1xcbiAgICAgICAgJmx0O0lucHV0IC8mZ3Q7XFxuICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICZsdDtGb3JtSXRlbSZndDtcXG4gICAgICAgICZsdDtiOmxhYmVsJmd0OyZsdDtpIGNsYXNzPVxcXCJpb24tcGVyc29uXFxcIi8mZ3Q7IOWnk+WQjSZsdDsvYjpsYWJlbCZndDtcXG4gICAgICAgICZsdDtJbnB1dCAvJmd0O1xcbiAgICAmbHQ7L0Zvcm1JdGVtJmd0O1xcbiZsdDsvRm9ybSZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9mb3JtL2RlbW9zL2xhYmVsL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2Zvcm0vZGVtb3MvbGFiZWwvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Y+v5Y+Y6KeE5YiZXCIsXCJvcmRlclwiOjN9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7op4TliJk8Y29kZT5ydWxlczwvY29kZT7nmoTlgLzmmK/lk43lupTlvI/nmoTvvIzov5nmhI/lkbPnnYDmiJHku6zlj6/ku6Xlrp7ml7bmlLnlj5jpqozor4Hop4TliJnjgII8L3A+XFxuPHA+5L6L5aaC5pys5L6L5Lit77yM55So5oi35Y+v5Lul5LiN6L6T5YWl5aeT5ZCN77yM5L2G5aaC5p6c6L6T5YWl5LqG4oCc5aeT4oCd77yM5bCx5b+F6aG76L6T5YWl4oCc5ZCN4oCd77yM5Y+N5LmL5Lqm54S244CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtGb3JtLCBGb3JtSXRlbX0gZnJvbSAna3BjL2NvbXBvbmVudHMvZm9ybSc7XFxuaW1wb3J0IHtJbnB1dH0gZnJvbSAna3BjL2NvbXBvbmVudHMvaW5wdXQnO1xcbmltcG9ydCB7Um93LCBDb2x9IGZyb20gJ2twYy9jb21wb25lbnRzL2dyaWQnO1xcblxcbjxGb3JtPlxcbiAgICA8Rm9ybUl0ZW0gbGFiZWw9XFxcIuWnk+WQjVxcXCI+XFxuICAgICAgICA8Um93IGd1dHRlcj1cXFwiMTZcXFwiPlxcbiAgICAgICAgICAgIDxDb2wgc3Bhbj1cXFwiMTJcXFwiPlxcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0gaGlkZUxhYmVsIG1vZGVsPVxcXCJmaXJzdE5hbWVcXFwiIHJ1bGVzPXt7IHtcXG4gICAgICAgICAgICAgICAgICAgIC8vIOivpeinhOWImeWPluWAvO+8jOmaj+edgGxhc3ROYW1l55qE5a2Y5Zyo5LiO5ZCm6ICM5pS55Y+YXFxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogc2VsZi5nZXQoJ2xhc3ROYW1lJylcXG4gICAgICAgICAgICAgICAgfSB9fT4gXFxuICAgICAgICAgICAgICAgICAgICA8SW5wdXQgdi1tb2RlbD1cXFwiZmlyc3ROYW1lXFxcIiAvPlxcbiAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxcbiAgICAgICAgICAgIDwvQ29sPlxcbiAgICAgICAgICAgIDxDb2wgc3Bhbj1cXFwiMTJcXFwiPlxcbiAgICAgICAgICAgICAgICA8Rm9ybUl0ZW0gaGlkZUxhYmVsIG1vZGVsPVxcXCJsYXN0TmFtZVxcXCIgcnVsZXM9e3sge1xcbiAgICAgICAgICAgICAgICAgICAgLy8g6K+l6KeE5YiZ5Y+W5YC877yM6ZqP552AZmlyc3ROYW1l55qE5a2Y5Zyo5LiO5ZCm6ICM5pS55Y+YXFxuICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDogc2VsZi5nZXQoJ2ZpcnN0TmFtZScpXFxuICAgICAgICAgICAgICAgIH0gfX0+IFxcbiAgICAgICAgICAgICAgICAgICAgPElucHV0IHYtbW9kZWw9XFxcImxhc3ROYW1lXFxcIiAvPlxcbiAgICAgICAgICAgICAgICA8L0Zvcm1JdGVtPlxcbiAgICAgICAgICAgIDwvQ29sPlxcbiAgICAgICAgPC9Sb3c+XFxuICAgIDwvRm9ybUl0ZW0+XFxuPC9Gb3JtPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjozOSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtGb3JtLCBGb3JtSXRlbX0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvZm9ybSc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0lucHV0fSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9pbnB1dCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1JvdywgQ29sfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9ncmlkJzwvc3Bhbj47XFxuXFxuJmx0O0Zvcm0mZ3Q7XFxuICAgICZsdDtGb3JtSXRlbSBsYWJlbD1cXFwi5aeT5ZCNXFxcIiZndDtcXG4gICAgICAgICZsdDtSb3cgZ3V0dGVyPVxcXCIxNlxcXCImZ3Q7XFxuICAgICAgICAgICAgJmx0O0NvbCBzcGFuPVxcXCIxMlxcXCImZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDtGb3JtSXRlbSBoaWRlTGFiZWwgbW9kZWw9XFxcImZpcnN0TmFtZVxcXCIgcnVsZXM9e3sge1xcbiAgICAgICAgICAgICAgICAgICAgLy8g6K+l6KeE5YiZ5Y+W5YC877yM6ZqP552AbGFzdE5hbWXnmoTlrZjlnKjkuI7lkKbogIzmlLnlj5hcXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBzZWxmLmdldCgnbGFzdE5hbWUnKVxcbiAgICAgICAgICAgICAgICB9IH19Jmd0OyBcXG4gICAgICAgICAgICAgICAgICAgICZsdDtJbnB1dCB2LW1vZGVsPVxcXCJmaXJzdE5hbWVcXFwiIC8mZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICAgICAgICAgJmx0Oy9Db2wmZ3Q7XFxuICAgICAgICAgICAgJmx0O0NvbCBzcGFuPVxcXCIxMlxcXCImZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDtGb3JtSXRlbSBoaWRlTGFiZWwgbW9kZWw9XFxcImxhc3ROYW1lXFxcIiBydWxlcz17eyB7XFxuICAgICAgICAgICAgICAgICAgICAvLyDor6Xop4TliJnlj5blgLzvvIzpmo/nnYBmaXJzdE5hbWXnmoTlrZjlnKjkuI7lkKbogIzmlLnlj5hcXG4gICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBzZWxmLmdldCgnZmlyc3ROYW1lJylcXG4gICAgICAgICAgICAgICAgfSB9fSZndDsgXFxuICAgICAgICAgICAgICAgICAgICAmbHQ7SW5wdXQgdi1tb2RlbD1cXFwibGFzdE5hbWVcXFwiIC8mZ3Q7XFxuICAgICAgICAgICAgICAgICZsdDsvRm9ybUl0ZW0mZ3Q7XFxuICAgICAgICAgICAgJmx0Oy9Db2wmZ3Q7XFxuICAgICAgICAmbHQ7L1JvdyZndDtcXG4gICAgJmx0Oy9Gb3JtSXRlbSZndDtcXG4mbHQ7L0Zvcm0mZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZm9ybS9kZW1vcy92YXJpYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9mb3JtL2RlbW9zL3ZhcmlhYmxlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuacrOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5bCGPGNvZGU+Q29sPC9jb2RlPuW1jOWll+WcqDxjb2RlPlJvdzwvY29kZT7kuK3vvIznhLblkI7nlKg8Y29kZT5zcGFuPC9jb2RlPuWxnuaAp+WumuS5ieaJgOWNoOeahOWuveW6pu+8jOWuveW6puS4uueZvuWIhuavlO+8jOavj+S4gOS7veaYrzxjb2RlPjEvMjQ8L2NvZGU+PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtSb3csIENvbH0gZnJvbSAna3BjL2NvbXBvbmVudHMvZ3JpZCc7XFxuXFxuPGRpdj5cXG4gICAgPFJvdz4gXFxuICAgICAgICA8Q29sIHNwYW49XFxcIjEyXFxcIj5jb2wtMTI8L0NvbD5cXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiMTJcXFwiPmNvbC0xMjwvQ29sPlxcbiAgICA8L1Jvdz5cXG4gICAgPFJvdz5cXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiNFxcXCI+Y29sLTQ8L0NvbD5cXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiNlxcXCI+Y29sLTY8L0NvbD5cXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiOFxcXCI+Y29sLTg8L0NvbD5cXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiNlxcXCI+Y29sLTY8L0NvbD5cXG4gICAgPC9Sb3c+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1jb2xcXG4gICAgbGluZS1oZWlnaHQgNDBweFxcbiAgICB0ZXh0LWFsaWduIGNlbnRlclxcbiAgICBjb2xvciAjZmZmXFxuICAgICY6bnRoLW9mLXR5cGUoZXZlbilcXG4gICAgICAgIGJhY2tncm91bmQgIzBhNWVlZVxcbiAgICAmOm50aC1vZi10eXBlKG9kZClcXG4gICAgICAgIGJhY2tncm91bmQgbGlnaHRlbigjMGE1ZWVlLCAzMCUpXFxuLmstcm93XFxuICAgIG1hcmdpbi1ib3R0b20gMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjQxLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1JvdywgQ29sfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9ncmlkJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlJvdzwvc3Bhbj4mZ3Q7PC9zcGFuPiBcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3Bhbjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiMTJcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTEyPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCIxMlxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5jb2wtMTI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Sb3c8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Um93PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Db2w8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNwYW48L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjRcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTQ8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Db2w8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNwYW48L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjZcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTY8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Db2w8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNwYW48L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjhcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTg8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Db2w8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNwYW48L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjZcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTY8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Sb3c8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWNvbDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5saW5lLWhlaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj40MHB4PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPnRleHQtYWxpZ248L3NwYW4+IGNlbnRlclxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmNvbG9yPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPiNmZmY8L3NwYW4+XFxuICAgICZhbXA7Om50aC1vZi10eXBlKGV2ZW4pXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmJhY2tncm91bmQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+IzBhNWVlZTwvc3Bhbj5cXG4gICAgJmFtcDs6bnRoLW9mLXR5cGUob2RkKVxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5iYWNrZ3JvdW5kPC9zcGFuPiBsaWdodGVuKDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+IzBhNWVlZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MzAlPC9zcGFuPilcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+Lmstcm93PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1ib3R0b208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9ncmlkL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2dyaWQvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ze06LedXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7nu5k8Y29kZT5Sb3c8L2NvZGU+5re75YqgPGNvZGU+Z3V0dGVyPC9jb2RlPu+8jOWPr+S7peWumuS5iTxjb2RlPkNvbDwvY29kZT7kuYvpl7TnmoTpl7Tot53vvIzljZXkvY3kuLo8Y29kZT5weDwvY29kZT48L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge1JvdywgQ29sfSBmcm9tICdrcGMvY29tcG9uZW50cy9ncmlkJztcXG5cXG48ZGl2PlxcbiAgICA8Um93IGd1dHRlcj1cXFwiMTZcXFwiPiBcXG4gICAgICAgIDxDb2wgc3Bhbj1cXFwiMTJcXFwiPmNvbC0xMjwvQ29sPlxcbiAgICAgICAgPENvbCBzcGFuPVxcXCIxMlxcXCI+Y29sLTEyPC9Db2w+XFxuICAgIDwvUm93PlxcbiAgICA8Um93IGd1dHRlcj1cXFwiMTZcXFwiPlxcbiAgICAgICAgPENvbCBzcGFuPVxcXCI0XFxcIj5jb2wtNDwvQ29sPlxcbiAgICAgICAgPENvbCBzcGFuPVxcXCI2XFxcIj5jb2wtNjwvQ29sPlxcbiAgICAgICAgPENvbCBzcGFuPVxcXCI4XFxcIj5jb2wtODwvQ29sPlxcbiAgICAgICAgPENvbCBzcGFuPVxcXCI2XFxcIj5jb2wtNjwvQ29sPlxcbiAgICA8L1Jvdz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLWNvbFxcbiAgICBsaW5lLWhlaWdodCA0MHB4XFxuICAgIHRleHQtYWxpZ24gY2VudGVyXFxuICAgIGNvbG9yICNmZmZcXG4gICAgJjpudGgtb2YtdHlwZShldmVuKVxcbiAgICAgICAgZGl2XFxuICAgICAgICAgICAgYmFja2dyb3VuZCAjMGE1ZWVlXFxuICAgICY6bnRoLW9mLXR5cGUob2RkKVxcbiAgICAgICAgZGl2XFxuICAgICAgICAgICAgYmFja2dyb3VuZCBsaWdodGVuKCMwYTVlZWUsIDMwJSlcXG4uay1yb3dcXG4gICAgbWFyZ2luLWJvdHRvbSAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NDIsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7Um93LCBDb2x9IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2dyaWQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Um93PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ndXR0ZXI8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjE2XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPiBcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3Bhbjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiMTJcXFwiPC9zcGFuPiZndDs8L3NwYW4+Y29sLTEyPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCIxMlxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5jb2wtMTI8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Sb3c8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Um93PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ndXR0ZXI8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjE2XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCI0XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmNvbC00PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCI2XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmNvbC02PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCI4XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmNvbC04PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Q29sPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zcGFuPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCI2XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPmNvbC02PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkNvbDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+Um93PC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1jb2w8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bGluZS1oZWlnaHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+NDBweDwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj50ZXh0LWFsaWduPC9zcGFuPiBjZW50ZXJcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5jb2xvcjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4jZmZmPC9zcGFuPlxcbiAgICAmYW1wOzpudGgtb2YtdHlwZShldmVuKVxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItdGFnXFxcIj5kaXY8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5iYWNrZ3JvdW5kPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPiMwYTVlZWU8L3NwYW4+XFxuICAgICZhbXA7Om50aC1vZi10eXBlKG9kZClcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLXRhZ1xcXCI+ZGl2PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+YmFja2dyb3VuZDwvc3Bhbj4gbGlnaHRlbig8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPiMwYTVlZWU8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjMwJTwvc3Bhbj4pXFxuPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXJvdzwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tYm90dG9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvZ3JpZC9kZW1vcy9ndXR0ZXIvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvZ3JpZC9kZW1vcy9ndXR0ZXIvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5Yqo5a695bqmXCIsXCJvcmRlclwiOjV9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mjIflrpo8Y29kZT5hdXRvV2lkdGg8L2NvZGU+5Y+v5Lul6K6p6L6T5YWl5qGG5a695bqm6ZqP5paH5pys6ZW/5bqm5Y+Y5YyW6ICM5Y+Y5YyWPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IElucHV0IGZyb20gJ2twYy9jb21wb25lbnRzL2lucHV0JztcXG5cXG5cXG48SW5wdXQgcGxhY2Vob2xkZXI9XFxcImF1dG8gd2lkdGhcXFwiIGF1dG9XaWR0aCAvPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo0NCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IElucHV0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2lucHV0Jzwvc3Bhbj47XFxuXFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+SW5wdXQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBsYWNlaG9sZGVyPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJhdXRvIHdpZHRoXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YXV0b1dpZHRoPC9zcGFuPiAvJmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYXV0b3dpZHRoL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2lucHV0L2RlbW9zL2F1dG93aWR0aC9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rnoYDnlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuS9v+eUqDxjb2RlPnYtbW9kZWw8L2NvZGU+57uR5a6a6L6T5YWl55qE5YC877yMPGNvZGU+ZGlzYWJsZWQ8L2NvZGU+5p2l56aB55So57uE5Lu2PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IElucHV0IGZyb20gJ2twYy9jb21wb25lbnRzL2lucHV0JztcXG5cXG48ZGl2PlxcbiAgICA8SW5wdXQgdi1tb2RlbD1cXFwidmFsdWVcXFwiIHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiIC8+IHt7IHNlbGYuZ2V0KCd2YWx1ZScpIH19XFxuICAgIDxiciAvPlxcbiAgICA8SW5wdXQgZGlzYWJsZWQgcGxhY2Vob2xkZXI9XFxcImRpc2FibGVkXFxcIiAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstaW5wdXRcXG4gICAgbWFyZ2luIDVweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjQ1LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW5wdXQgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvaW5wdXQnPC9zcGFuPjtcXG5cXG4mbHQ7ZGl2Jmd0O1xcbiAgICAmbHQ7SW5wdXQgdi1tb2RlbD1cXFwidmFsdWVcXFwiIHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiIC8mZ3Q7IHt7IHNlbGYuZ2V0KCd2YWx1ZScpIH19XFxuICAgICZsdDticiAvJmd0O1xcbiAgICAmbHQ7SW5wdXQgZGlzYWJsZWQgcGxhY2Vob2xkZXI9XFxcImRpc2FibGVkXFxcIiAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWlucHV0PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj41cHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6L+95Yqg5YaF5a65XCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7kvb/nlKg8Y29kZT5hcHBlbmQ8L2NvZGU+77yMPGNvZGU+cHJlcGVuZDwvY29kZT7vvIw8Y29kZT5zdWZmaXg8L2NvZGU+77yMPGNvZGU+cHJlZml4PC9jb2RlPuaJqeWxleeCue+8jOWPr+S7peW+gOe7hOS7tui/veWKoOWGheWuuTwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnB1dCBmcm9tICdrcGMvY29tcG9uZW50cy9pbnB1dCc7XFxuaW1wb3J0IEJ1dHRvbiBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbjxkaXY+XFxuICAgIDxJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIj5cXG4gICAgICAgIDxiOnByZXBlbmQ+aHR0cDovLzwvYjpwcmVwZW5kPlxcbiAgICAgICAgPGI6YXBwZW5kPi5jb208L2I6YXBwZW5kPlxcbiAgICA8L0lucHV0PlxcbiAgICA8SW5wdXQgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCI+XFxuICAgICAgICA8YjphcHBlbmQ+PEJ1dHRvbiBpY29uIHR5cGU9XFxcIm5vbmVcXFwiPjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvQnV0dG9uPjwvYjphcHBlbmQ+XFxuICAgIDwvSW5wdXQ+XFxuICAgIDxJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIj5cXG4gICAgICAgIDxiOmFwcGVuZD48QnV0dG9uIGljb24gdHlwZT1cXFwicHJpbWFyeVxcXCI+PGkgY2xhc3M9XFxcImlvbi1pb3Mtc2VhcmNoXFxcIj48L2k+PC9CdXR0b24+PC9iOmFwcGVuZD5cXG4gICAgPC9JbnB1dD5cXG4gICAgPElucHV0IHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiPlxcbiAgICAgICAgPGI6YXBwZW5kPjxCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCI+5pCc57SiPC9CdXR0b24+PC9iOmFwcGVuZD5cXG4gICAgPC9JbnB1dD5cXG4gICAgPElucHV0IHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiPlxcbiAgICAgICAgPGI6cHJlZml4PjxpIGNsYXNzPVxcXCJpb24tZWFydGhcXFwiPjwvaT48L2I6cHJlZml4PlxcbiAgICAgICAgPGI6c3VmZml4PjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvYjpzdWZmaXg+XFxuICAgIDwvSW5wdXQ+XFxuICAgIDxJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIj5cXG4gICAgICAgIDxiOnByZXBlbmQ+aHR0cDovLzwvYjpwcmVwZW5kPlxcbiAgICAgICAgPGI6YXBwZW5kPi5jb208L2I6YXBwZW5kPlxcbiAgICAgICAgPGI6cHJlZml4PjxpIGNsYXNzPVxcXCJpb24tZWFydGhcXFwiPjwvaT48L2I6cHJlZml4PlxcbiAgICAgICAgPGI6c3VmZml4PjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvYjpzdWZmaXg+XFxuICAgIDwvSW5wdXQ+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1pbnB1dFxcbiAgICBtYXJnaW4gNXB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NDYsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnB1dCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9pbnB1dCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiZndDtcXG4gICAgICAgICZsdDtiOnByZXBlbmQmZ3Q7aHR0cDovLyZsdDsvYjpwcmVwZW5kJmd0O1xcbiAgICAgICAgJmx0O2I6YXBwZW5kJmd0Oy5jb20mbHQ7L2I6YXBwZW5kJmd0O1xcbiAgICAmbHQ7L0lucHV0Jmd0O1xcbiAgICAmbHQ7SW5wdXQgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCImZ3Q7XFxuICAgICAgICAmbHQ7YjphcHBlbmQmZ3Q7Jmx0O0J1dHRvbiBpY29uIHR5cGU9XFxcIm5vbmVcXFwiJmd0OyZsdDtpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCImZ3Q7Jmx0Oy9pJmd0OyZsdDsvQnV0dG9uJmd0OyZsdDsvYjphcHBlbmQmZ3Q7XFxuICAgICZsdDsvSW5wdXQmZ3Q7XFxuICAgICZsdDtJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiZndDtcXG4gICAgICAgICZsdDtiOmFwcGVuZCZndDsmbHQ7QnV0dG9uIGljb24gdHlwZT1cXFwicHJpbWFyeVxcXCImZ3Q7Jmx0O2kgY2xhc3M9XFxcImlvbi1pb3Mtc2VhcmNoXFxcIiZndDsmbHQ7L2kmZ3Q7Jmx0Oy9CdXR0b24mZ3Q7Jmx0Oy9iOmFwcGVuZCZndDtcXG4gICAgJmx0Oy9JbnB1dCZndDtcXG4gICAgJmx0O0lucHV0IHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2I6YXBwZW5kJmd0OyZsdDtCdXR0b24gdHlwZT1cXFwicHJpbWFyeVxcXCImZ3Q75pCc57SiJmx0Oy9CdXR0b24mZ3Q7Jmx0Oy9iOmFwcGVuZCZndDtcXG4gICAgJmx0Oy9JbnB1dCZndDtcXG4gICAgJmx0O0lucHV0IHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2I6cHJlZml4Jmd0OyZsdDtpIGNsYXNzPVxcXCJpb24tZWFydGhcXFwiJmd0OyZsdDsvaSZndDsmbHQ7L2I6cHJlZml4Jmd0O1xcbiAgICAgICAgJmx0O2I6c3VmZml4Jmd0OyZsdDtpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCImZ3Q7Jmx0Oy9pJmd0OyZsdDsvYjpzdWZmaXgmZ3Q7XFxuICAgICZsdDsvSW5wdXQmZ3Q7XFxuICAgICZsdDtJbnB1dCBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiZndDtcXG4gICAgICAgICZsdDtiOnByZXBlbmQmZ3Q7aHR0cDovLyZsdDsvYjpwcmVwZW5kJmd0O1xcbiAgICAgICAgJmx0O2I6YXBwZW5kJmd0Oy5jb20mbHQ7L2I6YXBwZW5kJmd0O1xcbiAgICAgICAgJmx0O2I6cHJlZml4Jmd0OyZsdDtpIGNsYXNzPVxcXCJpb24tZWFydGhcXFwiJmd0OyZsdDsvaSZndDsmbHQ7L2I6cHJlZml4Jmd0O1xcbiAgICAgICAgJmx0O2I6c3VmZml4Jmd0OyZsdDtpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCImZ3Q7Jmx0Oy9pJmd0OyZsdDsvYjpzdWZmaXgmZ3Q7XFxuICAgICZsdDsvSW5wdXQmZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstaW5wdXQ8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjVweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy9ibG9ja3MvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvYmxvY2tzL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWPr+a4hemZpFwiLFwib3JkZXJcIjo0fSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5oyH5a6aPGNvZGU+Y2xlYXJhYmxlPC9jb2RlPuWPr+S7peWxleekuuW/q+mAn+a4hemZpOaMiemSrjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnB1dCBmcm9tICdrcGMvY29tcG9uZW50cy9pbnB1dCc7XFxuXFxuPGRpdj5cXG4gICAgPElucHV0IGNsZWFyYWJsZSBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiAvPlxcbiAgICA8YnIgLz5cXG4gICAgPElucHV0IGNsZWFyYWJsZSBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIj5cXG4gICAgICAgIDxiOnN1ZmZpeD48aSBjbGFzcz1cXFwiaW9uLWlvcy1zZWFyY2hcXFwiPjwvaT48L2I6c3VmZml4PlxcbiAgICA8L0lucHV0PlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstaW5wdXRcXG4gICAgbWFyZ2luIDVweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjQ3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW5wdXQgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvaW5wdXQnPC9zcGFuPjtcXG5cXG4mbHQ7ZGl2Jmd0O1xcbiAgICAmbHQ7SW5wdXQgY2xlYXJhYmxlIHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiIC8mZ3Q7XFxuICAgICZsdDticiAvJmd0O1xcbiAgICAmbHQ7SW5wdXQgY2xlYXJhYmxlIHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2I6c3VmZml4Jmd0OyZsdDtpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCImZ3Q7Jmx0Oy9pJmd0OyZsdDsvYjpzdWZmaXgmZ3Q7XFxuICAgICZsdDsvSW5wdXQmZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstaW5wdXQ8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjVweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy9jbGVhcmFibGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvaW5wdXQvZGVtb3MvY2xlYXJhYmxlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWwuuWvuFwiLFwib3JkZXJcIjoyfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5re75YqgPGNvZGU+c2l6ZTwvY29kZT7lsZ7mgKfvvIzlrprkuYnkuInnp43lsLrlr7jvvJo8Y29kZT5kZWZhdWx0PC9jb2RlPu+8jDxjb2RlPnNtYWxsPC9jb2RlPu+8jDxjb2RlPm1pbmk8L2NvZGU+PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IElucHV0IGZyb20gJ2twYy9jb21wb25lbnRzL2lucHV0JztcXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPElucHV0IHZhbHVlPVxcXCJkZWZhdWx0XFxcIiAvPlxcbiAgICA8YnIgLz5cXG4gICAgPElucHV0IHZhbHVlPVxcXCJzbWFsbFxcXCIgc2l6ZT1cXFwic21hbGxcXFwiIC8+XFxuICAgIDxJbnB1dCBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCI+XFxuICAgICAgICA8YjpwcmVwZW5kPmh0dHA6Ly88L2I6cHJlcGVuZD5cXG4gICAgICAgIDxiOmFwcGVuZD4uY29tPC9iOmFwcGVuZD5cXG4gICAgPC9JbnB1dD5cXG4gICAgPElucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIj5cXG4gICAgICAgIDxiOmFwcGVuZD48QnV0dG9uIHNpemU9XFxcInNtYWxsXFxcIiBpY29uIHR5cGU9XFxcInByaW1hcnlcXFwiPjxpIGNsYXNzPVxcXCJpb24taW9zLXNlYXJjaFxcXCI+PC9pPjwvQnV0dG9uPjwvYjphcHBlbmQ+XFxuICAgIDwvSW5wdXQ+XFxuICAgIDxJbnB1dCBzaXplPVxcXCJzbWFsbFxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCI+XFxuICAgICAgICA8YjphcHBlbmQ+PEJ1dHRvbiB0eXBlPVxcXCJwcmltYXJ5XFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+U2VhcmNoPC9CdXR0b24+PC9iOmFwcGVuZD5cXG4gICAgPC9JbnB1dD5cXG5cXG4gICAgPElucHV0IHZhbHVlPVxcXCJtaW5pXFxcIiBzaXplPVxcXCJtaW5pXFxcIiAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstaW5wdXRcXG4gICAgbWFyZ2luIDVweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjQ4LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW5wdXQgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvaW5wdXQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEJ1dHRvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG5cXG4mbHQ7ZGl2Jmd0O1xcbiAgICAmbHQ7SW5wdXQgdmFsdWU9XFxcImRlZmF1bHRcXFwiIC8mZ3Q7XFxuICAgICZsdDticiAvJmd0O1xcbiAgICAmbHQ7SW5wdXQgdmFsdWU9XFxcInNtYWxsXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgLyZndDtcXG4gICAgJmx0O0lucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiZndDtcXG4gICAgICAgICZsdDtiOnByZXBlbmQmZ3Q7aHR0cDovLyZsdDsvYjpwcmVwZW5kJmd0O1xcbiAgICAgICAgJmx0O2I6YXBwZW5kJmd0Oy5jb20mbHQ7L2I6YXBwZW5kJmd0O1xcbiAgICAmbHQ7L0lucHV0Jmd0O1xcbiAgICAmbHQ7SW5wdXQgc2l6ZT1cXFwic21hbGxcXFwiIHBsYWNlaG9sZGVyPVxcXCJwbGVhc2UgZW50ZXJcXFwiJmd0O1xcbiAgICAgICAgJmx0O2I6YXBwZW5kJmd0OyZsdDtCdXR0b24gc2l6ZT1cXFwic21hbGxcXFwiIGljb24gdHlwZT1cXFwicHJpbWFyeVxcXCImZ3Q7Jmx0O2kgY2xhc3M9XFxcImlvbi1pb3Mtc2VhcmNoXFxcIiZndDsmbHQ7L2kmZ3Q7Jmx0Oy9CdXR0b24mZ3Q7Jmx0Oy9iOmFwcGVuZCZndDtcXG4gICAgJmx0Oy9JbnB1dCZndDtcXG4gICAgJmx0O0lucHV0IHNpemU9XFxcInNtYWxsXFxcIiBwbGFjZWhvbGRlcj1cXFwicGxlYXNlIGVudGVyXFxcIiZndDtcXG4gICAgICAgICZsdDtiOmFwcGVuZCZndDsmbHQ7QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIHNpemU9XFxcInNtYWxsXFxcIiZndDtTZWFyY2gmbHQ7L0J1dHRvbiZndDsmbHQ7L2I6YXBwZW5kJmd0O1xcbiAgICAmbHQ7L0lucHV0Jmd0O1xcblxcbiAgICAmbHQ7SW5wdXQgdmFsdWU9XFxcIm1pbmlcXFwiIHNpemU9XFxcIm1pbmlcXFwiIC8mZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstaW5wdXQ8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjVweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy9zaXplL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL2lucHV0L2RlbW9zL3NpemUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwidGV4dGFyZWHmlofmnKzmoYZcIixcIm9yZGVyXCI6M30sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuaMh+Wumjxjb2RlPnR5cGU8L2NvZGU+5Li6PGNvZGU+dGV4dGFyZWE8L2NvZGU+5riy5p+T5oiQ5paH5pys5qGG77yM5ZCM5pe25Y+v5Lul55SoPGNvZGU+cm93czwvY29kZT7mnaXmjIflrprlsZXnpLrnmoTooYzmlbA8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW5wdXQgZnJvbSAna3BjL2NvbXBvbmVudHMvaW5wdXQnO1xcblxcbjxkaXY+XFxuICAgIDxJbnB1dCB0eXBlPVxcXCJ0ZXh0YXJlYVxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCIgLz5cXG4gICAgPGJyIC8+XFxuICAgIDxJbnB1dCB0eXBlPVxcXCJ0ZXh0YXJlYVxcXCIgcm93cz1cXFwiNVxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCIgLz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NDksXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnB1dCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9pbnB1dCc8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtJbnB1dCB0eXBlPVxcXCJ0ZXh0YXJlYVxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCIgLyZndDtcXG4gICAgJmx0O2JyIC8mZ3Q7XFxuICAgICZsdDtJbnB1dCB0eXBlPVxcXCJ0ZXh0YXJlYVxcXCIgcm93cz1cXFwiNVxcXCIgcGxhY2Vob2xkZXI9XFxcInBsZWFzZSBlbnRlclxcXCIgLyZndDtcXG4mbHQ7L2RpdiZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy90ZXh0YXJlYS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9pbnB1dC9kZW1vcy90ZXh0YXJlYS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rnoYDnlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuS9v+eUqDxjb2RlPk1lc3NhZ2U8L2NvZGU+5o+Q5L6b55qE6Z2Z5oCB5pa55rOV77yM5bGV56S65o+Q56S644CC5YyF5ous77yaPGNvZGU+aW5mbzwvY29kZT4sIDxjb2RlPmVycm9yPC9jb2RlPiwgPGNvZGU+d2FybmluZzwvY29kZT4sIDxjb2RlPnN1Y2Nlc3M8L2NvZGU+44CC5o+Q56S66buY6K6k5Lya5ZyoNXPlkI7oh6rliqjlhbPpl608L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge0J1dHRvbkdyb3VwLCBCdXR0b259IGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPEJ1dHRvbkdyb3VwPlxcbiAgICA8QnV0dG9uIHYtZm9yPXt7IFsnaW5mbycsICdlcnJvcicsICd3YXJuaW5nJywgJ3N1Y2Nlc3MnXSB9fVxcbiAgICAgICAgZXYtY2xpY2s9e3sgc2VsZi5zaG93TWVzc2FnZS5iaW5kKHNlbGYsIHZhbHVlKSB9fVxcbiAgICA+e3sgdmFsdWUgfX08L0J1dHRvbj5cXG48L0J1dHRvbkdyb3VwPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmltcG9ydCBNZXNzYWdlIGZyb20gJ2twYy9jb21wb25lbnRzL21lc3NhZ2UnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBzaG93TWVzc2FnZSh0eXBlKSB7XFxuICAgICAgICBNZXNzYWdlW3R5cGVdKHR5cGUpO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjUxLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0J1dHRvbkdyb3VwLCBCdXR0b259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1mb3I8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IFsnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+aW5mbzwvc3Bhbj4nLCAnPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXJyb3I8L3NwYW4+JywgJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPndhcm5pbmc8L3NwYW4+JywgJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnN1Y2Nlc3M8L3NwYW4+J10gfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWNsaWNrPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLnNob3dNZXNzYWdlLmJpbmQ8L3NwYW4+KDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGY8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj4pIH19XFxuICAgICZndDs8L3NwYW4+e3sgdmFsdWUgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBNZXNzYWdlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL21lc3NhZ2UnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgc2hvd01lc3NhZ2UodHlwZSkge1xcbiAgICAgICAgTWVzc2FnZVt0eXBlXSh0eXBlKTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9tZXNzYWdlL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL21lc3NhZ2UvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5a6a5LmJ5bGV56S65YaF5a65XCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7lvZPpnIDopoHoh6rlrprkuYnmj5DnpLrnmoTlhoXlrrnml7bvvIzmiJHku6zlj6/ku6XlsIY8Y29kZT5NZXNzYWdlPC9jb2RlPuW9k+WBmue7hOS7tuWumuS5ieWcqOaooeadv+S4re+8jOiAjOmdnuiwg+eUqOWug+eahOmdmeaAgeaWueazleOAguatpOaXtuaIkeS7rOmcgOimgee7mTxjb2RlPk1lc3NhZ2U8L2NvZGU+5oyH5a6a5ZSv5LiA55qEPGNvZGU+a2V5PC9jb2RlPuOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBNZXNzYWdlIGZyb20gJ2twYy9jb21wb25lbnRzL21lc3NhZ2UnO1xcbmltcG9ydCB7QnV0dG9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcbmltcG9ydCB7UHJvZ3Jlc3N9IGZyb20gJ2twYy9jb21wb25lbnRzL3Byb2dyZXNzJztcXG5cXG48ZGl2PlxcbiAgICA8QnV0dG9uIGV2LWNsaWNrPXt7ICgpID0+IHNlbGYuc2V0KCdzaG93JywgdHJ1ZSkgfX0+Y3VzdG9tIG1lc3NhZ2U8L0J1dHRvbj5cXG4gICAgPE1lc3NhZ2Ugdi1tb2RlbD1cXFwic2hvd1xcXCIga2V5PVxcXCJtZXNzYWdlXFxcIiBcXG4gICAgICAgIGR1cmF0aW9uPXt7IDAgfX0gXFxuICAgICAgICB0eXBlPXt7IHNlbGYuZ2V0KCdwZXJjZW50JykgPj0gMTAwID8gJ3N1Y2Nlc3MnIDogJ2luZm8nIH19XFxuICAgID5cXG4gICAgICAgIDxQcm9ncmVzcyBzdHlsZT1cXFwid2lkdGg6IDIwMHB4XFxcIiBcXG4gICAgICAgICAgICBwZXJjZW50PXt7IHNlbGYuZ2V0KCdwZXJjZW50JykgfX1cXG4gICAgICAgICAgICBldi1jbGljaz17eyBzZWxmLmFkZCB9fVxcbiAgICAgICAgLz5cXG4gICAgPC9NZXNzYWdlPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgcGVyY2VudDogMTAsIFxcbiAgICAgICAgICAgIHNob3c6IGZhbHNlXFxuICAgICAgICB9O1xcbiAgICB9XFxuXFxuICAgIGFkZCgpIHtcXG4gICAgICAgIHRoaXMuc2V0KCdwZXJjZW50JywgdGhpcy5nZXQoJ3BlcmNlbnQnKSArIDUpO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjUyLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gTWVzc2FnZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9tZXNzYWdlJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7QnV0dG9ufSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9idXR0b24nPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtQcm9ncmVzc30gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcHJvZ3Jlc3MnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi1jbGljazwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gKCkgPSZndDs8L3NwYW4+IHNlbGYuc2V0KCdzaG93JywgdHJ1ZSkgfX0mZ3Q7Y3VzdG9tIG1lc3NhZ2U8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk1lc3NhZ2U8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNob3dcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5rZXk8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1lc3NhZ2VcXFwiPC9zcGFuPiBcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmR1cmF0aW9uPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj4wPC9zcGFuPiB9fSBcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuZ2V0PC9zcGFuPignPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cGVyY2VudDwvc3Bhbj4nKSAmZ3Q7PC9zcGFuPj0gMTAwID8gJ3N1Y2Nlc3MnIDogJ2luZm8nIH19XFxuICAgICZndDtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlByb2dyZXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zdHlsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwid2lkdGg6IDIwMHB4XFxcIjwvc3Bhbj4gXFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cGVyY2VudDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wZXJjZW50PC9zcGFuPicpIH19XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuYWRkPC9zcGFuPiB9fVxcbiAgICAgICAgLyZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5NZXNzYWdlPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBlcmNlbnQ8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjEwPC9zcGFuPiwgXFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2hvdzwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLWxpdGVyYWxcXFwiPmZhbHNlPC9zcGFuPlxcbiAgICAgICAgfTtcXG4gICAgfVxcblxcbiAgICBhZGQoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5zZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4ncGVyY2VudCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5nZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4ncGVyY2VudCc8L3NwYW4+KSArIDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+NTwvc3Bhbj4pO1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL21lc3NhZ2UvZGVtb3MvY3VzdG9tL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL21lc3NhZ2UvZGVtb3MvY3VzdG9tL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuiHquWumuS5ieaXtumVv1wiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5o+Q56S66buY6K6k5Lya5ZyoNXPlkI7lhbPpl63vvIzmiJHku6zlj6/ku6XmjIflrpo8Y29kZT5kdXJhdGlvbjwvY29kZT7mnaXoh6rlrprkuYnml7bplb/vvIjljZXkvY1tc++8ieOAguW9k+aMh+WumuS4ujxjb2RlPjA8L2NvZGU+5pe277yM5o+Q56S65LiN5Lya6Ieq5Yqo5YWz6Zet44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtCdXR0b25Hcm91cCwgQnV0dG9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9idXR0b24nO1xcblxcbjxCdXR0b25Hcm91cD5cXG4gICAgPEJ1dHRvbiBldi1jbGljaz17eyBzZWxmLnNob3dNZXNzYWdlMSB9fT5jbG9zZSBhZnRlciAxMHM8L0J1dHRvbj5cXG4gICAgPEJ1dHRvbiBldi1jbGljaz17eyBzZWxmLnNob3dNZXNzYWdlMiB9fT5zdGljayBtZXNzYWdlPC9CdXR0b24+XFxuPC9CdXR0b25Hcm91cD5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5pbXBvcnQgTWVzc2FnZSBmcm9tICdrcGMvY29tcG9uZW50cy9tZXNzYWdlJztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgc2hvd01lc3NhZ2UxKCkge1xcbiAgICAgICAgTWVzc2FnZS5pbmZvKCdjbG9zZSBhZnRlciAxMHMnLCAxMDAwMCk7XFxuICAgIH1cXG5cXG4gICAgc2hvd01lc3NhZ2UyKCkge1xcbiAgICAgICAgTWVzc2FnZS5pbmZvKCdzdGljayBtZXNzYWdlJywgMCk7XFxuICAgIH1cXG59XCJ9XSxcImluZGV4XCI6NTMsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7QnV0dG9uR3JvdXAsIEJ1dHRvbn0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvYnV0dG9uJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi1jbGljazwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5zaG93TWVzc2FnZTE8L3NwYW4+IH19Jmd0Ozwvc3Bhbj5jbG9zZSBhZnRlciAxMHM8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuc2hvd01lc3NhZ2UyPC9zcGFuPiB9fSZndDs8L3NwYW4+c3RpY2sgbWVzc2FnZTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IE1lc3NhZ2UgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvbWVzc2FnZSc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBzaG93TWVzc2FnZTEoKSB7XFxuICAgICAgICBNZXNzYWdlLmluZm8oPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nY2xvc2UgYWZ0ZXIgMTBzJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTAwMDA8L3NwYW4+KTtcXG4gICAgfVxcblxcbiAgICBzaG93TWVzc2FnZTIoKSB7XFxuICAgICAgICBNZXNzYWdlLmluZm8oPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nc3RpY2sgbWVzc2FnZSc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjA8L3NwYW4+KTtcXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9tZXNzYWdlL2RlbW9zL2R1cmF0aW9uL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL21lc3NhZ2UvZGVtb3MvZHVyYXRpb24vaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Z+65pys55So5rOVXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5QYWdpbmF0aW9uPC9jb2RlPueahOWfuuacrOeUqOazle+8jOmAmui/hzxjb2RlPnRvdGFsPC9jb2RlPuaMh+WumuaVsOaNruaAu+adoeaVsO+8jDxjb2RlPmxpbWl0PC9jb2RlPuaMh+Wumuavj+mhteaVsOaNruadoeaVsO+8jDxjb2RlPmxpbWl0czwvY29kZT7mlbDnu4TlrprkuYnlj6/kvpvpgInmi6nnmoTmnaHmlbA8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgUGFnaW5hdGlvbiBmcm9tICdrcGMvY29tcG9uZW50cy9wYWdpbmF0aW9uJztcXG5cXG48ZGl2PlxcbiAgICA8UGFnaW5hdGlvbiB0b3RhbD17eyAyMDAgfX0gLz5cXG4gICAgPFBhZ2luYXRpb24gdG90YWw9e3sgMjAwIH19IGxpbWl0PXt7IDIwIH19IC8+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBsaW1pdD17eyAyMCB9fSBsaW1pdHM9e3sgWzEwLCAyMCwgNTAsIDEwMF0gfX0vPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstcGFnaW5hdGlvblxcbiAgICBtYXJnaW4tYm90dG9tIDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo1NSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFBhZ2luYXRpb24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcGFnaW5hdGlvbic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSAvJmd0O1xcbiAgICAmbHQ7UGFnaW5hdGlvbiB0b3RhbD17eyAyMDAgfX0gbGltaXQ9e3sgMjAgfX0gLyZndDtcXG4gICAgJmx0O1BhZ2luYXRpb24gdG90YWw9e3sgMjAwIH19IGxpbWl0PXt7IDIwIH19IGxpbWl0cz17eyBbMTAsIDIwLCA1MCwgMTAwXSB9fS8mZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstcGFnaW5hdGlvbjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tYm90dG9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuaUueWPmOe/u+mhteaMiemSruaVsOmHj1wiLFwib3JkZXJcIjoyfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+57uE5Lu26buY6K6k5Lya5bGV56S6N+S4que/u+mhteaMiemSru+8iOWMheaLrOecgeeVpeWPty4uLinvvIzpgJrov4c8Y29kZT5jb3VudHM8L2NvZGU+5bGe5oCn5oiR5Lus5Y+v5Lul5oyH5a6a5oyJ6ZKu5Liq5pWw44CCPC9wPlxcbjxibG9ja3F1b3RlPlxcbjxwPuacgOWlveS4jeimgeWwj+S6jjfkuKrvvIzlkKbliJnlvbHlk43kvZPpqozjgILkvb/nlKjlpYfmlbDlj6/ku6Xkvb/pobXnoIHlr7nnp7DliIbluIM8L3A+XFxuPC9ibG9ja3F1b3RlPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAna3BjL2NvbXBvbmVudHMvcGFnaW5hdGlvbic7XFxuXFxuPGRpdj5cXG4gICAgPFBhZ2luYXRpb24gdG90YWw9e3sgMjAwIH19IGNvdW50cz1cXFwiMTBcXFwiIC8+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBjb3VudHM9XFxcIjlcXFwiIC8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1wYWdpbmF0aW9uXFxuICAgIG1hcmdpbi1ib3R0b20gMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjU2LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gUGFnaW5hdGlvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9wYWdpbmF0aW9uJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O1BhZ2luYXRpb24gdG90YWw9e3sgMjAwIH19IGNvdW50cz1cXFwiMTBcXFwiIC8mZ3Q7XFxuICAgICZsdDtQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBjb3VudHM9XFxcIjlcXFwiIC8mZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstcGFnaW5hdGlvbjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tYm90dG9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9kZW1vcy9jb3VudHMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9kZW1vcy9jb3VudHMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5b2T5YmN6aG156CBXCIsXCJvcmRlclwiOjR9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5jdXJyZW50PC9jb2RlPuWPr+S7peaMh+WumuW9k+WJjemhteegge+8jOW9k+mhteeggeaUueWPmOaXtu+8jOS8muinpuWPkem7mOiupOS6i+S7tjxjb2RlPiRjaGFuZ2U6Y3VycmVudDwvY29kZT7lkow8Y29kZT4kY2hhbmdlZDpjdXJyZW50PC9jb2RlPu+8jOaIkeS7rOWPr+S7peaMh+WumuebuOW6lOeahOWbnuiwg+WHveaVsOOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ2twYy9jb21wb25lbnRzL3BhZ2luYXRpb24nO1xcblxcbjxkaXY+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBcXG4gICAgICAgIGN1cnJlbnQ9e3sgc2VsZi5nZXQoJ2N1cnJlbnQnKSB9fVxcbiAgICAgICAgZXYtJGNoYW5nZTpjdXJyZW50PXt7IHNlbGYuX2ZldGNoIH19IFxcbiAgICAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmltcG9ydCBNZXNzYWdlIGZyb20gJ2twYy9jb21wb25lbnRzL21lc3NhZ2UnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7Y3VycmVudDogMX1cXG4gICAgfTtcXG5cXG4gICAgX2ZldGNoKGMsIGN1cnJlbnQpIHtcXG4gICAgICAgIC8vIGZldGNoIGRhdGFcXG4gICAgICAgIHRoaXMuc2V0KCdjdXJyZW50JywgY3VycmVudCk7XFxuICAgICAgICBNZXNzYWdlLmluZm8oYGN1cnJlbnQgcGFnZTogJHtjdXJyZW50fWApO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjU3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gUGFnaW5hdGlvbiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9wYWdpbmF0aW9uJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlBhZ2luYXRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRvdGFsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj4yMDA8L3NwYW4+IH19IFxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y3VycmVudDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jdXJyZW50PC9zcGFuPicpIH19XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5ldi08L3NwYW4+JDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNoYW5nZTpjdXJyZW50PC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLl9mZXRjaDwvc3Bhbj4gfX0gXFxuICAgIC8mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IE1lc3NhZ2UgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvbWVzc2FnZSc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4gezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmN1cnJlbnQ8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjE8L3NwYW4+fVxcbiAgICB9O1xcblxcbiAgICBfZmV0Y2goYywgY3VycmVudCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtY29tbWVudFxcXCI+Ly8gZmV0Y2ggZGF0YTwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LnNldCg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidjdXJyZW50Jzwvc3Bhbj4sIGN1cnJlbnQpO1xcbiAgICAgICAgTWVzc2FnZS5pbmZvKDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+YGN1cnJlbnQgcGFnZTogPHNwYW4gY2xhc3M9XFxcImhsanMtc3Vic3RcXFwiPiR7Y3VycmVudH08L3NwYW4+YDwvc3Bhbj4pO1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3BhZ2luYXRpb24vZGVtb3MvY3VycmVudC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL2N1cnJlbnQvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5bGV56S65b+r6YCf6Lez6L2s5qGGXCIsXCJvcmRlclwiOjN9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7lsIY8Y29kZT5zaG93R290bzwvY29kZT7orr7kuLo8Y29kZT50cnVlPC9jb2RlPuWPr+S7peWxleekuuW/q+mAn+i3s+i9rOi+k+WFpeahhjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ2twYy9jb21wb25lbnRzL3BhZ2luYXRpb24nO1xcblxcbjxkaXY+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBzaG93R290byAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo1OCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFBhZ2luYXRpb24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcGFnaW5hdGlvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5QYWdpbmF0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50b3RhbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+MjAwPC9zcGFuPiB9fSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaG93R290bzwvc3Bhbj4gLyZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL2dvdG8vaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvcGFnaW5hdGlvbi9kZW1vcy9nb3RvL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuaMh+WumuWwuuWvuFwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+6YCa6L+HPGNvZGU+c2l6ZTwvY29kZT7lj6/ku6XmjIflrprnu4Tku7bnmoTlsLrlr7jvvJo8Y29kZT5kZWZhdWx0PC9jb2RlPiwgPGNvZGU+c21hbGw8L2NvZGU+LCA8Y29kZT5taW5pPC9jb2RlPjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ2twYy9jb21wb25lbnRzL3BhZ2luYXRpb24nO1xcblxcbjxkaXY+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSAvPlxcbiAgICA8UGFnaW5hdGlvbiB0b3RhbD17eyAyMDAgfX0gc2l6ZT1cXFwic21hbGxcXFwiIC8+XFxuICAgIDxQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBzaXplPVxcXCJtaW5pXFxcIiAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstcGFnaW5hdGlvblxcbiAgICBtYXJnaW4tYm90dG9tIDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo1OSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFBhZ2luYXRpb24gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcGFnaW5hdGlvbic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSAvJmd0O1xcbiAgICAmbHQ7UGFnaW5hdGlvbiB0b3RhbD17eyAyMDAgfX0gc2l6ZT1cXFwic21hbGxcXFwiIC8mZ3Q7XFxuICAgICZsdDtQYWdpbmF0aW9uIHRvdGFsPXt7IDIwMCB9fSBzaXplPVxcXCJtaW5pXFxcIiAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXBhZ2luYXRpb248L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLWJvdHRvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4yMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3BhZ2luYXRpb24vZGVtb3Mvc2l6ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9wYWdpbmF0aW9uL2RlbW9zL3NpemUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Z+656GA55So5rOVXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5wZXJjZW50PC9jb2RlPuaMh+WumuW9k+WJjei/m+W6puadoeeZvuWIhuavlDwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBQcm9ncmVzcyBmcm9tICdrcGMvY29tcG9uZW50cy9wcm9ncmVzcyc7XFxuXFxuPFByb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiAvPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo2MSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFByb2dyZXNzIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3Byb2dyZXNzJzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UHJvZ3Jlc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnBlcmNlbnQ8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjUwXFxcIjwvc3Bhbj4gLyZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuiHquWumuS5ieeZvuWIhuavlOWGheWuuVwiLFwib3JkZXJcIjo0fSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+57uE5Lu26buY6K6k5Lya5bGV56S65b2T5YmN55m+5YiG5q+U77yM5oiR5Lus5Y+v5Lul57uZ57uE5Lu25re75Yqg5a2Q5YWD57Sg5bGV56S65Lu75oSP5YaF5a65PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFByb2dyZXNzIGZyb20gJ2twYy9jb21wb25lbnRzL3Byb2dyZXNzJztcXG5pbXBvcnQge0J1dHRvbkdyb3VwLCBCdXR0b259IGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPFByb2dyZXNzIHBlcmNlbnQ9e3sgc2VsZi5nZXQoJ3BlcmNlbnQnKSB9fSB0eXBlPVxcXCJjaXJjbGVcXFwiPlxcbiAgICAgICAgPGRpdiBzdHlsZT1cXFwiZm9udC1zaXplOiAxNHB4OyBsaW5lLWhlaWdodDogMjBweDtcXFwiIHYtaWY9e3sgc2VsZi5nZXQoJ3BlcmNlbnQnKSAhPT0gMTAwIH19PlxcbiAgICAgICAgICAgIOato+WcqOS4iuS8oDxiciAvPlxcbiAgICAgICAgICAgIHt7IHNlbGYuZ2V0KCdwZXJjZW50JykgfX0lXFxuICAgICAgICA8L2Rpdj5cXG4gICAgICAgIDxkaXYgc3R5bGU9XFxcImZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDIwcHg7IGNvbG9yOiAjNGRiNTAwO1xcXCIgdi1lbHNlPlxcbiAgICAgICAgICAgIOS4iuS8oOWujOaIkFxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvUHJvZ3Jlc3M+XFxuICAgIDxCdXR0b25Hcm91cD5cXG4gICAgICAgIDxCdXR0b24gc2l6ZT1cXFwibWluaVxcXCIgaWNvbiBldi1jbGljaz17eyBzZWxmLmFkZCB9fT4rPC9CdXR0b24+XFxuICAgICAgICA8QnV0dG9uIHNpemU9XFxcIm1pbmlcXFwiIGljb24gZXYtY2xpY2s9e3sgc2VsZi5taW51cyB9fT4tPC9CdXR0b24+XFxuICAgIDwvQnV0dG9uR3JvdXA+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1wcm9ncmVzc1xcbiAgICBkaXNwbGF5IGlubGluZS1ibG9ja1xcbiAgICB2ZXJ0aWNhbC1hbGlnbiBtaWRkbGVcXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7cGVyY2VudDogNDB9XFxuICAgIH1cXG5cXG4gICAgYWRkKCkge1xcbiAgICAgICAgaWYgKHRoaXMuZ2V0KCdwZXJjZW50JykgPj0gMTAwKSByZXR1cm47XFxuXFxuICAgICAgICB0aGlzLnNldCgncGVyY2VudCcsIHRoaXMuZ2V0KCdwZXJjZW50JykgKyAxMCk7XFxuICAgIH1cXG5cXG4gICAgbWludXMoKSB7XFxuICAgICAgICBpZiAodGhpcy5nZXQoJ3BlcmNlbnQnKSA8PSAwKSByZXR1cm47XFxuXFxuICAgICAgICB0aGlzLnNldCgncGVyY2VudCcsIHRoaXMuZ2V0KCdwZXJjZW50JykgLSAxMCk7XFxuICAgIH1cXG59XCJ9XSxcImluZGV4XCI6NjIsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBQcm9ncmVzcyA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9wcm9ncmVzcyc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge0J1dHRvbkdyb3VwLCBCdXR0b259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Qcm9ncmVzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cGVyY2VudDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wZXJjZW50PC9zcGFuPicpIH19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnR5cGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImNpcmNsZVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImZvbnQtc2l6ZTogMTRweDsgbGluZS1oZWlnaHQ6IDIwcHg7XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1pZjwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wZXJjZW50PC9zcGFuPicpICE9PSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPjEwMDwvc3Bhbj4gfX0mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIOato+WcqOS4iuS8oDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmJyPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICB7eyBzZWxmLmdldCgncGVyY2VudCcpIH19JVxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zdHlsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZm9udC1zaXplOiAxNHB4OyBsaW5lLWhlaWdodDogMjBweDsgY29sb3I6ICM0ZGI1MDA7XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1lbHNlPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAg5LiK5Lyg5a6M5oiQXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Qcm9ncmVzczwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b25Hcm91cDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zaXplPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJtaW5pXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+aWNvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYuYWRkPC9zcGFuPiB9fSZndDs8L3NwYW4+KzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibWluaVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmljb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmV2LWNsaWNrPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLm1pbnVzPC9zcGFuPiB9fSZndDs8L3NwYW4+LTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5CdXR0b248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbkdyb3VwPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1wcm9ncmVzczwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5kaXNwbGF5PC9zcGFuPiBpbmxpbmUtYmxvY2tcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj52ZXJ0aWNhbC1hbGlnbjwvc3Bhbj4gbWlkZGxlXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG5cXG4gICAgZGVmYXVsdHMoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5yZXR1cm48L3NwYW4+IHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5wZXJjZW50PC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj40MDwvc3Bhbj59XFxuICAgIH1cXG5cXG4gICAgYWRkKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aWY8L3NwYW4+ICg8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5nZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4ncGVyY2VudCc8L3NwYW4+KSAmZ3Q7PSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjEwMDwvc3Bhbj4pIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj47XFxuXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5zZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4ncGVyY2VudCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5nZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4ncGVyY2VudCc8L3NwYW4+KSArIDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTA8L3NwYW4+KTtcXG4gICAgfVxcblxcbiAgICBtaW51cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmlmPC9zcGFuPiAoPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uZ2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J3BlcmNlbnQnPC9zcGFuPikgJmx0Oz0gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4wPC9zcGFuPikgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPjtcXG5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LnNldCg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidwZXJjZW50Jzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnRoaXM8L3NwYW4+LmdldCg8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidwZXJjZW50Jzwvc3Bhbj4pIC0gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMDwvc3Bhbj4pO1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2NoaWxkcmVuL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2NoaWxkcmVuL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWchuW9oui/m+W6plwiLFwib3JkZXJcIjozfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5bCGPGNvZGU+dHlwZTwvY29kZT7orr7kuLo8Y29kZT5jaXJjbGU8L2NvZGU+5Y+v5Lul5bGV56S65ZyG5b2i6L+b5bqmPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFByb2dyZXNzIGZyb20gJ2twYy9jb21wb25lbnRzL3Byb2dyZXNzJztcXG5cXG48ZGl2PlxcbiAgICA8UHJvZ3Jlc3MgdHlwZT1cXFwiY2lyY2xlXFxcIiBwZXJjZW50PVxcXCI1MFxcXCIgLz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NjMsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBQcm9ncmVzcyA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9wcm9ncmVzcyc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5Qcm9ncmVzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiY2lyY2xlXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+cGVyY2VudDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiNTBcXFwiPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL2NpcmNsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9wcm9ncmVzcy9kZW1vcy9jaXJjbGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5bC65a+4XCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5zaXplPC9jb2RlPuadpeaMh+WumuWwuuWvuO+8mjxjb2RlPmRlZmF1bHQ8L2NvZGU+IDxjb2RlPnNtYWxsPC9jb2RlPiA8Y29kZT5taW5pPC9jb2RlPjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBQcm9ncmVzcyBmcm9tICdrcGMvY29tcG9uZW50cy9wcm9ncmVzcyc7XFxuXFxuPGRpdj5cXG4gICAgPFByb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiAvPlxcbiAgICA8UHJvZ3Jlc3MgcGVyY2VudD1cXFwiNTBcXFwiIHNpemU9XFxcInNtYWxsXFxcIiAvPlxcbiAgICA8UHJvZ3Jlc3MgcGVyY2VudD1cXFwiNTBcXFwiIHNpemU9XFxcIm1pbmlcXFwiIC8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1wcm9ncmVzc1xcbiAgICBtYXJnaW4gMTBweCAwXCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NjQsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBQcm9ncmVzcyA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9wcm9ncmVzcyc8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtQcm9ncmVzcyBwZXJjZW50PVxcXCI1MFxcXCIgLyZndDtcXG4gICAgJmx0O1Byb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiBzaXplPVxcXCJzbWFsbFxcXCIgLyZndDtcXG4gICAgJmx0O1Byb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiBzaXplPVxcXCJtaW5pXFxcIiAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXByb2dyZXNzPC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMHB4PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjA8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcHJvZ3Jlc3MvZGVtb3Mvc2l6ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9wcm9ncmVzcy9kZW1vcy9zaXplL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIueKtuaAgVwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+6YCa6L+HPGNvZGU+c3RhdHVzPC9jb2RlPuadpeaMh+WumueKtuaAge+8mjxjb2RlPmFjdGl2ZTwvY29kZT4gPGNvZGU+bm9ybWFsPC9jb2RlPiA8Y29kZT5lcnJvcjwvY29kZT4gPGNvZGU+c3VjY2VzczwvY29kZT48L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgUHJvZ3Jlc3MgZnJvbSAna3BjL2NvbXBvbmVudHMvcHJvZ3Jlc3MnO1xcblxcbjxkaXY+XFxuICAgIDxQcm9ncmVzcyBwZXJjZW50PVxcXCI1MFxcXCIgLz5cXG4gICAgPFByb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiBzdGF0dXM9XFxcIm5vcm1hbFxcXCIgLz5cXG4gICAgPFByb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiBzdGF0dXM9XFxcImVycm9yXFxcIiAvPlxcbiAgICA8UHJvZ3Jlc3MgcGVyY2VudD1cXFwiNTBcXFwiIHN0YXR1cz1cXFwic3VjY2Vzc1xcXCIgLz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLXByb2dyZXNzXFxuICAgIG1hcmdpbiAxMHB4IDBcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo2NSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFByb2dyZXNzIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3Byb2dyZXNzJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O1Byb2dyZXNzIHBlcmNlbnQ9XFxcIjUwXFxcIiAvJmd0O1xcbiAgICAmbHQ7UHJvZ3Jlc3MgcGVyY2VudD1cXFwiNTBcXFwiIHN0YXR1cz1cXFwibm9ybWFsXFxcIiAvJmd0O1xcbiAgICAmbHQ7UHJvZ3Jlc3MgcGVyY2VudD1cXFwiNTBcXFwiIHN0YXR1cz1cXFwiZXJyb3JcXFwiIC8mZ3Q7XFxuICAgICZsdDtQcm9ncmVzcyBwZXJjZW50PVxcXCI1MFxcXCIgc3RhdHVzPVxcXCJzdWNjZXNzXFxcIiAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXByb2dyZXNzPC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMHB4PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjA8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcHJvZ3Jlc3MvZGVtb3Mvc3RhdHVzL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3Byb2dyZXNzL2RlbW9zL3N0YXR1cy9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rmnKznlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPjxjb2RlPlJhZGlvPC9jb2RlPueahOWfuuacrOeUqOazle+8jOWPiuemgeeUqOeKtuaAgeOAgueUseS6jjxjb2RlPnRydWVWYWx1ZTwvY29kZT7nmoTpu5jorqTlgLzkuLo8Y29kZT50cnVlPC9jb2RlPu+8jOaJgOS7peWPr+S7peebtOaOpeS8oOWFpTxjb2RlPnZhbHVlPXRydWU8L2NvZGU+5p2l5oyH5a6a6YCJ5Lit54q25oCB44CCPC9wPlxcbjxibG9ja3F1b3RlPlxcbjxwPumAieS4reeKtuaAgeeahOWIpOWumuadoeS7tuaYrzxjb2RlPnZhbHVlID09PSB0cnVlVmFsdWU8L2NvZGU+77yM5a+55LqO5YC85Li65a+56LGh55qE5oOF5Ya16KaB5rOo5oSP44CCPC9wPlxcbjwvYmxvY2txdW90ZT5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBSYWRpbyBmcm9tICdrcGMvY29tcG9uZW50cy9yYWRpbyc7XFxuXFxuPGRpdj5cXG4gICAgPFJhZGlvPnJhZGlvPC9SYWRpbz5cXG4gICAgPFJhZGlvIGRpc2FibGVkPmRpc2FibGVkIHJhZGlvPC9SYWRpbz5cXG4gICAgPFJhZGlvIHZhbHVlPXt7IHRydWUgfX0gZGlzYWJsZWQ+ZGlzYWJsZWQgY2hlY2tlZCByYWRpbzwvUmFkaW8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1yYWRpb1xcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjY3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gUmFkaW8gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcmFkaW8nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+Jmd0Ozwvc3Bhbj5yYWRpbzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+Jmd0Ozwvc3Bhbj5kaXNhYmxlZCByYWRpbzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWU8L3NwYW4+IH19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRpc2FibGVkPC9zcGFuPiZndDs8L3NwYW4+ZGlzYWJsZWQgY2hlY2tlZCByYWRpbzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstcmFkaW88L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcmFkaW8vZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvcmFkaW8vZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwiUmFkaW/nu4RcIixcIm9yZGVyXCI6MX0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWSjOa1j+iniOWZqOWOn+eUn+ihjOS4uuS4gOagt++8jOe7mTxjb2RlPlJhZGlvPC9jb2RlPuaMh+WumuebuOWQjOeahDxjb2RlPm5hbWU8L2NvZGU+77yM5a6D5Lus5L6/57uE5oiQ5LqG5Y2V6YCJ5qGG57uE44CCPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFJhZGlvIGZyb20gJ2twYy9jb21wb25lbnRzL3JhZGlvJztcXG5cXG48ZGl2PlxcbiAgICA8UmFkaW8gbmFtZT1cXFwibGFuZ3VhZ2VcXFwiIHRydWVWYWx1ZT1cXFwiSmF2YXNjcmlwdFxcXCIgdi1tb2RlbD1cXFwibGFuZ3VhZ2VcXFwiPkphdmFzY3JpcHQ8L1JhZGlvPlxcbiAgICA8UmFkaW8gbmFtZT1cXFwibGFuZ3VhZ2VcXFwiIHRydWVWYWx1ZT1cXFwiQysrXFxcIiB2LW1vZGVsPVxcXCJsYW5ndWFnZVxcXCI+QysrPC9SYWRpbz5cXG4gICAgPFJhZGlvIG5hbWU9XFxcImxhbmd1YWdlXFxcIiB0cnVlVmFsdWU9XFxcIlBIUFxcXCIgdi1tb2RlbD1cXFwibGFuZ3VhZ2VcXFwiPlBIUDwvUmFkaW8+XFxuICAgIFlvdXIgc2VsZWN0ZWQ6IHt7IHNlbGYuZ2V0KCdsYW5ndWFnZScpIH19XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1yYWRpb1xcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjY4LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gUmFkaW8gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvcmFkaW8nPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm5hbWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlXFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHJ1ZVZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJKYXZhc2NyaXB0XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibGFuZ3VhZ2VcXFwiPC9zcGFuPiZndDs8L3NwYW4+SmF2YXNjcmlwdDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bmFtZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibGFuZ3VhZ2VcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIkMrK1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPkMrKzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bmFtZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibGFuZ3VhZ2VcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50cnVlVmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlBIUFxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImxhbmd1YWdlXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlBIUDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICBZb3VyIHNlbGVjdGVkOiB7eyBzZWxmLmdldCgnbGFuZ3VhZ2UnKSB9fVxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstcmFkaW88L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvcmFkaW8vZGVtb3MvZ3JvdXAvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvcmFkaW8vZGVtb3MvZ3JvdXAvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5oyH5a6a6YCJ5Lit55qE5YC8XCIsXCJvcmRlclwiOjJ9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5SYWRpbzwvY29kZT7pu5jorqTpgInkuK3nmoTlgLzkuLo8Y29kZT50cnVlPC9jb2RlPu+8jOmAmui/hzxjb2RlPnRydWVWYWx1ZTwvY29kZT7lsZ7mgKfmiJHku6zlj6/ku6XmjIflrprku7vmhI/lgLzjgII8L3A+XFxuPGJsb2NrcXVvdGU+XFxuPHA+5ZKMPGNvZGU+Q2hlY2tib3g8L2NvZGU+5LiA5qC377yM5Yik5a6a6YCJ5Lit54q25oCB5pe277yM5b2T5YC85Li65a+56LGh5q+U6L6D55qE5piv5byV55So5Zyw5Z2APC9wPlxcbjwvYmxvY2txdW90ZT5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBSYWRpbyBmcm9tICdrcGMvY29tcG9uZW50cy9yYWRpbyc7XFxuXFxuPGRpdj5cXG4gICAgPFJhZGlvIHYtbW9kZWw9XFxcInZhbHVlMVxcXCI+6buY6K6k5YC877yae3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMScpKSB9fTwvUmFkaW8+XFxuICAgIDxSYWRpbyB2LW1vZGVsPVxcXCJ2YWx1ZTJcXFwiIHRydWVWYWx1ZT1cXFwiY2hlY2tlZFxcXCI+XFxuICAgICAgICDmjIflrprpgInkuK3ml7bnmoTlj5blgLzkuLpcXFwiY2hlY2tlZFxcXCI6IHt7IEpTT04uc3RyaW5naWZ5KHNlbGYuZ2V0KCd2YWx1ZTInKSkgfX1cXG4gICAgPC9SYWRpbz5cXG4gICAgPFJhZGlvIHYtbW9kZWw9XFxcInZhbHVlM1xcXCIgdHJ1ZVZhbHVlPXt7IHNlbGYuZ2V0KCdjaGVja2VkVmFsdWUnKSB9fT5cXG4gICAgICAgIOaMh+WumumAieS4reaXtueahOWPluWAvOS4uuWvueixoe+8mnt7IEpTT04uc3RyaW5naWZ5KHNlbGYuZ2V0KCd2YWx1ZTMnKSkgfX1cXG4gICAgPC9SYWRpbz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLXJhZGlvXFxuICAgIG1hcmdpbi1yaWdodCAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGVcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICBjaGVja2VkVmFsdWU6IHtcXG4gICAgICAgICAgICAgICAgdGVzdDogMVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH07XFxuICAgIH1cXG59XCJ9XSxcImluZGV4XCI6NjksXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBSYWRpbyA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9yYWRpbyc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5SYWRpbzwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwidmFsdWUxXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPum7mOiupOWAvO+8mnt7IEpTT04uc3RyaW5naWZ5KHNlbGYuZ2V0KCd2YWx1ZTEnKSkgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInZhbHVlMlxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWVWYWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiY2hlY2tlZFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIOaMh+WumumAieS4reaXtueahOWPluWAvOS4ulxcXCJjaGVja2VkXFxcIjoge3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMicpKSB9fVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInZhbHVlM1xcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRydWVWYWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jaGVja2VkVmFsdWU8L3NwYW4+JykgfX0mZ3Q7PC9zcGFuPlxcbiAgICAgICAg5oyH5a6a6YCJ5Lit5pe255qE5Y+W5YC85Li65a+56LGh77yae3sgSlNPTi5zdHJpbmdpZnkoc2VsZi5nZXQoJ3ZhbHVlMycpKSB9fVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+UmFkaW88L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXJhZGlvPC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4yMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGVcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNoZWNrZWRWYWx1ZTwvc3Bhbj46IHtcXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dGVzdDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTwvc3Bhbj5cXG4gICAgICAgICAgICB9XFxuICAgICAgICB9O1xcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3JhZGlvL2RlbW9zL3ZhbHVlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3JhZGlvL2RlbW9zL3ZhbHVlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuehgOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+PGNvZGU+U2VsZWN0PC9jb2RlPuW1jOWllzxjb2RlPk9wdGlvbjwvY29kZT7kvb/nlKjvvIznlKg8Y29kZT52LW1vZGVsPC9jb2RlPui/m+ihjOWPjOWQkeaVsOaNrue7keWumuOAgijmlK/mjIHplK7nm5jpgInmi6kpPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtTZWxlY3QsIE9wdGlvbn0gZnJvbSAna3BjL2NvbXBvbmVudHMvc2VsZWN0JztcXG5cXG48ZGl2PlxcbiAgICA8U2VsZWN0IHYtbW9kZWw9XFxcImRheVxcXCI+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJNb25kYXlcXFwiPuaYn+acn+S4gDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJXZWRuZXNkYXlcXFwiPuaYn+acn+S4iTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVGh1cnNkYXlcXFwiPuaYn+acn+WbmzwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlNhdHVyZGF5XFxcIj7mmJ/mnJ/lha08L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlN1bmRheVxcXCI+5pif5pyf5aSpPC9PcHRpb24+XFxuICAgIDwvU2VsZWN0PlxcbiAgICBZb3Ugc2VsZWN0ZWQ6IHt7IHNlbGYuZ2V0KCdkYXknKSB9fVxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo3MSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTZWxlY3QsIE9wdGlvbn0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2VsZWN0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiTW9uZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4gDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlR1ZXNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqMPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiV2VkbmVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4iTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlRodXJzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WbmzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIkZyaWRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kupQ8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTYXR1cmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lha08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTdW5kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5aSpPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIFlvdSBzZWxlY3RlZDoge3sgc2VsZi5nZXQoJ2RheScpIH19XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWPr+a4heepulwiLFwib3JkZXJcIjoyfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5oyH5a6aPGNvZGU+Y2xlYXJhYmxlPC9jb2RlPuWxleekuua4heepuuaMiemSrjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7U2VsZWN0LCBPcHRpb259IGZyb20gJ2twYy9jb21wb25lbnRzL3NlbGVjdCc7XFxuXFxuPGRpdj5cXG4gICAgPFNlbGVjdCB2LW1vZGVsPVxcXCJkYXlcXFwiIGNsZWFyYWJsZSBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiAxMHB4XFxcIj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIk1vbmRheVxcXCI+5pif5pyf5LiAPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUdWVzZGF5XFxcIj7mmJ/mnJ/kuow8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUaHVyc2RheVxcXCI+5pif5pyf5ZubPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJGcmlkYXlcXFwiPuaYn+acn+S6lDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU2F0dXJkYXlcXFwiPuaYn+acn+WFrTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU3VuZGF5XFxcIj7mmJ/mnJ/lpKk8L09wdGlvbj5cXG4gICAgPC9TZWxlY3Q+XFxuICAgIDxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5c1xcXCIgbXVsdGlwbGUgY2xlYXJhYmxlPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiTW9uZGF5XFxcIj7mmJ/mnJ/kuIA8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlR1ZXNkYXlcXFwiPuaYn+acn+S6jDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiV2VkbmVzZGF5XFxcIj7mmJ/mnJ/kuIk8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlRodXJzZGF5XFxcIj7mmJ/mnJ/lm5s8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIkZyaWRheVxcXCI+5pif5pyf5LqUPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJTYXR1cmRheVxcXCI+5pif5pyf5YWtPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJTdW5kYXlcXFwiPuaYn+acn+WkqTwvT3B0aW9uPlxcbiAgICA8L1NlbGVjdD5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NzIsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7U2VsZWN0LCBPcHRpb259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3NlbGVjdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmNsZWFyYWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU2F0dXJkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5YWtPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU3VuZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WkqTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheXNcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5tdWx0aXBsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xlYXJhYmxlPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJNb25kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LiAPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiVHVlc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuow8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJXZWRuZXNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LiJPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiVGh1cnNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5ZubPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiRnJpZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6lDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlNhdHVyZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WFrTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlN1bmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lpKk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9jbGVhcmFibGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL2NsZWFyYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLoh6rlrprkuYnmmL7npLrlhoXlrrlcIixcIm9yZGVyXCI6NX0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPjxjb2RlPk9wdGlvbjwvY29kZT7nmoTlrZDlhYPntKDlj6/ku6XmmK/ku7vmhI9kb23nu5PmnoTvvIzogIzpnZ7ku4Xku4Xlj6rmmK/lrZfnrKbkuLLjgILmraTml7blpoLmnpzpnIDopoHmlK/mjIE8Y29kZT5maWx0ZXJhYmxlPC9jb2RlPu+8jOaIkeS7rOW6lOivpeaMh+Wumjxjb2RlPmxhYmVsPC9jb2RlPu+8jOS7peS+v+e7hOS7tuefpemBk+etm+mAieeahOWGheWuueOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7U2VsZWN0LCBPcHRpb259IGZyb20gJ2twYy9jb21wb25lbnRzL3NlbGVjdCc7XFxuXFxuY29uc3QgZGF0YSA9IFtcXG4gICAge2xhYmVsOiAn5pif5pyf5LiAJywgdmFsdWU6ICdNb25kYXknfSxcXG4gICAge2xhYmVsOiAn5pif5pyf5LqMJywgdmFsdWU6ICdUdWVzZGF5J30sXFxuICAgIHtsYWJlbDogJ+aYn+acn+S4iScsIHZhbHVlOiAnV2VkbmVzZGF5J30sXFxuICAgIHtsYWJlbDogJ+aYn+acn+WbmycsIHZhbHVlOiAnVGh1cnNkYXknfSxcXG4gICAge2xhYmVsOiAn5pif5pyf5LqUJywgdmFsdWU6ICdGcmlkYXknfSxcXG4gICAge2xhYmVsOiAn5pif5pyf5YWtJywgdmFsdWU6ICdTYXR1cmRheSd9LFxcbiAgICB7bGFiZWw6ICfmmJ/mnJ/lpKknLCB2YWx1ZTogJ1N1bmRheSd9LFxcbl07XFxuXFxuPFNlbGVjdCB2LW1vZGVsPVxcXCJkYXlcXFwiIGZpbHRlcmFibGU+XFxuICAgIDxPcHRpb24gdi1mb3I9e3sgZGF0YSB9fSB2YWx1ZT17eyB2YWx1ZS52YWx1ZSB9fSBsYWJlbD17eyB2YWx1ZS5sYWJlbCB9fT5cXG4gICAgICAgIDxkaXY+XFxuICAgICAgICAgICAgPHNwYW4+e3sgdmFsdWUubGFiZWwgfX08L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gc3R5bGU9XFxcImZsb2F0OiByaWdodDsgY29sb3I6ICNjY2NcXFwiPnt7IHZhbHVlLnZhbHVlIH19PC9zcGFuPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIDwvT3B0aW9uPlxcbjwvU2VsZWN0PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo3MyxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTZWxlY3QsIE9wdGlvbn0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2VsZWN0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y29uc3Q8L3NwYW4+IGRhdGEgPSBbXFxuICAgIHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5sYWJlbDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+aYn+acn+S4gCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J01vbmRheSc8L3NwYW4+fSxcXG4gICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5pif5pyf5LqMJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nVHVlc2RheSc8L3NwYW4+fSxcXG4gICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5pif5pyf5LiJJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nV2VkbmVzZGF5Jzwvc3Bhbj59LFxcbiAgICB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGFiZWw8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifmmJ/mnJ/lm5snPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidUaHVyc2RheSc8L3NwYW4+fSxcXG4gICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5pif5pyf5LqUJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nRnJpZGF5Jzwvc3Bhbj59LFxcbiAgICB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGFiZWw8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifmmJ/mnJ/lha0nPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidTYXR1cmRheSc8L3NwYW4+fSxcXG4gICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5pif5pyf5aSpJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nU3VuZGF5Jzwvc3Bhbj59LFxcbl07XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJkYXlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5maWx0ZXJhYmxlPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1mb3I8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRhdGE8L3NwYW4+IH19IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZS52YWx1ZTwvc3Bhbj4gfX0gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGFiZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlLmxhYmVsPC9zcGFuPiB9fSZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5zcGFuPC9zcGFuPiZndDs8L3NwYW4+e3sgdmFsdWUubGFiZWwgfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+c3Bhbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNwYW48L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnN0eWxlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJmbG9hdDogcmlnaHQ7IGNvbG9yOiAjY2NjXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPnt7IHZhbHVlLnZhbHVlIH19PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnNwYW48L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL2N1c3RvbS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvY3VzdG9tL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuemgeeUqOeKtuaAgVwiLFwib3JkZXJcIjoxfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+57uZPGNvZGU+U2VsZWN0PC9jb2RlPua3u+WKoDxjb2RlPmRpc2FibGVkPC9jb2RlPuemgeeUqOaVtOS4qumAieaLqeahhumAieaLqe+8m+e7mTxjb2RlPk9wdGlvbjwvY29kZT7mt7vliqA8Y29kZT5kaXNhYmxlZDwvY29kZT7npoHnlKjor6XpobnpgInmi6k8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge1NlbGVjdCwgT3B0aW9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9zZWxlY3QnO1xcblxcbjxkaXY+XFxuICAgIDxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5XFxcIiBkaXNhYmxlZCBzdHlsZT1cXFwibWFyZ2luLXJpZ2h0OiAxMHB4XFxcIj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIk1vbmRheVxcXCI+5pif5pyf5LiAPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUdWVzZGF5XFxcIj7mmJ/mnJ/kuow8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUaHVyc2RheVxcXCI+5pif5pyf5ZubPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJGcmlkYXlcXFwiPuaYn+acn+S6lDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU2F0dXJkYXlcXFwiPuaYn+acn+WFrTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU3VuZGF5XFxcIj7mmJ/mnJ/lpKk8L09wdGlvbj5cXG4gICAgPC9TZWxlY3Q+XFxuICAgIDxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5XFxcIj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIk1vbmRheVxcXCI+5pif5pyf5LiAPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUdWVzZGF5XFxcIiBkaXNhYmxlZD7mmJ/mnJ/kuow8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUaHVyc2RheVxcXCI+5pif5pyf5ZubPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJGcmlkYXlcXFwiPuaYn+acn+S6lDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU2F0dXJkYXlcXFwiPuaYn+acn+WFrTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU3VuZGF5XFxcIj7mmJ/mnJ/lpKk8L09wdGlvbj5cXG4gICAgPC9TZWxlY3Q+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjc0LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1NlbGVjdCwgT3B0aW9ufSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9zZWxlY3QnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJkYXlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kaXNhYmxlZDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU2F0dXJkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5YWtPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU3VuZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WkqTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuow8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJXZWRuZXNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LiJPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiVGh1cnNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5ZubPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiRnJpZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6lDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlNhdHVyZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WFrTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlN1bmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lpKk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9kaXNhYmxlZC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZGlzYWJsZWQvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Y+v562b6YCJXCIsXCJvcmRlclwiOjR9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mjIflrpo8Y29kZT5maWx0ZXJhYmxlPC9jb2RlPuaUr+aMgeetm+mAie+8jOe7hOS7tuS8muWQjOaXtuWvuTxjb2RlPmxhYmVsPC9jb2RlPuWSjDxjb2RlPnZhbHVlPC9jb2RlPui/m+ihjOetm+mAiTwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7U2VsZWN0LCBPcHRpb259IGZyb20gJ2twYy9jb21wb25lbnRzL3NlbGVjdCc7XFxuXFxuPGRpdj5cXG4gICAgPFNlbGVjdCB2LW1vZGVsPVxcXCJkYXlcXFwiIGZpbHRlcmFibGUgc3R5bGU9XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJNb25kYXlcXFwiPuaYn+acn+S4gDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJXZWRuZXNkYXlcXFwiPuaYn+acn+S4iTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVGh1cnNkYXlcXFwiPuaYn+acn+WbmzwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlNhdHVyZGF5XFxcIj7mmJ/mnJ/lha08L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlN1bmRheVxcXCI+5pif5pyf5aSpPC9PcHRpb24+XFxuICAgIDwvU2VsZWN0PlxcbiAgICA8U2VsZWN0IHYtbW9kZWw9XFxcImRheXNcXFwiIG11bHRpcGxlIGZpbHRlcmFibGU+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJNb25kYXlcXFwiPuaYn+acn+S4gDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJXZWRuZXNkYXlcXFwiPuaYn+acn+S4iTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVGh1cnNkYXlcXFwiPuaYn+acn+WbmzwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlNhdHVyZGF5XFxcIj7mmJ/mnJ/lha08L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlN1bmRheVxcXCI+5pif5pyf5aSpPC9PcHRpb24+XFxuICAgIDwvU2VsZWN0PlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo3NSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTZWxlY3QsIE9wdGlvbn0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2VsZWN0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGF5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZmlsdGVyYWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c3R5bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIm1hcmdpbi1yaWdodDogMTBweFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU2F0dXJkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5YWtPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU3VuZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WkqTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheXNcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5tdWx0aXBsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZmlsdGVyYWJsZTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiTW9uZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4gDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlR1ZXNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqMPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiV2VkbmVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4iTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlRodXJzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WbmzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIkZyaWRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kupQ8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTYXR1cmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lha08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTdW5kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5aSpPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZmlsdGVyYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZmlsdGVyYWJsZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLliIbnu4RcIixcIm9yZGVyXCI6Nn0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPueUqDxjb2RlPk9wdGlvbkdyb3VwPC9jb2RlPuW1jOWllzxjb2RlPk9wdGlvbjwvY29kZT7lj6/ku6Xlrp7njrDliIbnu4Tlip/og708L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge1NlbGVjdCwgT3B0aW9uLCBPcHRpb25Hcm91cH0gZnJvbSAna3BjL2NvbXBvbmVudHMvc2VsZWN0JztcXG5cXG48U2VsZWN0IHYtbW9kZWw9XFxcImRheVxcXCI+XFxuICAgIDxPcHRpb25Hcm91cCBsYWJlbD1cXFwi5bel5L2c5pelXFxcIj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIk1vbmRheVxcXCI+5pif5pyf5LiAPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUdWVzZGF5XFxcIj7mmJ/mnJ/kuow8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUaHVyc2RheVxcXCI+5pif5pyf5ZubPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJGcmlkYXlcXFwiPuaYn+acn+S6lDwvT3B0aW9uPlxcbiAgICA8L09wdGlvbkdyb3VwPlxcbiAgICA8T3B0aW9uR3JvdXAgbGFiZWw9XFxcIuS8keaBr+aXpVxcXCI+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJTYXR1cmRheVxcXCI+5pif5pyf5YWtPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJTdW5kYXlcXFwiPuaYn+acn+WkqTwvT3B0aW9uPlxcbiAgICA8L09wdGlvbkdyb3VwPlxcbjwvU2VsZWN0PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo3NixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTZWxlY3QsIE9wdGlvbiwgT3B0aW9uR3JvdXB9IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3NlbGVjdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb25Hcm91cDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bGFiZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIuW3peS9nOaXpVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uR3JvdXA8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCLkvJHmga/ml6VcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTYXR1cmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lha08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTdW5kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5aSpPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uR3JvdXA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9ncm91cC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvZ3JvdXAvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5aSa6YCJXCIsXCJvcmRlclwiOjN9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mjIflrpo8Y29kZT5tdWx0aXBsZTwvY29kZT7mlK/mjIHlpJrpgIk8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge1NlbGVjdCwgT3B0aW9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9zZWxlY3QnO1xcblxcbjxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5XFxcIiBtdWx0aXBsZT5cXG4gICAgPE9wdGlvbiB2YWx1ZT1cXFwiTW9uZGF5XFxcIj7mmJ/mnJ/kuIA8L09wdGlvbj5cXG4gICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgIDxPcHRpb24gdmFsdWU9XFxcIlRodXJzZGF5XFxcIj7mmJ/mnJ/lm5s8L09wdGlvbj5cXG4gICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgPE9wdGlvbiB2YWx1ZT1cXFwiU2F0dXJkYXlcXFwiPuaYn+acn+WFrTwvT3B0aW9uPlxcbiAgICA8T3B0aW9uIHZhbHVlPVxcXCJTdW5kYXlcXFwiPuaYn+acn+WkqTwvT3B0aW9uPlxcbjwvU2VsZWN0PlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo3NyxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTZWxlY3QsIE9wdGlvbn0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2VsZWN0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52LW1vZGVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJkYXlcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5tdWx0aXBsZTwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJNb25kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LiAPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiV2VkbmVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4iTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiVGh1cnNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5ZubPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTYXR1cmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lha08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlN1bmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lpKk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9zZWxlY3QvZGVtb3MvbXVsdGlwbGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc2VsZWN0L2RlbW9zL211bHRpcGxlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWwuuWvuFwiLFwib3JkZXJcIjo3fSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+PGNvZGU+c2l6ZTwvY29kZT7mjIflrprkuInnp43lsLrlr7jvvJo8Y29kZT5kZWZhdWx0PC9jb2RlPiA8Y29kZT5zbWFsbDwvY29kZT4gPGNvZGU+bWluaTwvY29kZT48L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQge1NlbGVjdCwgT3B0aW9ufSBmcm9tICdrcGMvY29tcG9uZW50cy9zZWxlY3QnO1xcblxcbjxkaXY+XFxuICAgIDxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5XFxcIj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIk1vbmRheVxcXCI+5pif5pyf5LiAPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUdWVzZGF5XFxcIj7mmJ/mnJ/kuow8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIldlZG5lc2RheVxcXCI+5pif5pyf5LiJPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJUaHVyc2RheVxcXCI+5pif5pyf5ZubPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJGcmlkYXlcXFwiPuaYn+acn+S6lDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU2F0dXJkYXlcXFwiPuaYn+acn+WFrTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiU3VuZGF5XFxcIj7mmJ/mnJ/lpKk8L09wdGlvbj5cXG4gICAgPC9TZWxlY3Q+XFxuICAgIDxTZWxlY3Qgdi1tb2RlbD1cXFwiZGF5XFxcIiBzaXplPVxcXCJzbWFsbFxcXCI+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJNb25kYXlcXFwiPuaYn+acn+S4gDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJXZWRuZXNkYXlcXFwiPuaYn+acn+S4iTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVGh1cnNkYXlcXFwiPuaYn+acn+WbmzwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlNhdHVyZGF5XFxcIj7mmJ/mnJ/lha08L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlN1bmRheVxcXCI+5pif5pyf5aSpPC9PcHRpb24+XFxuICAgIDwvU2VsZWN0PlxcbiAgICA8U2VsZWN0IHYtbW9kZWw9XFxcImRheVxcXCIgc2l6ZT1cXFwibWluaVxcXCI+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJNb25kYXlcXFwiPuaYn+acn+S4gDwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVHVlc2RheVxcXCI+5pif5pyf5LqMPC9PcHRpb24+XFxuICAgICAgICA8T3B0aW9uIHZhbHVlPVxcXCJXZWRuZXNkYXlcXFwiPuaYn+acn+S4iTwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiVGh1cnNkYXlcXFwiPuaYn+acn+WbmzwvT3B0aW9uPlxcbiAgICAgICAgPE9wdGlvbiB2YWx1ZT1cXFwiRnJpZGF5XFxcIj7mmJ/mnJ/kupQ8L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlNhdHVyZGF5XFxcIj7mmJ/mnJ/lha08L09wdGlvbj5cXG4gICAgICAgIDxPcHRpb24gdmFsdWU9XFxcIlN1bmRheVxcXCI+5pif5pyf5aSpPC9PcHRpb24+XFxuICAgIDwvU2VsZWN0PlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstc2VsZWN0XFxuICAgIG1hcmdpbi1yaWdodCAxMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6NzgsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB7U2VsZWN0LCBPcHRpb259IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3NlbGVjdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU2F0dXJkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5YWtPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU3VuZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WkqTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TZWxlY3Q8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImRheVxcXCI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNpemU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInNtYWxsXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiTW9uZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4gDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlR1ZXNkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqMPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiV2VkbmVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S4iTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIlRodXJzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WbmzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIkZyaWRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kupQ8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTYXR1cmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lha08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJTdW5kYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5aSpPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U2VsZWN0PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiZGF5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2l6ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwibWluaVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIk1vbmRheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUdWVzZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+S6jDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIldlZG5lc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/kuIk8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJUaHVyc2RheVxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7mmJ/mnJ/lm5s8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJGcmlkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5LqUPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU2F0dXJkYXlcXFwiPC9zcGFuPiZndDs8L3NwYW4+5pif5pyf5YWtPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPk9wdGlvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+T3B0aW9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj52YWx1ZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiU3VuZGF5XFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuaYn+acn+WkqTxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5PcHRpb248L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlNlbGVjdDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+Lmstc2VsZWN0PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1yaWdodDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9zaXplL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3NlbGVjdC9kZW1vcy9zaXplL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuehgOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+55SoPGNvZGU+bWluPC9jb2RlPuWSjDxjb2RlPm1heDwvY29kZT7mjIflrprlj5blgLzojIPlm7TvvIw8Y29kZT52LW1vZGVsPC9jb2RlPui/m+ihjOWPjOWQkeaVsOaNrue7keWumjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBTbGlkZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvc2xpZGVyJztcXG5cXG48ZGl2PlxcbiAgICA8U2xpZGVyIHYtbW9kZWw9XFxcInZhbHVlMVxcXCIgLz5cXG4gICAgPFNsaWRlciB2LW1vZGVsPVxcXCJ2YWx1ZTJcXFwiIG1pbj17eyA1MCB9fSBtYXg9e3sgNTAwIH19IC8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1zbGlkZXJcXG4gICAgbWFyZ2luLWJvdHRvbSAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6ODAsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBTbGlkZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2xpZGVyJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O1NsaWRlciB2LW1vZGVsPVxcXCJ2YWx1ZTFcXFwiIC8mZ3Q7XFxuICAgICZsdDtTbGlkZXIgdi1tb2RlbD1cXFwidmFsdWUyXFxcIiBtaW49e3sgNTAgfX0gbWF4PXt7IDUwMCB9fSAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXNsaWRlcjwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tYm90dG9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc2xpZGVyL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLnpoHnlKjnu4Tku7ZcIixcIm9yZGVyXCI6M30sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPua3u+WKoDxjb2RlPmRpc2FibGVkPC9jb2RlPuemgeeUqOe7hOS7tjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBTbGlkZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvc2xpZGVyJztcXG5cXG48ZGl2PlxcbiAgICA8U2xpZGVyIGRpc2FibGVkIHZhbHVlPXt7IDUwIH19IC8+XFxuICAgIDxTbGlkZXIgZGlzYWJsZWQgaXNSYW5nZSB2YWx1ZT17eyBbNTUsIDgwXSB9fSBtaW49e3sgNTAgfX0gbWF4PXt7IDEwMCB9fSAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstc2xpZGVyXFxuICAgIG1hcmdpbi1ib3R0b20gMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjgxLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gU2xpZGVyIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3NsaWRlcic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtTbGlkZXIgZGlzYWJsZWQgdmFsdWU9e3sgNTAgfX0gLyZndDtcXG4gICAgJmx0O1NsaWRlciBkaXNhYmxlZCBpc1JhbmdlIHZhbHVlPXt7IFs1NSwgODBdIH19IG1pbj17eyA1MCB9fSBtYXg9e3sgMTAwIH19IC8mZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+Lmstc2xpZGVyPC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1ib3R0b208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy9zbGlkZXIvZGVtb3MvZGlzYWJsZWQvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc2xpZGVyL2RlbW9zL2Rpc2FibGVkL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuiMg+WbtOmAieaLqVwiLFwib3JkZXJcIjozfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5oyH5a6aPGNvZGU+aXNSYW5nZTwvY29kZT7kvb/nu4Tku7bmlK/mjIHojIPlm7TpgInmi6nvvIzmraTml7Y8Y29kZT52LW1vZGVsPC9jb2RlPue7keWumueahOaVsOaNruS4uuaVsOe7hO+8jOW5tuS4lOS4jeS8muWxleekujxjb2RlPmlucHV0PC9jb2RlPui+k+WFpeahhuOAgjwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBTbGlkZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvc2xpZGVyJztcXG5cXG48U2xpZGVyIGlzUmFuZ2Ugdi1tb2RlbD1cXFwidmFsdWVzXFxcIiAvPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgdmFsdWVzOiBbNTAsIDc2XSxcXG4gICAgICAgIH1cXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjo4MixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFNsaWRlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9zbGlkZXInPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TbGlkZXI8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmlzUmFuZ2U8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnYtbW9kZWw8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcInZhbHVlc1xcXCI8L3NwYW4+IC8mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnZhbHVlczwvc3Bhbj46IFs8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjUwPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj43Njwvc3Bhbj5dLFxcbiAgICAgICAgfVxcbiAgICB9XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9yYW5nZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zbGlkZXIvZGVtb3MvcmFuZ2UvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6K6+572u5q2l6ZW/XCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5zdGVwPC9jb2RlPuWPr+S7peiuvue9ruatpemVv++8jOm7mOiupOatpemVv+S4ujxjb2RlPjE8L2NvZGU+PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFNsaWRlciBmcm9tICdrcGMvY29tcG9uZW50cy9zbGlkZXInO1xcblxcbjxkaXY+XFxuICAgIDxTbGlkZXIgdi1tb2RlbD1cXFwidmFsdWUxXFxcIiBzdGVwPXt7IDUgfX0gLz5cXG4gICAgPFNsaWRlciB2LW1vZGVsPVxcXCJ2YWx1ZTJcXFwiIG1pbj17eyA1MCB9fSBtYXg9e3sgNTAwIH19IHN0ZXA9e3sgMC4xIH19IC8+XFxuPC9kaXY+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCIuay1zbGlkZXJcXG4gICAgbWFyZ2luLWJvdHRvbSAyMHB4XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiaW1wb3J0IEludGFjdCBmcm9tICdpbnRhY3QnO1xcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XFxuaW1wb3J0ICcuL2luZGV4LnN0eWwnOyBcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6ODMsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBTbGlkZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc2xpZGVyJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O1NsaWRlciB2LW1vZGVsPVxcXCJ2YWx1ZTFcXFwiIHN0ZXA9e3sgNSB9fSAvJmd0O1xcbiAgICAmbHQ7U2xpZGVyIHYtbW9kZWw9XFxcInZhbHVlMlxcXCIgbWluPXt7IDUwIH19IG1heD17eyA1MDAgfX0gc3RlcD17eyAwLjEgfX0gLyZndDtcXG4mbHQ7L2RpdiZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1zbGlkZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLWJvdHRvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4yMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9zdGVwL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3NsaWRlci9kZW1vcy9zdGVwL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuehgOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5L2/55SoPGNvZGU+di1tb2RlbDwvY29kZT7ov5vooYzlj4zlkJHmlbDmja7nu5HlrprvvIw8Y29kZT5kaXNhYmxlZDwvY29kZT7npoHnlKjnu4Tku7Y8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgU3Bpbm5lciBmcm9tICdrcGMvY29tcG9uZW50cy9zcGlubmVyJztcXG5cXG48ZGl2PlxcbiAgICA8U3Bpbm5lciB2LW1vZGVsPVxcXCJ2YWx1ZVxcXCIgLz5cXG4gICAgPFNwaW5uZXIgZGlzYWJsZWQgLz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLXNwaW5uZXJcXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo4NSxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFNwaW5uZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc3Bpbm5lcic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtTcGlubmVyIHYtbW9kZWw9XFxcInZhbHVlXFxcIiAvJmd0O1xcbiAgICAmbHQ7U3Bpbm5lciBkaXNhYmxlZCAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXNwaW5uZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc3Bpbm5lci9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy9zcGlubmVyL2RlbW9zL2Jhc2ljL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWwuuWvuFwiLFwib3JkZXJcIjoyfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+PGNvZGU+c2l6ZTwvY29kZT7lsZ7mgKflrprkuYkz5Lit5bC65a+477yaPGNvZGU+ZGVmYXVsdDwvY29kZT4sIDxjb2RlPnNtYWxsPC9jb2RlPiwgPGNvZGU+bWluaTwvY29kZT48L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgU3Bpbm5lciBmcm9tICdrcGMvY29tcG9uZW50cy9zcGlubmVyJztcXG5cXG48ZGl2PlxcbiAgICA8U3Bpbm5lciAvPlxcbiAgICA8U3Bpbm5lciBzaXplPVxcXCJzbWFsbFxcXCIgLz5cXG4gICAgPFNwaW5uZXIgc2l6ZT1cXFwibWluaVxcXCIgLz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5rLXNwaW5uZXJcXG4gICAgbWFyZ2luLXJpZ2h0IDIwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo4NixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFNwaW5uZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc3Bpbm5lcic8L3NwYW4+O1xcblxcbiZsdDtkaXYmZ3Q7XFxuICAgICZsdDtTcGlubmVyIC8mZ3Q7XFxuICAgICZsdDtTcGlubmVyIHNpemU9XFxcInNtYWxsXFxcIiAvJmd0O1xcbiAgICAmbHQ7U3Bpbm5lciBzaXplPVxcXCJtaW5pXFxcIiAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXNwaW5uZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc3Bpbm5lci9kZW1vcy9zaXplL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3NwaW5uZXIvZGVtb3Mvc2l6ZS9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLmnIDlpKcv5bCP5YC85Y+K5q2l6ZW/XCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5tYXg8L2NvZGU+5ZKMPGNvZGU+bWluPC9jb2RlPuWPr+aMh+WumuWPluWAvOiMg+WbtO+8jDxjb2RlPnN0ZXA8L2NvZGU+5oyH5a6a5q2l6ZW/PC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFNwaW5uZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvc3Bpbm5lcic7XFxuXFxuPGRpdj5cXG4gICAgPFNwaW5uZXIgdi1tb2RlbD1cXFwidmFsdWUxXFxcIiBtYXg9e3sgMTAgfX0gbWluPXt7IDAgfX0gc3RlcD17eyAxLjIgfX0gLz5cXG4gICAgPFNwaW5uZXIgdi1tb2RlbD1cXFwidmFsdWUyXFxcIiBtYXg9e3sgMTAgfX0gbWluPXt7IC0xMCB9fSBzdGVwPXt7IDAuMSB9fSAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstc3Bpbm5lclxcbiAgICBtYXJnaW4tcmlnaHQgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjg3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gU3Bpbm5lciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9zcGlubmVyJzwvc3Bhbj47XFxuXFxuJmx0O2RpdiZndDtcXG4gICAgJmx0O1NwaW5uZXIgdi1tb2RlbD1cXFwidmFsdWUxXFxcIiBtYXg9e3sgMTAgfX0gbWluPXt7IDAgfX0gc3RlcD17eyAxLjIgfX0gLyZndDtcXG4gICAgJmx0O1NwaW5uZXIgdi1tb2RlbD1cXFwidmFsdWUyXFxcIiBtYXg9e3sgMTAgfX0gbWluPXt7IC0xMCB9fSBzdGVwPXt7IDAuMSB9fSAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXNwaW5uZXI8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLXJpZ2h0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjIwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc3Bpbm5lci9kZW1vcy9zdGVwL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBpZCA9IC4vc2l0ZS9jb21wb25lbnRzL3NwaW5uZXIvZGVtb3Mvc3RlcC9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLln7rnoYDnlKjms5VcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPjxjb2RlPlN0ZXBzPC9jb2RlPuW1jOWllzxjb2RlPlN0ZXA8L2NvZGU+5Y2z5Y+v5a6e546w5q2l6aqk5p2h77yM55SoPGNvZGU+di1tb2RlbDwvY29kZT7lj4zlkJHnu5HlrprlvZPliY3mjIflkJHlk6rkuIDmraXvvIzntKLlvJXku448Y29kZT4wPC9jb2RlPuW8gOWnizwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCB7U3RlcHMsIFN0ZXB9IGZyb20gJ2twYy9jb21wb25lbnRzL3N0ZXBzJztcXG5pbXBvcnQgQnV0dG9uIGZyb20gJ2twYy9jb21wb25lbnRzL2J1dHRvbic7XFxuXFxuPGRpdj5cXG4gICAgPFN0ZXBzIHYtbW9kZWw9XFxcImluZGV4XFxcIj5cXG4gICAgICAgIDxTdGVwIHRpdGxlPVxcXCLpgInmi6nphY3nva5cXFwiPuivt+mAieaLqeS4u+acuueahOmFjee9ruS/oeaBrzwvU3RlcD5cXG4gICAgICAgIDxTdGVwIHRpdGxlPVxcXCLpgInmi6nlvLnmgKdJUFxcXCI+6K+36YCJ5oup5Li75py65by55oCnSVDnmoTphY3nva7kv6Hmga88L1N0ZXA+XFxuICAgICAgICA8U3RlcCB0aXRsZT1cXFwi6K6+572uVlBDXFxcIiAvPlxcbiAgICA8L1N0ZXBzPlxcbiAgICA8QnV0dG9uIHR5cGU9XFxcInByaW1hcnlcXFwiIGV2LWNsaWNrPXt7IHNlbGYubmV4dCB9fVxcbiAgICAgICAgZGlzYWJsZWQ9e3sgc2VsZi5nZXQoJ2luZGV4JykgPT09IDIgfX1cXG4gICAgPk5leHQgU3RlcDwvQnV0dG9uPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstYnRuXFxuICAgIG1hcmdpbi10b3AgMjBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgcmV0dXJuIHtcXG4gICAgICAgICAgICBpbmRleDogMFxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIG5leHQoKSB7XFxuICAgICAgICB0aGlzLnNldCgnaW5kZXgnLCB0aGlzLmdldCgnaW5kZXgnKSArIDEpO1xcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjg5LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4ge1N0ZXBzLCBTdGVwfSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy9zdGVwcyc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gQnV0dG9uIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL2J1dHRvbic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+di1tb2RlbDwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwiaW5kZXhcXFwiPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50aXRsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwi6YCJ5oup6YWN572uXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuivt+mAieaLqeS4u+acuueahOmFjee9ruS/oeaBrzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50aXRsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwi6YCJ5oup5by55oCnSVBcXFwiPC9zcGFuPiZndDs8L3NwYW4+6K+36YCJ5oup5Li75py65by55oCnSVDnmoTphY3nva7kv6Hmga88c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U3RlcDwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U3RlcDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dGl0bGU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIuiuvue9rlZQQ1xcXCI8L3NwYW4+IC8mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U3RlcHM8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+QnV0dG9uPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50eXBlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCJwcmltYXJ5XFxcIjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZXYtY2xpY2s8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3s8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnNlbGYubmV4dDwvc3Bhbj4gfX1cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRpc2FibGVkPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLmdldDwvc3Bhbj4oJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmluZGV4PC9zcGFuPicpID09PSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPjI8L3NwYW4+IH19XFxuICAgICZndDs8L3NwYW4+TmV4dCBTdGVwPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPkJ1dHRvbjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstYnRuPC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi10b3A8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MjBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4ge1xcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmluZGV4PC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4wPC9zcGFuPlxcbiAgICAgICAgfVxcbiAgICB9XFxuXFxuICAgIG5leHQoKSB7XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj50aGlzPC9zcGFuPi5zZXQoPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW5kZXgnPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dGhpczwvc3Bhbj4uZ2V0KDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2luZGV4Jzwvc3Bhbj4pICsgPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xPC9zcGFuPik7XFxuICAgIH1cXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc3RlcHMvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc3RlcHMvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6ZSZ6K+v54q25oCBXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7mjIflrpo8Y29kZT5TdGVwczwvY29kZT7nmoQ8Y29kZT5zdGF0dXM8L2NvZGU+5bGe5oCn5Li6PGNvZGU+ZXJyb3I8L2NvZGU+77yM5Y2z5Y+v5bCG5q2l6aqk5p2h572u5Li66ZSZ6K+v54q25oCBPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IHtTdGVwcywgU3RlcH0gZnJvbSAna3BjL2NvbXBvbmVudHMvc3RlcHMnO1xcblxcbjxTdGVwcyB2YWx1ZT1cXFwiMVxcXCIgc3RhdHVzPVxcXCJlcnJvclxcXCI+XFxuICAgIDxTdGVwIHRpdGxlPVxcXCLpgInmi6nphY3nva5cXFwiPuivt+mAieaLqeS4u+acuueahOmFjee9ruS/oeaBrzwvU3RlcD5cXG4gICAgPFN0ZXAgdGl0bGU9XFxcIumAieaLqeW8ueaAp0lQXFxcIj7or7fpgInmi6nkuLvmnLrlvLnmgKdJUOeahOmFjee9ruS/oeaBrzwvU3RlcD5cXG4gICAgPFN0ZXAgdGl0bGU9XFxcIuiuvue9rlZQQ1xcXCIgLz5cXG48L1N0ZXBzPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo5MCxcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHtTdGVwcywgU3RlcH0gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvc3RlcHMnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dmFsdWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcIjFcXFwiPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zdGF0dXM8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+XFxcImVycm9yXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50aXRsZTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj5cXFwi6YCJ5oup6YWN572uXFxcIjwvc3Bhbj4mZ3Q7PC9zcGFuPuivt+mAieaLqeS4u+acuueahOmFjee9ruS/oeaBrzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlN0ZXA8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRpdGxlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCLpgInmi6nlvLnmgKdJUFxcXCI8L3NwYW4+Jmd0Ozwvc3Bhbj7or7fpgInmi6nkuLvmnLrlvLnmgKdJUOeahOmFjee9ruS/oeaBrzxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5TdGVwPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlN0ZXA8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRpdGxlPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPlxcXCLorr7nva5WUENcXFwiPC9zcGFuPiAvJmd0Ozwvc3Bhbj5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+U3RlcHM8L3NwYW4+Jmd0Ozwvc3Bhbj48L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvc3RlcHMvZGVtb3MvZXJyb3IvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvc3RlcHMvZGVtb3MvZXJyb3IvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5Z+65pys55So5rOVXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7kuIrpnaLmmK/kuIDkuKrnroDljZXnmoRUYWJsZTwvcD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBUYWJsZSBmcm9tICdrcGMvY29tcG9uZW50cy90YWJsZSc7XFxudmFyIHNjaGVtZSA9IHthOiAn6KGo5aS0MScsIGI6ICfooajlpLQyJ307XFxudmFyIGRhdGEgPSBbe2E6ICfnrKzkuIDooYwnLCBiOiAn5ZOI5ZOIMid9LCB7YTogJ+esrOS6jOihjCcsIGI6ICflk4jlk4gyJ31dO1xcblxcbjxkaXY+XFxuICAgIDxUYWJsZSBzY2hlbWU9e3tzY2hlbWV9fSBkYXRhPXt7ZGF0YX19Lz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5cXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBleHRlbmRzIEludGFjdCB7XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59XCJ9XSxcImluZGV4XCI6OTIsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBUYWJsZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy90YWJsZSc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnZhcjwvc3Bhbj4gc2NoZW1lID0gezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifooajlpLQxJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmI8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifooajlpLQyJzwvc3Bhbj59O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnZhcjwvc3Bhbj4gZGF0YSA9IFt7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+esrOS4gOihjCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5iPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5ZOI5ZOIMic8L3NwYW4+fSwgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifnrKzkuozooYwnPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Yjwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+WTiOWTiDInPC9zcGFuPn1dO1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5UYWJsZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2NoZW1lPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7c2NoZW1lfX08L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRhdGE8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3tkYXRhfX0vPC9zcGFuPiZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9iYXNpYy9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsIm1vZHVsZS5leHBvcnRzID0ge1wic2V0dGluZ1wiOntcInRpdGxlXCI6XCLpgInmi6nmoYbnmoTnsbvlnotcIixcIm9yZGVyXCI6MH0sXCJjYXRhbG9nc1wiOltdLFwiY29udGVudHNcIjpcIjxwPuWPr+agueaNrjxjb2RlPmNoZWNrVHlwZTwvY29kZT7orr7nva7pgInmi6nmoYbnmoTnsbvlnovvvJo8Y29kZT5jaGVja2JveDwvY29kZT7lpJrpgInmoYYo6buY6K6kKS88Y29kZT5yYWRpbzwvY29kZT7ljZXpgInmoYYvPGNvZGU+bm9uZTwvY29kZT7ml6DpgInmoYY8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgVGFibGUgZnJvbSAna3BjL2NvbXBvbmVudHMvdGFibGUnO1xcbnZhciBzY2hlbWUgPSB7YTogJ+ihqOWktCd9O1xcbnZhciBkYXRhMSA9IFt7YTogJ+WkmumAieahhid9XTtcXG52YXIgZGF0YTIgPSBbe2E6ICfljZXpgInmoYYnfV07XFxudmFyIGRhdGEzID0gW3thOiAn5peg6YCJ5qGGJ31dO1xcblxcbjxkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnPlxcbiAgICA8VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGExfX0gLz5cXG4gICAgPFRhYmxlIHNjaGVtZT17e3NjaGVtZX19IGRhdGE9e3tkYXRhMn19IGNoZWNrVHlwZT0ncmFkaW8nLz5cXG4gICAgPFRhYmxlIHNjaGVtZT17e3NjaGVtZX19IGRhdGE9e3tkYXRhM319IGNoZWNrVHlwZT0nbm9uZScvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLm5vLWRhdGEtdGVtcGxhdGVcXG4gICBkaXNwbGF5OiBmbGV4XFxuICAgLmstdGFibGUtd3JhcHBlclxcbiAgICAgICBtYXJnaW4tbGVmdDogMTBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjk0LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gVGFibGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvdGFibGUnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj52YXI8L3NwYW4+IHNjaGVtZSA9IHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n6KGo5aS0Jzwvc3Bhbj59O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnZhcjwvc3Bhbj4gZGF0YTEgPSBbezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPiflpJrpgInmoYYnPC9zcGFuPn1dO1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnZhcjwvc3Bhbj4gZGF0YTIgPSBbezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifljZXpgInmoYYnPC9zcGFuPn1dO1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnZhcjwvc3Bhbj4gZGF0YTMgPSBbezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifml6DpgInmoYYnPC9zcGFuPn1dO1xcblxcbiZsdDtkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGExfX0gLyZndDtcXG4gICAgJmx0O1RhYmxlIHNjaGVtZT17e3NjaGVtZX19IGRhdGE9e3tkYXRhMn19IGNoZWNrVHlwZT0ncmFkaW8nLyZndDtcXG4gICAgJmx0O1RhYmxlIHNjaGVtZT17e3NjaGVtZX19IGRhdGE9e3tkYXRhM319IGNoZWNrVHlwZT0nbm9uZScvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5uby1kYXRhLXRlbXBsYXRlPC9zcGFuPlxcbiAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+ZGlzcGxheTwvc3Bhbj46IGZsZXhcXG4gICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstdGFibGUtd3JhcHBlcjwvc3Bhbj5cXG4gICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tbGVmdDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9jaGVja1R5cGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3MvY2hlY2tUeXBlL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuihjOmAieS4rVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHVsPlxcbjxsaT48Y29kZT5yb3dLZXk8L2NvZGU+77ya6K6+572u6KGM55qEPGNvZGU+a2V5PC9jb2RlPuWAvO+8iOm7mOiupO+8muihjOeahDxjb2RlPmluZGV4PC9jb2RlPu+8iTwvbGk+XFxuPGxpPjxjb2RlPmNoZWNrZWRLZXk8L2NvZGU+77ya6K6+572uL+iOt+WPluihqOagvOiiq+mAieS4reeahOihjOS/oeaBr++8iOmSiOWvuTxjb2RlPnJhZGlvPC9jb2RlPu+8iTwvbGk+XFxuPGxpPjxjb2RlPmNoZWNrZWRLZXlzPC9jb2RlPu+8muiuvue9ri/ojrflj5booajmoLzooqvpgInkuK3nmoTooYzkv6Hmga/vvIjpkojlr7k8Y29kZT5jaGVja2JveDwvY29kZT7vvIk8L2xpPlxcbjwvdWw+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgVGFibGUgZnJvbSAna3BjL2NvbXBvbmVudHMvdGFibGUnO1xcbnZhciBkYXRhMSA9IFt7YTogJ+mAieS4rSd9LCB7YTogJ+S4jemAieS4rSd9XTtcXG52YXIgZGF0YTIgPSBbe2E6ICfpgInkuK0nfV07XFxuXFxuPGRpdiBjbGFzcz0nbm8tZGF0YS10ZW1wbGF0ZSc+XFxuICAgIDxUYWJsZSBzY2hlbWU9e3sge2E6ICdyYWRpbyd9IH19IGRhdGE9e3tkYXRhMX19IGNoZWNrZWRLZXk9e3sxfX0vPlxcbiAgICA8VGFibGUgc2NoZW1lPXt7IHthOiAnY2hlY2tib3gnfSB9fSBkYXRhPXt7ZGF0YTJ9fSAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLm5vLWRhdGEtdGVtcGxhdGVcXG4gICBkaXNwbGF5OiBmbGV4XFxuICAgLmstdGFibGUtd3JhcHBlclxcbiAgICAgICBtYXJnaW4tbGVmdDogMTBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjkzLFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gVGFibGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvdGFibGUnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj52YXI8L3NwYW4+IGRhdGExID0gW3s8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n6YCJ5LitJzwvc3Bhbj59LCB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+S4jemAieS4rSc8L3NwYW4+fV07XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiBkYXRhMiA9IFt7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+mAieS4rSc8L3NwYW4+fV07XFxuXFxuJmx0O2RpdiBjbGFzcz0nbm8tZGF0YS10ZW1wbGF0ZScmZ3Q7XFxuICAgICZsdDtUYWJsZSBzY2hlbWU9e3sge2E6ICdyYWRpbyd9IH19IGRhdGE9e3tkYXRhMX19IGNoZWNrZWRLZXk9e3sxfX0vJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7IHthOiAnY2hlY2tib3gnfSB9fSBkYXRhPXt7ZGF0YTJ9fSAvJmd0O1xcbiZsdDsvZGl2Jmd0OzwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5uby1kYXRhLXRlbXBsYXRlPC9zcGFuPlxcbiAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+ZGlzcGxheTwvc3Bhbj46IGZsZXhcXG4gICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+LmstdGFibGUtd3JhcHBlcjwvc3Bhbj5cXG4gICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5tYXJnaW4tbGVmdDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MTBweDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9jaGVja2VkS2V5X3MvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3MvY2hlY2tlZEtleV9zL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuihqOWktOWbuuWumlwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+5Y+v5qC55o2uPGNvZGU+Zml4SGVhZGVyPC9jb2RlPuiuvue9ruihqOWktOWbuuWumu+8mjxjb2RlPmZhbHNlPC9jb2RlPijpu5jorqQpPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFRhYmxlIGZyb20gJ2twYy9jb21wb25lbnRzL3RhYmxlJztcXG52YXIgZGF0YTEgPSBbe2E6ICdmYWxzZSjpu5jorqQpJ31dO1xcbnZhciBkYXRhMiA9IFt7YTogJ+ihqOWktOWbuuWumuS9huaYr+ayoeaciea7muWKqOadoe+8jOWxleekuuS4jeWHuuaViOaenCd9XTtcXG52YXIgZGF0YTMgPSBbe2E6ICfooajlpLTlm7rlrprllaYnfSwge2E6ICfkuIvmi4knfSwge2E6ICd5ZWFoISd9XTtcXG5cXG48ZGl2IGNsYXNzPSduby1kYXRhLXRlbXBsYXRlJz5cXG4gICAgPFRhYmxlIHNjaGVtZT17eyB7YTogJ2ZhbHNlJ30gfX0gZGF0YT17e2RhdGExfX0gLz5cXG4gICAgPFRhYmxlIHNjaGVtZT17eyB7YTogJ3RydWUnfSB9fSBkYXRhPXt7ZGF0YTJ9fSBmaXhIZWFkZXI9e3t0cnVlfX0gLz5cXG4gICAgPFRhYmxlIHNjaGVtZT17eyB7YTogJzEwMHB4JyB9IH19IGRhdGE9e3tkYXRhM319IGZpeEhlYWRlcj0nMTAwJyAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLm5vLWRhdGEtdGVtcGxhdGVcXG4gICBkaXNwbGF5OiBmbGV4XFxuICAgLmstdGFibGUtd3JhcHBlclxcbiAgICAgICBtYXJnaW4tbGVmdDogMTBweFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjk1LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gVGFibGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvdGFibGUnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj52YXI8L3NwYW4+IGRhdGExID0gW3s8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nZmFsc2Uo6buY6K6kKSc8L3NwYW4+fV07XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiBkYXRhMiA9IFt7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+ihqOWktOWbuuWumuS9huaYr+ayoeaciea7muWKqOadoe+8jOWxleekuuS4jeWHuuaViOaenCc8L3NwYW4+fV07XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiBkYXRhMyA9IFt7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+ihqOWktOWbuuWumuWVpic8L3NwYW4+fSwgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifkuIvmi4knPC9zcGFuPn0sIHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5hPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4neWVhaCEnPC9zcGFuPn1dO1xcblxcbiZsdDtkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7IHthOiAnZmFsc2UnfSB9fSBkYXRhPXt7ZGF0YTF9fSAvJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7IHthOiAndHJ1ZSd9IH19IGRhdGE9e3tkYXRhMn19IGZpeEhlYWRlcj17e3RydWV9fSAvJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7IHthOiAnMTAwcHgnIH0gfX0gZGF0YT17e2RhdGEzfX0gZml4SGVhZGVyPScxMDAnIC8mZ3Q7XFxuJmx0Oy9kaXYmZ3Q7PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBzdHlsXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1zZWxlY3Rvci1jbGFzc1xcXCI+Lm5vLWRhdGEtdGVtcGxhdGU8L3NwYW4+XFxuICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0cmlidXRlXFxcIj5kaXNwbGF5PC9zcGFuPjogZmxleFxcbiAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay10YWJsZS13cmFwcGVyPC9zcGFuPlxcbiAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPm1hcmdpbi1sZWZ0PC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMHB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufTwvY29kZT48L3ByZT5cIn1dfVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc2l0ZS9jb21wb25lbnRzL3RhYmxlL2RlbW9zL2ZpeEhlYWRlci9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9maXhIZWFkZXIvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5a6a5LmJ5peg5YaF5a655pe255qE5bGV56S65L+h5oGvXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7lvZNkYXRh5Li6PGNvZGU+W108L2NvZGU+5pe2LCDlj6/orr7nva48Y29kZT5ub0RhdGFUZW1wbGF0ZTwvY29kZT7mnaXlsZXnpLrkvaDmg7PlsZXnpLrnmoTkv6Hmga/vvIjpu5jorqTkuLrvvJogLyjjhJJv44SSKS9+fiDmsqHmnInmib7liLDkurLopoHnmoTmlbDmja7lk6Z+77yJPC9wPlxcblwiLFwiY29kZXNcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiaW1wb3J0IFRhYmxlIGZyb20gJ2twYy9jb21wb25lbnRzL3RhYmxlJztcXG52YXIgc2NoZW1lID0ge2E6ICfooajlpLQxJywgYjogJ+ihqOWktDInfTtcXG52YXIgZGF0YSA9IFtdO1xcbnZhciB0aXAgPSAn6L+Z6YeM5rKh5pyJ5pWw5o2uKOiHquWumuS5ieeJiOacrCknO1xcbjxkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnPlxcbiAgICA8VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGF9fSAvPlxcbiAgICA8VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGF9fSBub0RhdGFUZW1wbGF0ZT17e3RpcH19Lz5cXG48L2Rpdj5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIi5uby1kYXRhLXRlbXBsYXRlXFxuICAgZGlzcGxheTogZmxleFxcbiAgIC5rLXRhYmxlLXdyYXBwZXJcXG4gICAgICAgbWFyZ2luLWxlZnQ6IDEwcHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn1cIn1dLFwiaW5kZXhcIjo5NixcImhpZ2hsaWdodGVkXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganN4XFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IFRhYmxlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2twYy9jb21wb25lbnRzL3RhYmxlJzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiBzY2hlbWUgPSB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+ihqOWktDEnPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Yjwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+ihqOWktDInPC9zcGFuPn07XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiBkYXRhID0gW107XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+dmFyPC9zcGFuPiB0aXAgPSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifov5nph4zmsqHmnInmlbDmja4o6Ieq5a6a5LmJ54mI5pysKSc8L3NwYW4+O1xcbiZsdDtkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGF9fSAvJmd0O1xcbiAgICAmbHQ7VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGF9fSBub0RhdGFUZW1wbGF0ZT17e3RpcH19LyZndDtcXG4mbHQ7L2RpdiZndDs8L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4ubm8tZGF0YS10ZW1wbGF0ZTwvc3Bhbj5cXG4gICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmRpc3BsYXk8L3NwYW4+OiBmbGV4XFxuICAgPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXRhYmxlLXdyYXBwZXI8L3NwYW4+XFxuICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLWxlZnQ8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjEwcHg8L3NwYW4+PC9jb2RlPjwvcHJlPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMganNcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gSW50YWN0IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2ludGFjdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gdGVtcGxhdGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC52ZHQnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXguc3R5bCc8L3NwYW4+OyBcXG5cXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHBvcnQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmRlZmF1bHQ8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWNsYXNzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5jbGFzczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXh0ZW5kczwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGl0bGVcXFwiPkludGFjdDwvc3Bhbj4gPC9zcGFuPntcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnN0YXRpYzwvc3Bhbj4gdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3Mvbm9EYXRhVGVtcGxhdGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3Mvbm9EYXRhVGVtcGxhdGUvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi5a6a5LmJ6KGo5aS05L+h5oGvXCIsXCJvcmRlclwiOjB9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD48Y29kZT5zY2hlbWU8L2NvZGU+5a+56LGhPGNvZGU+e2tleTogdmFsdWV9PC9jb2RlPuivtOaYjjo8L3A+XFxuPHVsPlxcbjxsaT48Y29kZT5rZXkte1N0cmluZ308L2NvZGU+OiDmoLnmja7mr4/kuIDooYznmoQ8Y29kZT5pdGVtPC9jb2RlPu+8jOiOt+WPljxjb2RlPmtleTwvY29kZT7lsZ7mgKfvvJvoi6U8Y29kZT5rZXk8L2NvZGU+5Li65LiA5Liq6L+e57ut6I635Y+W55qE5a2X56ym77yI5Y2z77yaPGNvZGU+aXRlbS5jLmMxPC9jb2RlPu+8ieS8mumAkOe6p+iOt+WPlu+8jOiLpeayoeiOt+WPluWIsO+8jOWImeS4ujxjb2RlPnVuZGVmaW5lZDwvY29kZT7jgII8L2xpPlxcbjxsaT48Y29kZT5rZXkte09iamVjdH08L2NvZGU+OiA8Y29kZT5rZXk8L2NvZGU+5Y+q5L2c5Li66L+Z5Liq6KGo5aS055qEPGNvZGU+SUQ8L2NvZGU+77yM5a6e6ZmF6I635Y+W55qE5YC85Li6PGNvZGU+e09iamVjdH08L2NvZGU+5YaFPGNvZGU+dGVtcGxhdGU8L2NvZGU+55qE6L+U5Zue5YC844CCPGNvZGU+e09iamVjdH08L2NvZGU+5YaF55qEPGNvZGU+dGl0bGU8L2NvZGU+5Li66KaB5bGV56S655qE6KGo5aS05L+h5oGv77yMPGNvZGU+dGVtcGxhdGU8L2NvZGU+5pa55rOV6L+U5Zue6L+Z5YiX6KaB5bGV56S655qE5pWw5o2u77yI5Y+C5pWw5o6l5pS277ya5q+P5LiA6KGM55qEPGNvZGU+aXRlbTwvY29kZT7vvInjgII8L2xpPlxcbjxsaT5QU++8mjxjb2RlPnRlbXBsYXRlPC9jb2RlPuWPr+S7pei/lOWbnuS4gOS4quWFt+S9k+eahOWAvO+8jOS5n+WPr+S7pei/lOWbnuS4gOS4quiZmuaLn0RPTeOAgjwvbGk+XFxuPC91bD5cXG5cIixcImNvZGVzXCI6W3tcImxhbmd1YWdlXCI6XCJ2ZHRcIixcImNvbnRlbnRcIjpcImltcG9ydCBUYWJsZSBmcm9tICdrcGMvY29tcG9uZW50cy90YWJsZSc7XFxudmFyIGRhdGEgPSBbe2E6ICfomZrmi59ET00nLCBiOiAn6I635Y+W5Yiw5LqGaXRlbS5iJywgYzoge2MxOiAnaXRlbS5jLmMxJ30sIGU6ICflgLzlvaLlvI8nfV07XFxudmFyIHNjaGVtZSA9IHtcXG4gICAgYToge1xcbiAgICAgICAgdGl0bGU6ICdh5Y+q5piv5LiqaWQnLFxcbiAgICAgICAgdGVtcGxhdGU6IGZ1bmN0aW9uKGl0ZW0pIHtcXG4gICAgICAgICAgIHJldHVybiA8YT57e2l0ZW0uYX19PC9hPlxcbiAgICAgICAgfVxcbiAgICB9LFxcbiAgICBlOiB7XFxuICAgICAgICB0aXRsZTogJ2XkuZ/lj6rmmK/kuKppZCcsXFxuICAgICAgICB0ZW1wbGF0ZTogZnVuY3Rpb24oaXRlbSkge1xcbiAgICAgICAgICAgcmV0dXJuIGl0ZW0uZTtcXG4gICAgICAgIH1cXG4gICAgfSxcXG4gICAgYjogJ2tleS17U3RyaW5nfeW9ouW8jycsXFxuICAgICdjLmMxJzogJ2tleeS4uuS4gOS4qui/nue7reiOt+WPlueahOWtl+espuS4sicsXFxuICAgICdkLmQxJzogJ+ayoeaciei/meS4qmtleSdcXG59O1xcblxcblxcbjxkaXYgY2xhc3M9J25vLWRhdGEtdGVtcGxhdGUnPlxcbiAgICA8VGFibGUgc2NoZW1lPXt7c2NoZW1lfX0gZGF0YT17e2RhdGF9fSAvPlxcbjwvZGl2PlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLm5vLWRhdGEtdGVtcGxhdGVcXG4gICBkaXNwbGF5OiBmbGV4XFxuICAgLmstdGFibGUtd3JhcHBlclxcbiAgICAgICBtYXJnaW4tbGVmdDogMTBweFxcbiAgICAgICAuay1maXhlZFxcbiAgICAgICAgICAgcGFkZGluZzogMFwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcbmltcG9ydCAnLi9pbmRleC5zdHlsJzsgXFxuXFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZXh0ZW5kcyBJbnRhY3Qge1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgc3RhdGljIHRlbXBsYXRlID0gdGVtcGxhdGU7XFxufVwifV0sXCJpbmRleFwiOjk3LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gVGFibGUgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvdGFibGUnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj52YXI8L3NwYW4+IGRhdGEgPSBbezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmE8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifomZrmi59ET00nPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Yjwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+iOt+WPluWIsOS6hml0ZW0uYic8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5jPC9zcGFuPjogezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmMxPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naXRlbS5jLmMxJzwvc3Bhbj59LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5lPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5YC85b2i5byPJzwvc3Bhbj59XTtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj52YXI8L3NwYW4+IHNjaGVtZSA9IHtcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+YTwvc3Bhbj46IHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRpdGxlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nYeWPquaYr+S4qmlkJzwvc3Bhbj4sXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50ZW1wbGF0ZTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLWZ1bmN0aW9uXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mdW5jdGlvbjwvc3Bhbj4oPHNwYW4gY2xhc3M9XFxcImhsanMtcGFyYW1zXFxcIj5pdGVtPC9zcGFuPikgPC9zcGFuPntcXG4gICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcInhtbFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YTwvc3Bhbj4mZ3Q7PC9zcGFuPnt7aXRlbS5hfX08c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDsvPHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+YTwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj5cXG4gICAgICAgIH1cXG4gICAgfSxcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZTwvc3Bhbj46IHtcXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPnRpdGxlPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nZeS5n+WPquaYr+S4qmlkJzwvc3Bhbj4sXFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj50ZW1wbGF0ZTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLWZ1bmN0aW9uXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mdW5jdGlvbjwvc3Bhbj4oPHNwYW4gY2xhc3M9XFxcImhsanMtcGFyYW1zXFxcIj5pdGVtPC9zcGFuPikgPC9zcGFuPntcXG4gICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPnJldHVybjwvc3Bhbj4gaXRlbS5lO1xcbiAgICAgICAgfVxcbiAgICB9LFxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5iPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na2V5LXtTdHJpbmd95b2i5byPJzwvc3Bhbj4sXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2MuYzEnPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na2V55Li65LiA5Liq6L+e57ut6I635Y+W55qE5a2X56ym5LiyJzwvc3Bhbj4sXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J2QuZDEnPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5rKh5pyJ6L+Z5Liqa2V5Jzwvc3Bhbj5cXG59O1xcblxcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+Y2xhc3M8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J25vLWRhdGEtdGVtcGxhdGUnPC9zcGFuPiZndDs8L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlRhYmxlPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zY2hlbWU8L3NwYW4+PTxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+e3tzY2hlbWV9fTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0YTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57e2RhdGF9fTwvc3Bhbj4gLyZndDs8L3NwYW4+XFxuPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPjwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJzdHlsXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIHN0eWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4ubm8tZGF0YS10ZW1wbGF0ZTwvc3Bhbj5cXG4gICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmRpc3BsYXk8L3NwYW4+OiBmbGV4XFxuICAgPHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLXRhYmxlLXdyYXBwZXI8L3NwYW4+XFxuICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luLWxlZnQ8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjEwcHg8L3NwYW4+XFxuICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLWNsYXNzXFxcIj4uay1maXhlZDwvc3Bhbj5cXG4gICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+cGFkZGluZzwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLW51bWJlclxcXCI+MDwvc3Bhbj48L2NvZGU+PC9wcmU+XCJ9LHtcImxhbmd1YWdlXCI6XCJqc1wiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBJbnRhY3QgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4naW50YWN0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiB0ZW1wbGF0ZSA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnZkdCc8L3NwYW4+O1xcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nLi9pbmRleC5zdHlsJzwvc3Bhbj47IFxcblxcbjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4cG9ydDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZGVmYXVsdDwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtY2xhc3NcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmNsYXNzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5leHRlbmRzPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy10aXRsZVxcXCI+SW50YWN0PC9zcGFuPiA8L3NwYW4+e1xcbiAgICBASW50YWN0LnRlbXBsYXRlKClcXG4gICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+c3RhdGljPC9zcGFuPiB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy90YWJsZS9kZW1vcy9zY2hlbWUvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvdGFibGUvZGVtb3Mvc2NoZW1lL2luZGV4Lmpzb25cbi8vIG1vZHVsZSBjaHVua3MgPSAyIiwibW9kdWxlLmV4cG9ydHMgPSB7XCJzZXR0aW5nXCI6e1widGl0bGVcIjpcIuWfuuacrOeUqOazlVwiLFwib3JkZXJcIjowfSxcImNhdGFsb2dzXCI6W10sXCJjb250ZW50c1wiOlwiPHA+56m/5qKt5qGG5Z+65pys55So5rOV77yM5pSv5oyBU2hpZnTov5vooYzlpJrpgIk8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgVHJhbnNmZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvdHJhbnNmZXInO1xcblxcbjxUcmFuc2ZlciBkYXRhPXt7IHNlbGYuZ2V0KCdkYXRhJykgfX0vPlwifSx7XCJsYW5ndWFnZVwiOlwianNcIixcImNvbnRlbnRcIjpcImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcXG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnLi9pbmRleC52ZHQnO1xcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgZGF0YTogW1xcbiAgICAgICAgICAgICAgICB7bGFiZWw6ICfkuLvmnLrlkI0wJ30sXFxuICAgICAgICAgICAgICAgIHtsYWJlbDogJ+S4u+acuuWQjTEnfSxcXG4gICAgICAgICAgICAgICAge2xhYmVsOiAn5Li75py65ZCNMid9LFxcbiAgICAgICAgICAgICAgICB7bGFiZWw6ICfkuLvmnLrlkI0zJywgZGlzYWJsZWQ6IHRydWV9LFxcbiAgICAgICAgICAgICAgICB7bGFiZWw6ICfkuLvmnLrlkI00J30sXFxuICAgICAgICAgICAgXVxcbiAgICAgICAgfVxcbiAgICB9XFxufVwifV0sXCJpbmRleFwiOjk5LFwiaGlnaGxpZ2h0ZWRcIjpbe1wibGFuZ3VhZ2VcIjpcInZkdFwiLFwiY29udGVudFwiOlwiPHByZT48Y29kZSBjbGFzcz1cXFwiaGxqcyBqc3hcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmltcG9ydDwvc3Bhbj4gVHJhbnNmZXIgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZnJvbTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4na3BjL2NvbXBvbmVudHMvdHJhbnNmZXInPC9zcGFuPjtcXG5cXG48c3BhbiBjbGFzcz1cXFwieG1sXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy10YWdcXFwiPiZsdDs8c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5UcmFuc2Zlcjwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0YTwvc3Bhbj49PHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj57ezwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+c2VsZi5nZXQ8L3NwYW4+KCc8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kYXRhPC9zcGFuPicpIH19LyZndDs8L3NwYW4+PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0YTwvc3Bhbj46IFtcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNMCc8L3NwYW4+fSxcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNMSc8L3NwYW4+fSxcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNMic8L3NwYW4+fSxcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNMyc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kaXNhYmxlZDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLWxpdGVyYWxcXFwiPnRydWU8L3NwYW4+fSxcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNNCc8L3NwYW4+fSxcXG4gICAgICAgICAgICBdXFxuICAgICAgICB9XFxuICAgIH1cXG59PC9jb2RlPjwvcHJlPlwifV19XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zaXRlL2NvbXBvbmVudHMvdHJhbnNmZXIvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGlkID0gLi9zaXRlL2NvbXBvbmVudHMvdHJhbnNmZXIvZGVtb3MvYmFzaWMvaW5kZXguanNvblxuLy8gbW9kdWxlIGNodW5rcyA9IDIiLCJtb2R1bGUuZXhwb3J0cyA9IHtcInNldHRpbmdcIjp7XCJ0aXRsZVwiOlwi6Ieq5a6a5LmJ5riy5p+T5YiX6KGoXCIsXCJvcmRlclwiOjF9LFwiY2F0YWxvZ3NcIjpbXSxcImNvbnRlbnRzXCI6XCI8cD7pgJrov4c8Y29kZT5sYWJlbDwvY29kZT7lsZ7mgKfvvIzlj6/ku6Xoh6rlrprkuYnliJfooajmuLLmn5PpgLvovpHjgILmraTml7blpoLmnpzkvaDpnIDopoHlkK/liqjliJfooajov4fmu6Tlip/og708Y29kZT5maWx0ZXJhYmxlPC9jb2RlPu+8jOmcgOimgemAmui/hzxjb2RlPmZpbHRlcjwvY29kZT7lsZ7mgKfvvIzmjIflrproh6rlrprkuYnov4fmu6Tlh73mlbDjgII8L3A+XFxuXCIsXCJjb2Rlc1wiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCJpbXBvcnQgVHJhbnNmZXIgZnJvbSAna3BjL2NvbXBvbmVudHMvdHJhbnNmZXInO1xcblxcbjxUcmFuc2ZlciBkYXRhPXt7IHNlbGYuZ2V0KCdkYXRhJykgfX0gXFxuICAgIGxhYmVsPXt7IChkYXRhLCBpbmRleCwgdHlwZSkgPT4ge1xcbiAgICAgICAgcmV0dXJuIDxkaXY+XFxuICAgICAgICAgICAgPGRpdj57eyBkYXRhLm5hbWUgfX08L2Rpdj5cXG4gICAgICAgICAgICA8cD57eyBkYXRhLmRlc2MgfX0gfCB7eyBkYXRhLmlwIH19PC9wPlxcbiAgICAgICAgPC9kaXY+XFxuICAgIH0gfX1cXG4gICAgZmlsdGVyPXt7IChkYXRhLCBrZXl3b3JkcykgPT4ge1xcbiAgICAgICAgcmV0dXJuIGRhdGEubmFtZS5pbmNsdWRlcyhrZXl3b3JkcykgfHwgXFxuICAgICAgICAgICAgZGF0YS5kZXNjLmluY2x1ZGVzKGtleXdvcmRzKSB8fFxcbiAgICAgICAgICAgIGRhdGEuaXAuaW5jbHVkZXMoa2V5d29yZHMpO1xcbiAgICB9IH19XFxuICAgIGZpbHRlcmFibGVcXG4vPlwifSx7XCJsYW5ndWFnZVwiOlwic3R5bFwiLFwiY29udGVudFwiOlwiLmstaXRlbVxcbiAgICBwXFxuICAgICAgICBtYXJnaW4gMFxcbiAgICAgICAgZm9udC1zaXplIDEycHhcIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCJpbXBvcnQgSW50YWN0IGZyb20gJ2ludGFjdCc7XFxuaW1wb3J0IHRlbXBsYXRlIGZyb20gJy4vaW5kZXgudmR0JztcXG5pbXBvcnQgJy4vaW5kZXguc3R5bCc7IFxcblxcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcXG4gICAgQEludGFjdC50ZW1wbGF0ZSgpXFxuICAgIHN0YXRpYyB0ZW1wbGF0ZSA9IHRlbXBsYXRlO1xcblxcbiAgICBkZWZhdWx0cygpIHtcXG4gICAgICAgIHJldHVybiB7XFxuICAgICAgICAgICAgZGF0YTogW1xcbiAgICAgICAgICAgICAgICB7bmFtZTogJ+S4u+acuuWQjTAnLCBkZXNjOiAn5YmN56uv5pyN5Yqh5ZmoMCcsIGlwOiAnMTkyLjE2OC4xLjAnfSxcXG4gICAgICAgICAgICAgICAge25hbWU6ICfkuLvmnLrlkI0xJywgZGVzYzogJ+WJjeerr+acjeWKoeWZqDEnLCBpcDogJzE5Mi4xNjguMS4xJ30sXFxuICAgICAgICAgICAgICAgIHtuYW1lOiAn5Li75py65ZCNMicsIGRlc2M6ICfliY3nq6/mnI3liqHlmagyJywgaXA6ICcxOTIuMTY4LjEuMid9LFxcbiAgICAgICAgICAgICAgICB7bmFtZTogJ+S4u+acuuWQjTMnLCBkZXNjOiAn5YmN56uv5pyN5Yqh5ZmoMycsIGlwOiAnMTkyLjE2OC4xLjMnLCBkaXNhYmxlZDogdHJ1ZX0sXFxuICAgICAgICAgICAgICAgIHtuYW1lOiAn5Li75py65ZCNNCcsIGRlc2M6ICfliY3nq6/mnI3liqHlmag0JywgaXA6ICcxOTIuMTY4LjEuNCd9LFxcbiAgICAgICAgICAgIF1cXG4gICAgICAgIH1cXG4gICAgfVxcbn1cIn1dLFwiaW5kZXhcIjoxMDAsXCJoaWdobGlnaHRlZFwiOlt7XCJsYW5ndWFnZVwiOlwidmR0XCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzeFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiBUcmFuc2ZlciA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidrcGMvY29tcG9uZW50cy90cmFuc2Zlcic8L3NwYW4+O1xcblxcbjxzcGFuIGNsYXNzPVxcXCJ4bWxcXFwiPjxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPlRyYW5zZmVyPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kYXRhPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5zZWxmLmdldDwvc3Bhbj4oJzxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRhdGE8L3NwYW4+JykgfX0gXFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmxhYmVsPC9zcGFuPj08c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPnt7PC9zcGFuPiAoPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0YTwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmluZGV4PC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+dHlwZTwvc3Bhbj4pID0mZ3Q7PC9zcGFuPiB7XFxuICAgICAgICByZXR1cm4gPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7PHNwYW4gY2xhc3M9XFxcImhsanMtbmFtZVxcXCI+ZGl2PC9zcGFuPiZndDs8L3NwYW4+e3sgZGF0YS5uYW1lIH19PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPmRpdjwvc3Bhbj4mZ3Q7PC9zcGFuPlxcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0OzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnA8L3NwYW4+Jmd0Ozwvc3Bhbj57eyBkYXRhLmRlc2MgfX0gfCB7eyBkYXRhLmlwIH19PHNwYW4gY2xhc3M9XFxcImhsanMtdGFnXFxcIj4mbHQ7LzxzcGFuIGNsYXNzPVxcXCJobGpzLW5hbWVcXFwiPnA8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXRhZ1xcXCI+Jmx0Oy88c3BhbiBjbGFzcz1cXFwiaGxqcy1uYW1lXFxcIj5kaXY8L3NwYW4+Jmd0Ozwvc3Bhbj5cXG4gICAgfSB9fVxcbiAgICBmaWx0ZXI9e3sgKGRhdGEsIGtleXdvcmRzKSA9Jmd0OyB7XFxuICAgICAgICByZXR1cm4gZGF0YS5uYW1lLmluY2x1ZGVzKGtleXdvcmRzKSB8fCBcXG4gICAgICAgICAgICBkYXRhLmRlc2MuaW5jbHVkZXMoa2V5d29yZHMpIHx8XFxuICAgICAgICAgICAgZGF0YS5pcC5pbmNsdWRlcyhrZXl3b3Jkcyk7XFxuICAgIH0gfX1cXG4gICAgZmlsdGVyYWJsZVxcbi8mZ3Q7PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcInN0eWxcIixcImNvbnRlbnRcIjpcIjxwcmU+PGNvZGUgY2xhc3M9XFxcImhsanMgc3R5bFxcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMtc2VsZWN0b3ItY2xhc3NcXFwiPi5rLWl0ZW08L3NwYW4+XFxuICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLXNlbGVjdG9yLXRhZ1xcXCI+cDwvc3Bhbj5cXG4gICAgICAgIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJpYnV0ZVxcXCI+bWFyZ2luPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1udW1iZXJcXFwiPjA8L3NwYW4+XFxuICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyaWJ1dGVcXFwiPmZvbnQtc2l6ZTwvc3Bhbj4gPHNwYW4gY2xhc3M9XFxcImhsanMtbnVtYmVyXFxcIj4xMnB4PC9zcGFuPjwvY29kZT48L3ByZT5cIn0se1wibGFuZ3VhZ2VcIjpcImpzXCIsXCJjb250ZW50XCI6XCI8cHJlPjxjb2RlIGNsYXNzPVxcXCJobGpzIGpzXFxcIj48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IEludGFjdCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5mcm9tPC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPidpbnRhY3QnPC9zcGFuPjtcXG48c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5pbXBvcnQ8L3NwYW4+IHRlbXBsYXRlIDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmZyb208L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+Jy4vaW5kZXgudmR0Jzwvc3Bhbj47XFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+aW1wb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicuL2luZGV4LnN0eWwnPC9zcGFuPjsgXFxuXFxuPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+ZXhwb3J0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5kZWZhdWx0PC9zcGFuPiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1jbGFzc1xcXCI+PHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+Y2xhc3M8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLWtleXdvcmRcXFwiPmV4dGVuZHM8L3NwYW4+IDxzcGFuIGNsYXNzPVxcXCJobGpzLXRpdGxlXFxcIj5JbnRhY3Q8L3NwYW4+IDwvc3Bhbj57XFxuICAgIEBJbnRhY3QudGVtcGxhdGUoKVxcbiAgICA8c3BhbiBjbGFzcz1cXFwiaGxqcy1rZXl3b3JkXFxcIj5zdGF0aWM8L3NwYW4+IHRlbXBsYXRlID0gdGVtcGxhdGU7XFxuXFxuICAgIGRlZmF1bHRzKCkge1xcbiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMta2V5d29yZFxcXCI+cmV0dXJuPC9zcGFuPiB7XFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGF0YTwvc3Bhbj46IFtcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm5hbWU8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifkuLvmnLrlkI0wJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRlc2M8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifliY3nq6/mnI3liqHlmagwJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmlwPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nMTkyLjE2OC4xLjAnPC9zcGFuPn0sXFxuICAgICAgICAgICAgICAgIHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5uYW1lPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNMSc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kZXNjPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5YmN56uv5pyN5Yqh5ZmoMSc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pcDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+JzE5Mi4xNjguMS4xJzwvc3Bhbj59LFxcbiAgICAgICAgICAgICAgICB7PHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+bmFtZTwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+S4u+acuuWQjTInPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGVzYzwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+J+WJjeerr+acjeWKoeWZqDInPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+aXA8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPicxOTIuMTY4LjEuMic8L3NwYW4+fSxcXG4gICAgICAgICAgICAgICAgezxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPm5hbWU8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifkuLvmnLrlkI0zJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmRlc2M8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1zdHJpbmdcXFwiPifliY3nq6/mnI3liqHlmagzJzwvc3Bhbj4sIDxzcGFuIGNsYXNzPVxcXCJobGpzLWF0dHJcXFwiPmlwPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4nMTkyLjE2OC4xLjMnPC9zcGFuPiwgPHNwYW4gY2xhc3M9XFxcImhsanMtYXR0clxcXCI+ZGlzYWJsZWQ8L3NwYW4+OiA8c3BhbiBjbGFzcz1cXFwiaGxqcy1saXRlcmFsXFxcIj50cnVlPC9zcGFuPn0sXFxuICAgICAgICAgICAgICAgIHs8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5uYW1lPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5Li75py65ZCNNCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5kZXNjPC9zcGFuPjogPHNwYW4gY2xhc3M9XFxcImhsanMtc3RyaW5nXFxcIj4n5YmN56uv5pyN5Yqh5ZmoNCc8L3NwYW4+LCA8c3BhbiBjbGFzcz1cXFwiaGxqcy1hdHRyXFxcIj5pcDwvc3Bhbj46IDxzcGFuIGNsYXNzPVxcXCJobGpzLXN0cmluZ1xcXCI+JzE5Mi4xNjguMS40Jzwvc3Bhbj59LFxcbiAgICAgICAgICAgIF1cXG4gICAgICAgIH1cXG4gICAgfVxcbn08L2NvZGU+PC9wcmU+XCJ9XX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NpdGUvY29tcG9uZW50cy90cmFuc2Zlci9kZW1vcy9sYWJlbC9pbmRleC5qc29uXG4vLyBtb2R1bGUgaWQgPSAuL3NpdGUvY29tcG9uZW50cy90cmFuc2Zlci9kZW1vcy9sYWJlbC9pbmRleC5qc29uXG4vLyBtb2R1bGUgY2h1bmtzID0gMiIsImltcG9ydCBJbnRhY3QgZnJvbSAnaW50YWN0JztcbmltcG9ydCB0ZW1wbGF0ZSBmcm9tICcuL2luZGV4LnZkdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGV4dGVuZHMgSW50YWN0IHtcbiAgICBASW50YWN0LnRlbXBsYXRlKClcbiAgICBzdGF0aWMgdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NpdGUvc3JjL2NvbXBvbmVudHMvYXJ0aWNsZS9pbmRleC5qcyIsImltcG9ydCB7VGFicywgVGFifSBmcm9tICdrcGMvY29tcG9uZW50cy90YWJzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG9iaiwgX1ZkdCwgYmxvY2tzLCAkY2FsbGVlKSB7XG5cbl9WZHQgfHwgKF9WZHQgPSBWZHQpO1xub2JqIHx8IChvYmogPSB7fSk7XG5ibG9ja3MgfHwgKGJsb2NrcyA9IHt9KTtcbnZhciBoID0gX1ZkdC5taXNzLmgsIGhjID0gX1ZkdC5taXNzLmhjLCBodSA9IF9WZHQubWlzcy5odSwgd2lkZ2V0cyA9IHRoaXMgJiYgdGhpcy53aWRnZXRzIHx8IHt9LCBfYmxvY2tzID0ge30sIF9fYmxvY2tzID0ge30sXG5fX3UgPSBfVmR0LnV0aWxzLCBleHRlbmQgPSBfX3UuZXh0ZW5kLCBfZSA9IF9fdS5lcnJvciwgX2NsYXNzTmFtZSA9IF9fdS5jbGFzc05hbWUsXG5fX28gPSBfX3UuT3B0aW9ucywgX2dldE1vZGVsID0gX19vLmdldE1vZGVsLCBfc2V0TW9kZWwgPSBfX28uc2V0TW9kZWwsXG5fc2V0Q2hlY2tib3hNb2RlbCA9IF9fdS5zZXRDaGVja2JveE1vZGVsLCBfZGV0ZWN0Q2hlY2tib3hDaGVja2VkID0gX191LmRldGVjdENoZWNrYm94Q2hlY2tlZCxcbl9zZXRTZWxlY3RNb2RlbCA9IF9fdS5zZXRTZWxlY3RNb2RlbCxcbnNlbGYgPSB0aGlzLmRhdGEsIHNjb3BlID0gb2JqLCBBbmltYXRlID0gc2VsZiAmJiBzZWxmLkFuaW1hdGUsIHBhcmVudCA9ICgkY2FsbGVlIHx8IHt9KS5fc3VwZXJcblxuXG5yZXR1cm4gaCgnZGl2JywgbnVsbCwgW2Z1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmdldCgnZGVtb3MnKS5sZW5ndGggXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSA/IGgoJ2RpdicsIG51bGwsIFtoKCdoMScsIG51bGwsICfnpLrkvosnKSwgJ1xcbiAgICAgICAgJywgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3NlbGYuZ2V0KCdkZW1vcycpLm1hcChEZW1vID0+IHtcbiAgICAgICAgICAgIHJldHVybiBoKCdkaXYnLCBudWxsLCBbaCgnZGl2JywgbnVsbCwgaChEZW1vLmRlZmF1bHQsIHsnY2hpbGRyZW4nOiBudWxsLCAnX2NvbnRleHQnOiB0aGlzfSksICdleGFtcGxlLW9wZXJhJyksIGgoJ2RpdicsIG51bGwsIFtoKCdkaXYnLCBudWxsLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbRGVtby5kYXRhLnNldHRpbmcudGl0bGUgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgJ3RpdGxlJyksIGgoJ2RpdicsIHsnaW5uZXJIVE1MJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW0RlbW8uZGF0YS5jb250ZW50cyBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgbnVsbCwgJ2Rlc2MnKV0sICdleGFtcGxlLWRlc2MnKSwgaCgnZGl2JywgbnVsbCwgW2goVGFicywgeydjaGlsZHJlbic6IF9WZHQudXRpbHMubWFwKGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtEZW1vLmRhdGEuaGlnaGxpZ2h0ZWQgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xucmV0dXJuIGgoVGFiLCB7J3ZhbHVlJzogZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW3ZhbHVlLmZpbGUgPyB2YWx1ZS5maWxlIDogYGluZGV4LiR7dmFsdWUubGFuZ3VhZ2V9YCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCAnY2hpbGRyZW4nOiBbJ1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLCBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbdmFsdWUuZmlsZSA/IHZhbHVlLmZpbGUgOiBgaW5kZXguJHt2YWx1ZS5sYW5ndWFnZX1gIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdcXG4gICAgICAgICAgICAgICAgICAgICAgICAnXSwgJ19jb250ZXh0JzogdGhpc30pO1xufSwgdGhpcyksICdfY29udGV4dCc6IHRoaXMsIHZhbHVlOiBfZ2V0TW9kZWwoc2VsZiwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2BmaWxlJHtEZW1vLmRhdGEuaW5kZXh9YCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpKSwgJ2V2LSRjaGFuZ2U6dmFsdWUnOiBmdW5jdGlvbihfX2MsIF9fbikgeyBfc2V0TW9kZWwoc2VsZiwgZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2BmaWxlJHtEZW1vLmRhdGEuaW5kZXh9YCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpLCBfX24pIH19KSwgaCgnZGl2Jywgeydpbm5lckhUTUwnOiBmdW5jdGlvbigpIHt0cnkge3JldHVybiBbKERlbW8uZGF0YS5oaWdobGlnaHRlZC5maW5kKGl0ZW0gPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZSA9IGl0ZW0uZmlsZSA/IGl0ZW0uZmlsZSA6IGBpbmRleC4ke2l0ZW0ubGFuZ3VhZ2V9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmaWxlID09PSBzZWxmLmdldCgnZmlsZScgKyBEZW1vLmRhdGEuaW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICB9KSB8fCB7fSkuY29udGVudCBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgbnVsbCwgJ2NvZGUnKV0sICdleGFtcGxlLWNvZGUnKV0sIF9jbGFzc05hbWUoZnVuY3Rpb24oKSB7dHJ5IHtyZXR1cm4gW2BleGFtcGxlIGluZGV4LSR7RGVtby5kYXRhLmluZGV4fWAgXVswXX0gY2F0Y2goZSkge19lKGUpfX0uY2FsbCh0aGlzKSkpXG4gICAgICAgIH0pIF1bMF19IGNhdGNoKGUpIHtfZShlKX19LmNhbGwodGhpcyksICdcXG4gICAgJ10sIG51bGwsICdkZW1vcycpIDogdW5kZWZpbmVkLCBoKCdkaXYnLCB7J2lubmVySFRNTCc6IGZ1bmN0aW9uKCkge3RyeSB7cmV0dXJuIFtzZWxmLmdldCgnY29udGVudHMnKSBdWzBdfSBjYXRjaChlKSB7X2UoZSl9fS5jYWxsKHRoaXMpfSwgbnVsbCwgJ2FwaScsICdjb250ZW50cycpXSwgJ2NvbnRlbnRzJylcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zaXRlL3NyYy9jb21wb25lbnRzL2FydGljbGUvaW5kZXgudmR0Il0sInNvdXJjZVJvb3QiOiIifQ==